<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="FSharp.Core">
      <assemblydata version="4.4.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Core</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Collections</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Control</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Linq.QueryRunExtensions.LowPriority</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® Visual Studio® [Version] [Release]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation. All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.40.23020.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.FSharp.Core">
      <topicdata group="api" />
      <apidata name="Microsoft.FSharp.Core" group="namespace" />
      <elements>
        <element api="T:Microsoft.FSharp.Core.Unit" />
        <element api="T:Microsoft.FSharp.Core.SourceConstructFlags" />
        <element api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" />
        <element api="T:Microsoft.FSharp.Core.SealedAttribute" />
        <element api="T:Microsoft.FSharp.Core.AbstractClassAttribute" />
        <element api="T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute" />
        <element api="T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute" />
        <element api="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" />
        <element api="T:Microsoft.FSharp.Core.VolatileFieldAttribute" />
        <element api="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" />
        <element api="T:Microsoft.FSharp.Core.CLIEventAttribute" />
        <element api="T:Microsoft.FSharp.Core.CLIMutableAttribute" />
        <element api="T:Microsoft.FSharp.Core.AutoSerializableAttribute" />
        <element api="T:Microsoft.FSharp.Core.DefaultValueAttribute" />
        <element api="T:Microsoft.FSharp.Core.EntryPointAttribute" />
        <element api="T:Microsoft.FSharp.Core.ReferenceEqualityAttribute" />
        <element api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" />
        <element api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" />
        <element api="T:Microsoft.FSharp.Core.NoEqualityAttribute" />
        <element api="T:Microsoft.FSharp.Core.CustomEqualityAttribute" />
        <element api="T:Microsoft.FSharp.Core.CustomComparisonAttribute" />
        <element api="T:Microsoft.FSharp.Core.NoComparisonAttribute" />
        <element api="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" />
        <element api="T:Microsoft.FSharp.Core.CompiledNameAttribute" />
        <element api="T:Microsoft.FSharp.Core.StructAttribute" />
        <element api="T:Microsoft.FSharp.Core.MeasureAttribute" />
        <element api="T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute" />
        <element api="T:Microsoft.FSharp.Core.InterfaceAttribute" />
        <element api="T:Microsoft.FSharp.Core.ClassAttribute" />
        <element api="T:Microsoft.FSharp.Core.LiteralAttribute" />
        <element api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" />
        <element api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" />
        <element api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" />
        <element api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" />
        <element api="T:Microsoft.FSharp.Core.ExperimentalAttribute" />
        <element api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" />
        <element api="T:Microsoft.FSharp.Core.CustomOperationAttribute" />
        <element api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" />
        <element api="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" />
        <element api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" />
        <element api="T:Microsoft.FSharp.Core.UnverifiableAttribute" />
        <element api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" />
        <element api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" />
        <element api="T:Microsoft.FSharp.Core.GeneralizableValueAttribute" />
        <element api="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" />
        <element api="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" />
        <element api="T:Microsoft.FSharp.Core.AutoOpenAttribute" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`2.Tags" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`3.Tags" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7" />
        <element api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7" />
        <element api="T:Microsoft.FSharp.Core.MatchFailureException" />
        <element api="T:Microsoft.FSharp.Core.FSharpTypeFunc" />
        <element api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
        <element api="T:Microsoft.FSharp.Core.FuncConvert" />
        <element api="T:Microsoft.FSharp.Core.FSharpRef`1" />
        <element api="T:Microsoft.FSharp.Core.FSharpOption`1" />
        <element api="T:Microsoft.FSharp.Core.FSharpOption`1.Tags" />
        <element api="T:Microsoft.FSharp.Core.PrintfFormat`4" />
        <element api="T:Microsoft.FSharp.Core.PrintfFormat`5" />
        <element api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" />
        <element api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked" />
        <element api="T:Microsoft.FSharp.Core.PrintfModule" />
        <element api="T:Microsoft.FSharp.Core.NumericLiterals" />
        <element api="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" />
        <element api="T:Microsoft.FSharp.Core.StringModule" />
        <element api="T:Microsoft.FSharp.Core.OptionModule" />
        <element api="T:Microsoft.FSharp.Core.Operators" />
        <element api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" />
        <element api="T:Microsoft.FSharp.Core.Operators.Checked" />
        <element api="T:Microsoft.FSharp.Core.Operators.Unchecked" />
        <element api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" />
        <element api="T:Microsoft.FSharp.Core.OptimizedClosures" />
        <element api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
        <element api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
        <element api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
        <element api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
        <element api="T:Microsoft.FSharp.Core.LanguagePrimitives" />
        <element api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" />
        <element api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" />
        <element api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" />
        <element api="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" />
      </elements>
      <file name="b6b0738f-4c35-ae19-26ba-beafef3e686e" />
    </api>
    <api id="T:Microsoft.FSharp.Core.AbstractClassAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.AbstractClassAttribute" />
      <apidata name="AbstractClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AbstractClassAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6e016568-d3fa-1d5e-1dd3-86a434b6737d" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.AbstractClassAttribute">
      <topicdata name="AbstractClassAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.AbstractClassAttribute" />
      <apidata name="AbstractClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AbstractClassAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.AbstractClassAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" />
      </containers>
      <file name="26d70521-ca8c-7b71-8e8b-0a616a19f062" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.AbstractClassAttribute">
      <topicdata name="AbstractClassAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.AbstractClassAttribute" />
      <apidata name="AbstractClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AbstractClassAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" />
      </containers>
      <file name="d38e6abc-0e95-12be-dce8-4c5e9d08a3c2" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.AbstractClassAttribute">
      <topicdata name="AbstractClassAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.AbstractClassAttribute" />
      <apidata name="AbstractClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AbstractClassAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" />
      </containers>
      <file name="94ee7718-a5e9-1951-1add-bbc0a795d7ee" />
    </api>
    <api id="M:Microsoft.FSharp.Core.AbstractClassAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" ref="true" />
      </containers>
      <file name="32356a24-1465-13b7-a4dc-ccff261801dd" />
    </api>
    <api id="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" />
      <apidata name="AllowNullLiteralAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e4125ea5-62d4-5cb6-8e84-b4b7065389ca" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.AllowNullLiteralAttribute">
      <topicdata name="AllowNullLiteralAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" />
      <apidata name="AllowNullLiteralAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor" />
      <elements>
        <element api="Overload:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor">
          <element api="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor" />
          <element api="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor(System.Boolean)" />
        </element>
        <element api="P:Microsoft.FSharp.Core.AllowNullLiteralAttribute.Value" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" />
      </containers>
      <file name="a7a819ae-673d-d139-45b5-11169f9496b0" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.AllowNullLiteralAttribute">
      <topicdata name="AllowNullLiteralAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" />
      <apidata name="AllowNullLiteralAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" />
      </containers>
      <file name="8f12eef7-1f86-d822-47a1-30040cdd951c" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.AllowNullLiteralAttribute">
      <topicdata name="AllowNullLiteralAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" />
      <apidata name="AllowNullLiteralAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.AllowNullLiteralAttribute.Value" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" />
      </containers>
      <file name="ae606b18-0735-4022-2500-4bec670ed634" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor" />
        <element api="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" ref="true" />
      </containers>
      <file name="710a397e-86fd-6be1-2309-ed5ec6f01947" />
    </api>
    <api id="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" ref="true" />
      </containers>
      <file name="b9599cc4-b2fe-7200-31ef-28979adba44b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.AllowNullLiteralAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" ref="true" />
      </containers>
      <file name="bb078d01-26a8-0e2f-c6ce-85f35eb7d2e1" />
    </api>
    <api id="P:Microsoft.FSharp.Core.AllowNullLiteralAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AllowNullLiteralAttribute" ref="true" />
      </containers>
      <file name="d6a1b237-2b6d-c50e-232f-6dc239a6512e" />
    </api>
    <api id="T:Microsoft.FSharp.Core.AutoOpenAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.AutoOpenAttribute" />
      <apidata name="AutoOpenAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="12200937-f128-d0f6-03d3-f39bfef2097b" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.AutoOpenAttribute">
      <topicdata name="AutoOpenAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.AutoOpenAttribute" />
      <apidata name="AutoOpenAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor" />
      <elements>
        <element api="Overload:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor">
          <element api="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor" />
          <element api="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor(System.String)" />
        </element>
        <element api="P:Microsoft.FSharp.Core.AutoOpenAttribute.Path" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" />
      </containers>
      <file name="6abea67b-5ebb-21dc-7130-45f3b8327f4c" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.AutoOpenAttribute">
      <topicdata name="AutoOpenAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.AutoOpenAttribute" />
      <apidata name="AutoOpenAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" />
      </containers>
      <file name="b4f0d017-7610-73e4-6832-dac834577e23" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.AutoOpenAttribute">
      <topicdata name="AutoOpenAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.AutoOpenAttribute" />
      <apidata name="AutoOpenAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.AutoOpenAttribute.Path" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" />
      </containers>
      <file name="e0fd5ffa-bd35-295e-f573-9bb2aaebc6f4" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.AutoOpenAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor" />
        <element api="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
      </containers>
      <file name="14a1c8e2-f1a4-9389-4c60-6daac7cb1412" />
    </api>
    <api id="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
      </containers>
      <file name="d7b88e5c-71e0-87db-81c6-ad8b1caa39ae" />
    </api>
    <api id="M:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.AutoOpenAttribute.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
      </containers>
      <file name="a63420a8-334d-1dcc-6b6f-c84b911c6792" />
    </api>
    <api id="P:Microsoft.FSharp.Core.AutoOpenAttribute.Path">
      <topicdata group="api" />
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
      </containers>
      <file name="4dfa7d4b-6b52-4876-7590-9763fd3eac54" />
    </api>
    <api id="T:Microsoft.FSharp.Core.AutoSerializableAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.AutoSerializableAttribute" />
      <apidata name="AutoSerializableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="dc1fbe3f-433f-2b7f-baae-304c8f1dcee9" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.AutoSerializableAttribute">
      <topicdata name="AutoSerializableAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.AutoSerializableAttribute" />
      <apidata name="AutoSerializableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.AutoSerializableAttribute.#ctor(System.Boolean)" />
        <element api="P:Microsoft.FSharp.Core.AutoSerializableAttribute.Value" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoSerializableAttribute" />
      </containers>
      <file name="14c943fb-bf7b-995a-2f05-1d6b9eddac08" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.AutoSerializableAttribute">
      <topicdata name="AutoSerializableAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.AutoSerializableAttribute" />
      <apidata name="AutoSerializableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoSerializableAttribute" />
      </containers>
      <file name="5f2420be-9f2d-b420-9cf2-dce7485ceea5" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.AutoSerializableAttribute">
      <topicdata name="AutoSerializableAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.AutoSerializableAttribute" />
      <apidata name="AutoSerializableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.AutoSerializableAttribute.Value" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoSerializableAttribute" />
      </containers>
      <file name="348e82fe-6bc8-ef62-dabe-e43b4648f363" />
    </api>
    <api id="M:Microsoft.FSharp.Core.AutoSerializableAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoSerializableAttribute" ref="true" />
      </containers>
      <file name="2577813a-5cc5-dcf4-bef1-d86018c6d101" />
    </api>
    <api id="P:Microsoft.FSharp.Core.AutoSerializableAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.AutoSerializableAttribute" ref="true" />
      </containers>
      <file name="03463f24-b211-ce47-1bbf-8a09c3b72f2a" />
    </api>
    <api id="T:Microsoft.FSharp.Core.ClassAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.ClassAttribute" />
      <apidata name="ClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ClassAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="aadce684-083c-a093-472f-8e9ac856cd9d" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.ClassAttribute">
      <topicdata name="ClassAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.ClassAttribute" />
      <apidata name="ClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ClassAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.ClassAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ClassAttribute" />
      </containers>
      <file name="2010d7ad-6875-e54d-9c3d-dad9c183c31a" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.ClassAttribute">
      <topicdata name="ClassAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.ClassAttribute" />
      <apidata name="ClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ClassAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ClassAttribute" />
      </containers>
      <file name="e21c18da-4ce6-1a86-4817-ce6d64b9bdf6" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.ClassAttribute">
      <topicdata name="ClassAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.ClassAttribute" />
      <apidata name="ClassAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ClassAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ClassAttribute" />
      </containers>
      <file name="3cc0e729-35c2-53ac-2bb0-c6c4aece86a6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ClassAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ClassAttribute" ref="true" />
      </containers>
      <file name="931476e5-f6e3-4720-f4d4-5d6f1a0490fa" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CLIEventAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CLIEventAttribute" />
      <apidata name="CLIEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CLIEventAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="c755956b-2011-2c99-ef53-8ec2ef6f8d62" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CLIEventAttribute">
      <topicdata name="CLIEventAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CLIEventAttribute" />
      <apidata name="CLIEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CLIEventAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CLIEventAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CLIEventAttribute" />
      </containers>
      <file name="093bf30e-fc2f-eeaf-9578-1d0784e52820" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CLIEventAttribute">
      <topicdata name="CLIEventAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CLIEventAttribute" />
      <apidata name="CLIEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CLIEventAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CLIEventAttribute" />
      </containers>
      <file name="9319e045-3782-5f3c-08d7-5b290550e28b" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CLIEventAttribute">
      <topicdata name="CLIEventAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CLIEventAttribute" />
      <apidata name="CLIEventAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CLIEventAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CLIEventAttribute" />
      </containers>
      <file name="f5e3e6ab-6a87-f83a-8a26-4f5c75adce46" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CLIEventAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CLIEventAttribute" ref="true" />
      </containers>
      <file name="059da320-07d2-5758-754d-424211825b6b" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CLIMutableAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CLIMutableAttribute" />
      <apidata name="CLIMutableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CLIMutableAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="98d28704-f5d4-bf62-e39b-cfbbeb77a4e8" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CLIMutableAttribute">
      <topicdata name="CLIMutableAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CLIMutableAttribute" />
      <apidata name="CLIMutableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CLIMutableAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CLIMutableAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CLIMutableAttribute" />
      </containers>
      <file name="cce6a5db-e63f-b563-21c6-32f38d747b7d" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CLIMutableAttribute">
      <topicdata name="CLIMutableAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CLIMutableAttribute" />
      <apidata name="CLIMutableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CLIMutableAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CLIMutableAttribute" />
      </containers>
      <file name="cd21385f-6e5b-4ec8-e00e-b49fc6cf0475" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CLIMutableAttribute">
      <topicdata name="CLIMutableAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CLIMutableAttribute" />
      <apidata name="CLIMutableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CLIMutableAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CLIMutableAttribute" />
      </containers>
      <file name="0a2dc1e2-9b40-e122-0740-a82e986ecaf8" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CLIMutableAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CLIMutableAttribute" ref="true" />
      </containers>
      <file name="363cc2f2-ec2c-3a23-08df-73fb5a6d390d" />
    </api>
    <api id="T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute" />
      <apidata name="ComparisonConditionalOnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="GenericParameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="5927c0ad-3d00-6007-5dd9-bc90209b43c1" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute">
      <topicdata name="ComparisonConditionalOnAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute" />
      <apidata name="ComparisonConditionalOnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute" />
      </containers>
      <file name="0e574217-a3f4-2780-f6ac-608f1bd16067" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute">
      <topicdata name="ComparisonConditionalOnAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute" />
      <apidata name="ComparisonConditionalOnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute" />
      </containers>
      <file name="8ecc813b-6ed7-e54d-cb4a-cf9b2aa5131e" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute">
      <topicdata name="ComparisonConditionalOnAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute" />
      <apidata name="ComparisonConditionalOnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute" />
      </containers>
      <file name="330c3a6f-9ac7-2734-5c49-620c5a32a9ca" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ComparisonConditionalOnAttribute" ref="true" />
      </containers>
      <file name="e9ce90ad-d06d-c0d8-3200-6aff6310314c" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" />
      <apidata name="CompilationArgumentCountsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="af5c0c55-376e-ab92-483c-7a2607fc295f" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute">
      <topicdata name="CompilationArgumentCountsAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" />
      <apidata name="CompilationArgumentCountsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute.#ctor(System.Int32[])" />
        <element api="P:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute.Counts" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" />
      </containers>
      <file name="13b140af-a1bd-2d87-468a-e05c24a94a95" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute">
      <topicdata name="CompilationArgumentCountsAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" />
      <apidata name="CompilationArgumentCountsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" />
      </containers>
      <file name="007c893c-529b-eb36-82e3-b47849adcb7f" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute">
      <topicdata name="CompilationArgumentCountsAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" />
      <apidata name="CompilationArgumentCountsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute.Counts" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" />
      </containers>
      <file name="e1e4b82d-4a93-3785-bd15-9a61958ca946" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute.#ctor(System.Int32[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="counts">
          <arrayOf rank="1">
            <type api="T:System.Int32" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
      </containers>
      <file name="7c061de6-49c5-1f4a-a0a0-788ea01fbbf5" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute.Counts">
      <topicdata group="api" />
      <apidata name="Counts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Counts" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
      </containers>
      <file name="ba2b15e8-966f-2f32-78fa-cef7c0f29e56" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CompilationMappingAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CompilationMappingAttribute" />
      <apidata name="CompilationMappingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3e7e9692-adbe-f740-aa87-a456b45b4523" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CompilationMappingAttribute">
      <topicdata name="CompilationMappingAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CompilationMappingAttribute" />
      <apidata name="CompilationMappingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="Overload:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor">
          <element api="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags)" />
          <element api="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags,System.Int32)" />
          <element api="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(System.String,System.Type[])" />
          <element api="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags,System.Int32,System.Int32)" />
        </element>
        <element api="P:Microsoft.FSharp.Core.CompilationMappingAttribute.ResourceName" />
        <element api="P:Microsoft.FSharp.Core.CompilationMappingAttribute.SequenceNumber" />
        <element api="P:Microsoft.FSharp.Core.CompilationMappingAttribute.SourceConstructFlags" />
        <element api="P:Microsoft.FSharp.Core.CompilationMappingAttribute.TypeDefinitions" />
        <element api="P:Microsoft.FSharp.Core.CompilationMappingAttribute.VariantNumber" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" />
      </containers>
      <file name="c1ab096f-0721-5fba-755d-a966f3bc09d7" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CompilationMappingAttribute">
      <topicdata name="CompilationMappingAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CompilationMappingAttribute" />
      <apidata name="CompilationMappingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" />
      </containers>
      <file name="9b823aed-43d6-0ded-b69c-f613a9a17bd2" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CompilationMappingAttribute">
      <topicdata name="CompilationMappingAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CompilationMappingAttribute" />
      <apidata name="CompilationMappingAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.CompilationMappingAttribute.ResourceName" />
        <element api="P:Microsoft.FSharp.Core.CompilationMappingAttribute.SequenceNumber" />
        <element api="P:Microsoft.FSharp.Core.CompilationMappingAttribute.SourceConstructFlags" />
        <element api="P:Microsoft.FSharp.Core.CompilationMappingAttribute.TypeDefinitions" />
        <element api="P:Microsoft.FSharp.Core.CompilationMappingAttribute.VariantNumber" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" />
      </containers>
      <file name="8856b2df-9fb0-bd7d-c5da-66a828072af8" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CompilationMappingAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags)" />
        <element api="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(System.String,System.Type[])" />
        <element api="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
      </containers>
      <file name="ecb068ba-98ea-592a-3c52-379994ee1798" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor" />
      <parameters>
        <parameter name="sourceConstructFlags">
          <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
      </containers>
      <file name="bbd04048-77cb-9959-13fc-8f4ff0b13e1e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor" />
      <parameters>
        <parameter name="sourceConstructFlags">
          <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
        </parameter>
        <parameter name="sequenceNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
      </containers>
      <file name="40a21c79-0ff6-a7e9-82ef-f0c7776e2d1e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(Microsoft.FSharp.Core.SourceConstructFlags,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor" />
      <parameters>
        <parameter name="sourceConstructFlags">
          <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
        </parameter>
        <parameter name="variantNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sequenceNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
      </containers>
      <file name="550d4d9a-df46-af8e-43a4-6e2da359bc23" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor(System.String,System.Type[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.CompilationMappingAttribute.#ctor" />
      <parameters>
        <parameter name="resourceName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typeDefinitions">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
      </containers>
      <file name="dffad1b0-bc6a-d137-da8f-71419a71495e" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilationMappingAttribute.ResourceName">
      <topicdata group="api" />
      <apidata name="ResourceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResourceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
      </containers>
      <file name="993feed0-9be6-4af7-3ea2-5d69045cb019" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilationMappingAttribute.SequenceNumber">
      <topicdata group="api" />
      <apidata name="SequenceNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SequenceNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
      </containers>
      <file name="f90fb98c-25a0-26a8-262f-38623af9f388" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilationMappingAttribute.SourceConstructFlags">
      <topicdata group="api" />
      <apidata name="SourceConstructFlags" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceConstructFlags" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
      </containers>
      <file name="b8932d36-19df-24a1-0f29-380e29e9cdcc" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilationMappingAttribute.TypeDefinitions">
      <topicdata group="api" />
      <apidata name="TypeDefinitions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TypeDefinitions" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Type" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
      </containers>
      <file name="485f15e5-8295-d055-fe3a-0ce4a5f323bd" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilationMappingAttribute.VariantNumber">
      <topicdata group="api" />
      <apidata name="VariantNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_VariantNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
      </containers>
      <file name="f3e87f23-e0cb-78b6-55f8-2f6e30eb7d38" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" />
      <apidata name="CompilationRepresentationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f8131979-9308-2d9f-7f6f-2d3fd71224e4" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CompilationRepresentationAttribute">
      <topicdata name="CompilationRepresentationAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" />
      <apidata name="CompilationRepresentationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CompilationRepresentationAttribute.#ctor(Microsoft.FSharp.Core.CompilationRepresentationFlags)" />
        <element api="P:Microsoft.FSharp.Core.CompilationRepresentationAttribute.Flags" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" />
      </containers>
      <file name="3058cdb8-f7ba-f80c-f144-cb6c5aa79a9e" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CompilationRepresentationAttribute">
      <topicdata name="CompilationRepresentationAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" />
      <apidata name="CompilationRepresentationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" />
      </containers>
      <file name="8757e3ef-c649-b224-3c41-c9859c46a851" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CompilationRepresentationAttribute">
      <topicdata name="CompilationRepresentationAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" />
      <apidata name="CompilationRepresentationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.CompilationRepresentationAttribute.Flags" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" />
      </containers>
      <file name="644ca4a3-6afd-4115-98c5-38e65eb17a6f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CompilationRepresentationAttribute.#ctor(Microsoft.FSharp.Core.CompilationRepresentationFlags)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="flags">
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
      </containers>
      <file name="8e6768e1-eeab-dfc7-f20c-9abb56d599b3" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilationRepresentationAttribute.Flags">
      <topicdata group="api" />
      <apidata name="Flags" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Flags" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
      </containers>
      <file name="09a4310f-2690-fad7-a41b-ce95352c5df3" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CompilationRepresentationFlags">
      <topicdata group="api" />
      <apidata name="CompilationRepresentationFlags" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.None" />
        <element api="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.Static" />
        <element api="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.Instance" />
        <element api="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.ModuleSuffix" />
        <element api="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.UseNullAsTrueValue" />
        <element api="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.Event" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="508a7c66-85f8-80bc-48ba-d5eda98b7048" />
    </api>
    <api id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.Event">
      <topicdata group="api" notopic="" />
      <apidata name="Event" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </containers>
      <file name="7420b0c3-ecad-bdf6-e792-556b430c9cad" />
    </api>
    <api id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.Instance">
      <topicdata group="api" notopic="" />
      <apidata name="Instance" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </containers>
      <file name="867dc6fb-9b2b-0c99-c448-60777d2979c5" />
    </api>
    <api id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.ModuleSuffix">
      <topicdata group="api" notopic="" />
      <apidata name="ModuleSuffix" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </containers>
      <file name="9f8c1b9f-a6b1-f041-e3a2-624044ea9abb" />
    </api>
    <api id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </containers>
      <file name="a709d9f0-c4a0-ff6c-3a35-0cfc9abee8f1" />
    </api>
    <api id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.Static">
      <topicdata group="api" notopic="" />
      <apidata name="Static" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </containers>
      <file name="57ff8806-e44e-0ad0-c913-f8dbd3128b30" />
    </api>
    <api id="F:Microsoft.FSharp.Core.CompilationRepresentationFlags.UseNullAsTrueValue">
      <topicdata group="api" notopic="" />
      <apidata name="UseNullAsTrueValue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
      </containers>
      <file name="09300339-8ed4-1b7d-5f4b-8b75112a37f1" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" />
      <apidata name="CompilationSourceNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="d86b13a8-61cc-948b-015d-034d3676d25e" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CompilationSourceNameAttribute">
      <topicdata name="CompilationSourceNameAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" />
      <apidata name="CompilationSourceNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CompilationSourceNameAttribute.#ctor(System.String)" />
        <element api="P:Microsoft.FSharp.Core.CompilationSourceNameAttribute.SourceName" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" />
      </containers>
      <file name="266c1db5-b7ea-5207-da1b-fc06e340f201" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CompilationSourceNameAttribute">
      <topicdata name="CompilationSourceNameAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" />
      <apidata name="CompilationSourceNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" />
      </containers>
      <file name="4c7cd28d-5281-3f85-9cdc-fd04aebcd40a" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CompilationSourceNameAttribute">
      <topicdata name="CompilationSourceNameAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" />
      <apidata name="CompilationSourceNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.CompilationSourceNameAttribute.SourceName" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" />
      </containers>
      <file name="15cb9052-10b5-fb12-d15a-3a5be174ab59" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CompilationSourceNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sourceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
      </containers>
      <file name="d7b38b65-a125-73aa-1984-79dd8cebf955" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilationSourceNameAttribute.SourceName">
      <topicdata group="api" />
      <apidata name="SourceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SourceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
      </containers>
      <file name="3805644b-fda5-f172-0854-7436515b349c" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CompiledNameAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CompiledNameAttribute" />
      <apidata name="CompiledNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Enum" />
              <field name="Method" />
              <field name="Property" />
              <field name="Field" />
              <field name="Interface" />
              <field name="Delegate" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b9cb54a7-3b74-1df8-3286-555e8defb986" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CompiledNameAttribute">
      <topicdata name="CompiledNameAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CompiledNameAttribute" />
      <apidata name="CompiledNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CompiledNameAttribute.#ctor(System.String)" />
        <element api="P:Microsoft.FSharp.Core.CompiledNameAttribute.CompiledName" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" />
      </containers>
      <file name="85fe62e1-f017-9193-dede-c80a41de6e2b" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CompiledNameAttribute">
      <topicdata name="CompiledNameAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CompiledNameAttribute" />
      <apidata name="CompiledNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" />
      </containers>
      <file name="35a3f6a7-a346-bbcb-9217-f3afebd1fd47" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CompiledNameAttribute">
      <topicdata name="CompiledNameAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CompiledNameAttribute" />
      <apidata name="CompiledNameAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.CompiledNameAttribute.CompiledName" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" />
      </containers>
      <file name="d7707cd0-4f26-001c-2c8a-54874c90b620" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CompiledNameAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="compiledName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
      </containers>
      <file name="5fa390f0-2508-54c1-fe84-c9c4da78c563" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompiledNameAttribute.CompiledName">
      <topicdata group="api" />
      <apidata name="CompiledName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CompiledName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
      </containers>
      <file name="6a928718-49eb-93a1-25e0-54a43378423c" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CompilerMessageAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CompilerMessageAttribute" />
      <apidata name="CompilerMessageAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f506aeb8-ecb5-e8b2-928f-3c48d63ca707" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CompilerMessageAttribute">
      <topicdata name="CompilerMessageAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CompilerMessageAttribute" />
      <apidata name="CompilerMessageAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CompilerMessageAttribute.#ctor(System.String,System.Int32)" />
        <element api="P:Microsoft.FSharp.Core.CompilerMessageAttribute.IsError" />
        <element api="P:Microsoft.FSharp.Core.CompilerMessageAttribute.IsHidden" />
        <element api="P:Microsoft.FSharp.Core.CompilerMessageAttribute.Message" />
        <element api="P:Microsoft.FSharp.Core.CompilerMessageAttribute.MessageNumber" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" />
      </containers>
      <file name="d8eb13f7-3cdf-59e6-8e7a-352db37d184f" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CompilerMessageAttribute">
      <topicdata name="CompilerMessageAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CompilerMessageAttribute" />
      <apidata name="CompilerMessageAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" />
      </containers>
      <file name="1a16cce9-3ab8-97c1-e7bd-cc7106b2fe02" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CompilerMessageAttribute">
      <topicdata name="CompilerMessageAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CompilerMessageAttribute" />
      <apidata name="CompilerMessageAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.CompilerMessageAttribute.IsError" />
        <element api="P:Microsoft.FSharp.Core.CompilerMessageAttribute.IsHidden" />
        <element api="P:Microsoft.FSharp.Core.CompilerMessageAttribute.Message" />
        <element api="P:Microsoft.FSharp.Core.CompilerMessageAttribute.MessageNumber" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" />
      </containers>
      <file name="47003668-cfd5-b762-0be0-8b4664ef8211" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CompilerMessageAttribute.#ctor(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="messageNumber">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
      </containers>
      <file name="96ad4ca2-38e8-e072-c7f0-defce2df82fd" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilerMessageAttribute.IsError">
      <topicdata group="api" />
      <apidata name="IsError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsError" />
      <setter name="set_IsError" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
      </containers>
      <file name="8345eb19-2a7d-6bd5-59db-58d893b8cbf8" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilerMessageAttribute.IsHidden">
      <topicdata group="api" />
      <apidata name="IsHidden" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsHidden" />
      <setter name="set_IsHidden" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
      </containers>
      <file name="3d958eab-708d-7008-1ec8-411174fdd529" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilerMessageAttribute.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
      </containers>
      <file name="88f01eed-1e94-8c08-5794-0e6063382fce" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CompilerMessageAttribute.MessageNumber">
      <topicdata group="api" />
      <apidata name="MessageNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
      </containers>
      <file name="8914a537-dbd1-6c20-cd40-b02ea5f82096" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CustomComparisonAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CustomComparisonAttribute" />
      <apidata name="CustomComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CustomComparisonAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6e05fe41-ebab-66cb-53c1-e3b14bcf2482" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CustomComparisonAttribute">
      <topicdata name="CustomComparisonAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CustomComparisonAttribute" />
      <apidata name="CustomComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CustomComparisonAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CustomComparisonAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomComparisonAttribute" />
      </containers>
      <file name="6962b6c6-c9f7-a228-fb04-4028da25d911" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CustomComparisonAttribute">
      <topicdata name="CustomComparisonAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CustomComparisonAttribute" />
      <apidata name="CustomComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CustomComparisonAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomComparisonAttribute" />
      </containers>
      <file name="4b8405c3-ea78-92fc-f462-189224e506e1" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CustomComparisonAttribute">
      <topicdata name="CustomComparisonAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CustomComparisonAttribute" />
      <apidata name="CustomComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CustomComparisonAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomComparisonAttribute" />
      </containers>
      <file name="7324ee4f-4384-b4f1-14fe-d7a504dceed4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CustomComparisonAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomComparisonAttribute" ref="true" />
      </containers>
      <file name="be3cab9f-3392-07c5-9f53-64be4fc434d0" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CustomEqualityAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CustomEqualityAttribute" />
      <apidata name="CustomEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CustomEqualityAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="315b8b5f-d57e-a92e-b0c5-ea30befb9281" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CustomEqualityAttribute">
      <topicdata name="CustomEqualityAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CustomEqualityAttribute" />
      <apidata name="CustomEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CustomEqualityAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CustomEqualityAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomEqualityAttribute" />
      </containers>
      <file name="cd4065c9-beaf-14d8-38be-ad957f7ce2d2" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CustomEqualityAttribute">
      <topicdata name="CustomEqualityAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CustomEqualityAttribute" />
      <apidata name="CustomEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CustomEqualityAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomEqualityAttribute" />
      </containers>
      <file name="dd2a7130-312d-1d22-71f3-1c1b82e434ab" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CustomEqualityAttribute">
      <topicdata name="CustomEqualityAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CustomEqualityAttribute" />
      <apidata name="CustomEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.CustomEqualityAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomEqualityAttribute" />
      </containers>
      <file name="4cc686f3-a8cb-e78d-1016-40989a4245aa" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CustomEqualityAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomEqualityAttribute" ref="true" />
      </containers>
      <file name="a1cf4ca3-ab17-dd10-eda5-b8c5e9505b43" />
    </api>
    <api id="T:Microsoft.FSharp.Core.CustomOperationAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.CustomOperationAttribute" />
      <apidata name="CustomOperationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="c0d2e51f-237e-01e9-c8b2-7f894d4c2fe2" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.CustomOperationAttribute">
      <topicdata name="CustomOperationAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.CustomOperationAttribute" />
      <apidata name="CustomOperationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.CustomOperationAttribute.#ctor(System.String)" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.AllowIntoPattern" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeGroupJoin" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeJoin" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeZip" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.JoinConditionWord" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.MaintainsVariableSpace" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.MaintainsVariableSpaceUsingBind" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.Name" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" />
      </containers>
      <file name="86384ceb-8603-1129-708e-f6f89e46e70d" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.CustomOperationAttribute">
      <topicdata name="CustomOperationAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.CustomOperationAttribute" />
      <apidata name="CustomOperationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" />
      </containers>
      <file name="85246350-d32b-ec2f-ea97-14df44ae6d78" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.CustomOperationAttribute">
      <topicdata name="CustomOperationAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.CustomOperationAttribute" />
      <apidata name="CustomOperationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.AllowIntoPattern" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeGroupJoin" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeJoin" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeZip" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.JoinConditionWord" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.MaintainsVariableSpace" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.MaintainsVariableSpaceUsingBind" />
        <element api="P:Microsoft.FSharp.Core.CustomOperationAttribute.Name" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" />
      </containers>
      <file name="1a1be174-9912-0b8b-a630-2b434bd8e89d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.CustomOperationAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
      </containers>
      <file name="d1166de1-d83e-ced2-6e96-a93f0928bdbb" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CustomOperationAttribute.AllowIntoPattern">
      <topicdata group="api" />
      <apidata name="AllowIntoPattern" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowIntoPattern" />
      <setter name="set_AllowIntoPattern" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
      </containers>
      <file name="ea4221ce-3894-0a59-9b26-de816858ad13" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeGroupJoin">
      <topicdata group="api" />
      <apidata name="IsLikeGroupJoin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLikeGroupJoin" />
      <setter name="set_IsLikeGroupJoin" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
      </containers>
      <file name="b4d78ef1-d5ab-516f-f4b1-4db7074ab801" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeJoin">
      <topicdata group="api" />
      <apidata name="IsLikeJoin" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLikeJoin" />
      <setter name="set_IsLikeJoin" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
      </containers>
      <file name="20c8d923-97f1-bb1b-1f44-92953a0926de" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CustomOperationAttribute.IsLikeZip">
      <topicdata group="api" />
      <apidata name="IsLikeZip" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsLikeZip" />
      <setter name="set_IsLikeZip" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
      </containers>
      <file name="5cf9884d-b6b2-bf09-1065-fa7949f6d67d" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CustomOperationAttribute.JoinConditionWord">
      <topicdata group="api" />
      <apidata name="JoinConditionWord" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_JoinConditionWord" />
      <setter name="set_JoinConditionWord" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
      </containers>
      <file name="a744c53e-69a6-2a01-9b4e-698a8009fc74" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CustomOperationAttribute.MaintainsVariableSpace">
      <topicdata group="api" />
      <apidata name="MaintainsVariableSpace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaintainsVariableSpace" />
      <setter name="set_MaintainsVariableSpace" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
      </containers>
      <file name="bdbdc5e0-b837-1c08-7021-d0efec083b75" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CustomOperationAttribute.MaintainsVariableSpaceUsingBind">
      <topicdata group="api" />
      <apidata name="MaintainsVariableSpaceUsingBind" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaintainsVariableSpaceUsingBind" />
      <setter name="set_MaintainsVariableSpaceUsingBind" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
      </containers>
      <file name="f6afbada-1041-295d-e45a-fca20e88a79b" />
    </api>
    <api id="P:Microsoft.FSharp.Core.CustomOperationAttribute.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.CustomOperationAttribute" ref="true" />
      </containers>
      <file name="02005345-787f-af18-45e0-cda61764e812" />
    </api>
    <api id="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" />
      <apidata name="DefaultAugmentationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="8c825448-f7d4-cc34-6639-8a47011bb790" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.DefaultAugmentationAttribute">
      <topicdata name="DefaultAugmentationAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" />
      <apidata name="DefaultAugmentationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.DefaultAugmentationAttribute.#ctor(System.Boolean)" />
        <element api="P:Microsoft.FSharp.Core.DefaultAugmentationAttribute.Value" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" />
      </containers>
      <file name="661170e0-7063-fa6b-b782-00ee481e45b2" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.DefaultAugmentationAttribute">
      <topicdata name="DefaultAugmentationAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" />
      <apidata name="DefaultAugmentationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" />
      </containers>
      <file name="bb98c5fa-1797-7e33-af57-1da18d3f079b" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.DefaultAugmentationAttribute">
      <topicdata name="DefaultAugmentationAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" />
      <apidata name="DefaultAugmentationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.DefaultAugmentationAttribute.Value" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" />
      </containers>
      <file name="52a7d7f6-0b84-bcb7-c9ef-27e555eb7468" />
    </api>
    <api id="M:Microsoft.FSharp.Core.DefaultAugmentationAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" ref="true" />
      </containers>
      <file name="25058928-404f-844f-a7e8-c1c16b0d9668" />
    </api>
    <api id="P:Microsoft.FSharp.Core.DefaultAugmentationAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" ref="true" />
      </containers>
      <file name="9b4364fb-183a-1385-dfc0-4653ada3738c" />
    </api>
    <api id="T:Microsoft.FSharp.Core.DefaultValueAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.DefaultValueAttribute" />
      <apidata name="DefaultValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a1d07bfe-2e93-dd76-1ddf-071ad73ad448" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.DefaultValueAttribute">
      <topicdata name="DefaultValueAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.DefaultValueAttribute" />
      <apidata name="DefaultValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor" />
      <elements>
        <element api="Overload:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor">
          <element api="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor" />
          <element api="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor(System.Boolean)" />
        </element>
        <element api="P:Microsoft.FSharp.Core.DefaultValueAttribute.Check" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultValueAttribute" />
      </containers>
      <file name="d8d08a4f-31bb-c0ab-3b8c-f639b0333196" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.DefaultValueAttribute">
      <topicdata name="DefaultValueAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.DefaultValueAttribute" />
      <apidata name="DefaultValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultValueAttribute" />
      </containers>
      <file name="0979dff1-8714-cfc8-e8f4-274b2b04228b" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.DefaultValueAttribute">
      <topicdata name="DefaultValueAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.DefaultValueAttribute" />
      <apidata name="DefaultValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.DefaultValueAttribute.Check" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultValueAttribute" />
      </containers>
      <file name="f029a60f-8d41-5502-d298-5ae2fa7031b9" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.DefaultValueAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor" />
        <element api="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultValueAttribute" ref="true" />
      </containers>
      <file name="421ba6c6-34fd-5ae2-ae2b-aa8dd3a07097" />
    </api>
    <api id="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultValueAttribute" ref="true" />
      </containers>
      <file name="14cffff4-a96b-3906-8972-4bd842fc4534" />
    </api>
    <api id="M:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.DefaultValueAttribute.#ctor" />
      <parameters>
        <parameter name="check">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultValueAttribute" ref="true" />
      </containers>
      <file name="cee5a693-22e6-2449-71bd-db1f92580e5a" />
    </api>
    <api id="P:Microsoft.FSharp.Core.DefaultValueAttribute.Check">
      <topicdata group="api" />
      <apidata name="Check" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Check" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.DefaultValueAttribute" ref="true" />
      </containers>
      <file name="902e0519-6e4f-3de9-4dc1-a860b69a4a6e" />
    </api>
    <api id="T:Microsoft.FSharp.Core.EntryPointAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.EntryPointAttribute" />
      <apidata name="EntryPointAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.EntryPointAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ffdf3e58-a6ff-483e-2265-8c117812341d" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.EntryPointAttribute">
      <topicdata name="EntryPointAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.EntryPointAttribute" />
      <apidata name="EntryPointAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.EntryPointAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.EntryPointAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.EntryPointAttribute" />
      </containers>
      <file name="5c701802-7f5d-9cdc-9fca-5f0a02730a2f" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.EntryPointAttribute">
      <topicdata name="EntryPointAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.EntryPointAttribute" />
      <apidata name="EntryPointAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.EntryPointAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.EntryPointAttribute" />
      </containers>
      <file name="1f89e205-f4c9-9212-ac7e-8fb068742699" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.EntryPointAttribute">
      <topicdata name="EntryPointAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.EntryPointAttribute" />
      <apidata name="EntryPointAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.EntryPointAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.EntryPointAttribute" />
      </containers>
      <file name="20f21bdf-7ee6-81cf-b2a9-da8046fd9d20" />
    </api>
    <api id="M:Microsoft.FSharp.Core.EntryPointAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.EntryPointAttribute" ref="true" />
      </containers>
      <file name="11066074-ab53-cd53-373d-c560f9c95cf3" />
    </api>
    <api id="T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute" />
      <apidata name="EqualityConditionalOnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.EqualityConditionalOnAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="GenericParameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="cf32a725-1e51-fc6a-5be8-2846ce621ed1" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute">
      <topicdata name="EqualityConditionalOnAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute" />
      <apidata name="EqualityConditionalOnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.EqualityConditionalOnAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.EqualityConditionalOnAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute" />
      </containers>
      <file name="712d9978-956a-05f7-94e2-52ec05c7ee71" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute">
      <topicdata name="EqualityConditionalOnAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute" />
      <apidata name="EqualityConditionalOnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.EqualityConditionalOnAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute" />
      </containers>
      <file name="1f6c2cc1-831c-43ff-f26c-e5949e4a3945" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute">
      <topicdata name="EqualityConditionalOnAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute" />
      <apidata name="EqualityConditionalOnAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.EqualityConditionalOnAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute" />
      </containers>
      <file name="68ad686b-661a-8ff2-eb67-75945b5f7707" />
    </api>
    <api id="M:Microsoft.FSharp.Core.EqualityConditionalOnAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.EqualityConditionalOnAttribute" ref="true" />
      </containers>
      <file name="b62f411a-7c47-63b7-4b6b-8435c5cd7191" />
    </api>
    <api id="T:Microsoft.FSharp.Core.ExperimentalAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.ExperimentalAttribute" />
      <apidata name="ExperimentalAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="All" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="9b9787d3-7cc5-23ef-b7e9-d0e1b84c4979" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.ExperimentalAttribute">
      <topicdata name="ExperimentalAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.ExperimentalAttribute" />
      <apidata name="ExperimentalAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.ExperimentalAttribute.#ctor(System.String)" />
        <element api="P:Microsoft.FSharp.Core.ExperimentalAttribute.Message" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExperimentalAttribute" />
      </containers>
      <file name="f4ca2c97-c6b5-431f-0b2c-3478931f7204" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.ExperimentalAttribute">
      <topicdata name="ExperimentalAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.ExperimentalAttribute" />
      <apidata name="ExperimentalAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExperimentalAttribute" />
      </containers>
      <file name="41edcc37-8d13-08c0-3e49-4919b031d64d" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.ExperimentalAttribute">
      <topicdata name="ExperimentalAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.ExperimentalAttribute" />
      <apidata name="ExperimentalAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.ExperimentalAttribute.Message" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExperimentalAttribute" />
      </containers>
      <file name="2afcbeb8-9d88-1a4c-18f1-543b92fdcf91" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExperimentalAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExperimentalAttribute" ref="true" />
      </containers>
      <file name="3faa2ad8-ff51-f1d9-7ef8-5cf202e18c21" />
    </api>
    <api id="P:Microsoft.FSharp.Core.ExperimentalAttribute.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExperimentalAttribute" ref="true" />
      </containers>
      <file name="be862a17-c835-0411-7a04-0965024866a1" />
    </api>
    <api id="T:Microsoft.FSharp.Core.ExtraTopLevelOperators">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.ExtraTopLevelOperators" />
      <apidata name="ExtraTopLevelOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e98db562-c2d8-99c0-eaae-8753b45b423b" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.ExtraTopLevelOperators">
      <topicdata name="ExtraTopLevelOperators" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" />
      <apidata name="ExtraTopLevelOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="P:Microsoft.FSharp.Core.ExtraTopLevelOperators.DefaultAsyncBuilder" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1(System.Lazy{``0})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="P:Microsoft.FSharp.Core.ExtraTopLevelOperators.query" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" />
      </containers>
      <file name="59af2a1d-1b07-3852-b71d-8688b5909b96" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.ExtraTopLevelOperators">
      <topicdata name="ExtraTopLevelOperators" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" />
      <apidata name="ExtraTopLevelOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1(System.Lazy{``0})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" />
      </containers>
      <file name="1f15e188-29da-a12a-11ca-509434338948" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.ExtraTopLevelOperators">
      <topicdata name="ExtraTopLevelOperators" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" />
      <apidata name="ExtraTopLevelOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.ExtraTopLevelOperators.DefaultAsyncBuilder" />
        <element api="P:Microsoft.FSharp.Core.ExtraTopLevelOperators.query" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" />
      </containers>
      <file name="0e894511-2613-f4f5-84d5-b1cde0b844b0" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="CreateArray2D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="?">
          <constrained>
            <type api="T:System.Object" ref="true" />
            <implements>
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="1" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})" />
                </specialization>
              </type>
            </implements>
          </constrained>
        </template>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="rows">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="?" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="2">
          <template name="T" index="1" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateArray2D``2(System.Collections.Generic.IEnumerable{``0})" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>array2D</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ab844d6b-68f2-c237-602c-914e44dd473a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})">
      <topicdata group="api" />
      <apidata name="CreateDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="keyValuePairs">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Tuple`2" ref="true">
                <specialization>
                  <template name="TKey" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})" />
                  <template name="TValue" index="1" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})" />
            <template name="TValue" index="1" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateDictionary``2(System.Collections.Generic.IEnumerable{System.Tuple{``0,``1}})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>dict</value>
          </argument>
        </attribute>
      </attributes>
      <file name="957010f8-21c8-f8b1-2c9d-44705f82419a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="CreateSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="elements">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Collections.FSharpSet`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.CreateSet``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>set</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a4169caf-dff7-3c5d-5dcb-a077241a8aef" />
    </api>
    <api id="P:Microsoft.FSharp.Core.ExtraTopLevelOperators.DefaultAsyncBuilder">
      <topicdata group="api" />
      <apidata name="DefaultAsyncBuilder" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultAsyncBuilder" />
      <returns>
        <type api="T:Microsoft.FSharp.Control.FSharpAsyncBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DefaultAsyncBuilder</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Value" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="47442da3-f7cd-7ac6-5639-43966b1194e1" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1(System.Lazy{``0})">
      <topicdata group="api" />
      <apidata name="LazyPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="input">
          <type api="T:System.Lazy`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1(System.Lazy{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.LazyPattern``1(System.Lazy{``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Lazy|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="48cefa58-f29c-4114-766e-23713a15d391" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>printf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="71255a99-836c-da67-941f-fd5c60dddc40" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>printfn</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f0178caf-62b2-479e-696a-e923d96a48c2" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatLineToError" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>eprintfn</value>
          </argument>
        </attribute>
      </attributes>
      <file name="091cd74d-f716-c584-9f76-c42816594052" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatLineToTextWriter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>fprintfn</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c7c23f6a-11b5-4ec4-cb68-d36f9a94bde1" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatToError" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>eprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0e637202-5a94-bb22-c335-fa61b8a52c0b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})">
      <topicdata group="api" />
      <apidata name="PrintFormatToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToString``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f6f3d557-1d63-b3f4-f77f-0134d5a4f8d6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})">
      <topicdata group="api" />
      <apidata name="PrintFormatToStringThenFail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:System.String" ref="true" />
              <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>failwithf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c5aad72d-b594-3e78-f27a-1d3a174c1594" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatToTextWriter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>fprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="847cccee-d768-e00b-444a-50c40a8a54e0" />
    </api>
    <api id="P:Microsoft.FSharp.Core.ExtraTopLevelOperators.query">
      <topicdata group="api" />
      <apidata name="query" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_query" />
      <returns>
        <type api="T:Microsoft.FSharp.Linq.QueryBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Value" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="c951d039-00f1-f3e2-c85f-65edd707c862" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})">
      <topicdata group="api" />
      <apidata name="SpliceExpression" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="expression">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceExpression``1(Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>op_Splice</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2c359c20-fe25-eb57-ec91-d55c2b9bc6f1" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="SpliceUntypedExpression" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="expression">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.SpliceUntypedExpression``1(Microsoft.FSharp.Quotations.FSharpExpr)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>op_SpliceUntyped</value>
          </argument>
        </attribute>
      </attributes>
      <file name="86ce5ccb-eb36-5328-08d0-e6404ba8c1b6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1(``0)">
      <topicdata group="api" />
      <apidata name="ToByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToByte``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint8</value>
          </argument>
        </attribute>
      </attributes>
      <file name="05108518-9ddd-038e-08d6-4b2f023513a9" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1(``0)">
      <topicdata group="api" />
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToDouble``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>double</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9c536d3e-3c23-a6a0-0ec7-d4ec211856e6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1(``0)">
      <topicdata group="api" />
      <apidata name="ToSByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSByte``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int8</value>
          </argument>
        </attribute>
      </attributes>
      <file name="67ce3212-4c4c-9817-2db2-7ecfe55d0d14" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1(``0)">
      <topicdata group="api" />
      <apidata name="ToSingle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.ToSingle``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>single</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5cb7c756-f913-7781-4ad6-ba358a2229ce" />
    </api>
    <api id="T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked" />
      <apidata name="Checked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ccb5b989-7e8a-72b9-4b6c-9988f8f05058" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked">
      <topicdata name="Checked" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked" />
      <apidata name="Checked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked.ToByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked.ToSByte``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked" />
      </containers>
      <file name="8c48fba4-e063-c330-3e3b-bd230795555e" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked">
      <topicdata name="Checked" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked" />
      <apidata name="Checked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked.ToByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked.ToSByte``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked" />
      </containers>
      <file name="d930eb21-c38a-696b-2b5e-0dc6b04032f4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked.ToByte``1(``0)">
      <topicdata group="api" />
      <apidata name="ToByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked.ToByte``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint8</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7d533e60-151c-8c1c-8b55-21c2e9aeda77" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked.ToSByte``1(``0)">
      <topicdata group="api" />
      <apidata name="ToSByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked.ToSByte``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.ExtraTopLevelOperators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int8</value>
          </argument>
        </attribute>
      </attributes>
      <file name="35ec6fd2-923b-70e4-615a-91b639949802" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`2" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true" />
          </type>
        </descendents>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IStructuralEquatable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.Collections.IStructuralComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpChoice`2</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="SumType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="916abc09-2ad1-4c85-3386-e3825dce4b47" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`2">
      <topicdata name="FSharpChoice" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`2" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`2.NewChoice1Of2(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`2.NewChoice2Of2(`1)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
      </containers>
      <file name="1876d40c-13bd-7307-623f-a6cbea961e30" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`2">
      <topicdata name="FSharpChoice" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`2" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`2.NewChoice1Of2(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`2.NewChoice2Of2(`1)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
      </containers>
      <file name="3c8154ab-405a-b6bd-dd47-9fd752fac701" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`2.NewChoice1Of2(`0)">
      <topicdata group="api" />
      <apidata name="NewChoice1Of2" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0dcf536d-0610-2f5a-8c98-c3c40a23c437" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`2.NewChoice2Of2(`1)">
      <topicdata group="api" />
      <apidata name="NewChoice2Of2" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bc912e89-d493-de1e-f51e-93ad886ad171" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2" />
      <apidata name="Choice1Of2" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true" />
      </containers>
      <file name="9ed6253c-2d3f-b65e-0e17-02c66fabf551" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2">
      <topicdata name="Choice1Of2" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2" />
      <apidata name="Choice1Of2" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2" />
      </containers>
      <file name="705bf817-b627-2803-3cf8-5ea7041870eb" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2">
      <topicdata name="Choice1Of2" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2" />
      <apidata name="Choice1Of2" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice1Of2" />
      </containers>
      <file name="b637c9bc-989d-1877-39cd-4dd7fea977b2" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2" />
      <apidata name="Choice2Of2" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true" />
      </containers>
      <file name="76daadd1-e464-74e8-d37f-b6e68953dfda" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2">
      <topicdata name="Choice2Of2" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2" />
      <apidata name="Choice2Of2" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2" />
      </containers>
      <file name="da43d1c7-fa5e-f6b0-f294-a8d8f426f4b5" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2">
      <topicdata name="Choice2Of2" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2" />
      <apidata name="Choice2Of2" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2.Choice2Of2" />
      </containers>
      <file name="2edf819f-29d0-06dd-e422-588557715d3f" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`2.Tags">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`2.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true" />
      </containers>
      <file name="ca29613c-a03b-726b-3810-8f2659d0259e" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`2.Tags">
      <topicdata name="Tags" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`2.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`2.Tags.Choice1Of2" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`2.Tags.Choice2Of2" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2.Tags" />
      </containers>
      <file name="59192ae7-a2c3-0431-57f3-5790f0605714" />
    </api>
    <api id="Fields.T:Microsoft.FSharp.Core.FSharpChoice`2.Tags">
      <topicdata name="Tags" group="list" subgroup="Fields" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`2.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`2.Tags.Choice1Of2" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`2.Tags.Choice2Of2" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2.Tags" />
      </containers>
      <file name="b90a2afc-c2a6-20c4-9d4e-db2a3bbcc3cf" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`2.Tags.Choice1Of2">
      <topicdata group="api" />
      <apidata name="Choice1Of2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true" />
        </type>
      </containers>
      <file name="54cc9164-6acf-1252-718f-7b66b42d0f1f" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`2.Tags.Choice2Of2">
      <topicdata group="api" />
      <apidata name="Choice2Of2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`2.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`2" ref="true" />
        </type>
      </containers>
      <file name="6c0c12b1-6282-f144-0512-3b0fb22030ce" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`3">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`3" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
          </type>
        </descendents>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IStructuralEquatable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.Collections.IStructuralComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpChoice`3</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="SumType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="d10d94d4-907b-b7e4-8328-56ba285c6428" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`3">
      <topicdata name="FSharpChoice" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`3" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice1Of3(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice2Of3(`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice3Of3(`2)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
      </containers>
      <file name="91324571-e8fe-a287-53c4-7714ac570455" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`3">
      <topicdata name="FSharpChoice" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`3" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice1Of3(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice2Of3(`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice3Of3(`2)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
      </containers>
      <file name="b11f767c-b44c-af60-0d7d-c5b4663fa813" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice1Of3(`0)">
      <topicdata group="api" />
      <apidata name="NewChoice1Of3" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="85d24ce8-cd7f-d88f-5b58-74119e2f8c8f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice2Of3(`1)">
      <topicdata group="api" />
      <apidata name="NewChoice2Of3" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f5e12b1c-8fcc-8bce-7fea-c2e06b03d927" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`3.NewChoice3Of3(`2)">
      <topicdata group="api" />
      <apidata name="NewChoice3Of3" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2d2e47ce-10fe-47c3-e66d-191fcbc65f4d" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3" />
      <apidata name="Choice1Of3" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
      </containers>
      <file name="ac43f212-8a9d-7f6f-2a4a-5092f9152149" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3">
      <topicdata name="Choice1Of3" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3" />
      <apidata name="Choice1Of3" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3" />
      </containers>
      <file name="d89c2141-4de9-084d-a7b5-050f7f98f4ce" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3">
      <topicdata name="Choice1Of3" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3" />
      <apidata name="Choice1Of3" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice1Of3" />
      </containers>
      <file name="876f0fb1-c01d-3176-6c61-c4c572020fc4" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3" />
      <apidata name="Choice2Of3" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
      </containers>
      <file name="c7b55412-04a8-8d56-ea94-bc04baee9f9c" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3">
      <topicdata name="Choice2Of3" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3" />
      <apidata name="Choice2Of3" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3" />
      </containers>
      <file name="baaf69de-858e-12e6-a6e7-52ca8c924387" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3">
      <topicdata name="Choice2Of3" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3" />
      <apidata name="Choice2Of3" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice2Of3" />
      </containers>
      <file name="0f568c51-eaed-052b-22b1-6119ac8701bb" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3" />
      <apidata name="Choice3Of3" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`3" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
      </containers>
      <file name="6f3b8861-8b52-3793-3a97-07decb64c3aa" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3">
      <topicdata name="Choice3Of3" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3" />
      <apidata name="Choice3Of3" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3" />
      </containers>
      <file name="2c17d280-843f-192d-5759-c2589849f709" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3">
      <topicdata name="Choice3Of3" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3" />
      <apidata name="Choice3Of3" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Choice3Of3" />
      </containers>
      <file name="35aa6a20-373e-c766-deb0-bf85f0a41375" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`3.Tags">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`3.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
      </containers>
      <file name="68c2523f-c2b9-5490-1ca3-59178602defb" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`3.Tags">
      <topicdata name="Tags" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`3.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice1Of3" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice2Of3" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice3Of3" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Tags" />
      </containers>
      <file name="cf04ba0f-f96d-8129-42a0-e1a245f3a96b" />
    </api>
    <api id="Fields.T:Microsoft.FSharp.Core.FSharpChoice`3.Tags">
      <topicdata name="Tags" group="list" subgroup="Fields" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`3.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice1Of3" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice2Of3" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice3Of3" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Tags" />
      </containers>
      <file name="d4f18e78-ec99-c103-b102-ba897f5eeb83" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice1Of3">
      <topicdata group="api" />
      <apidata name="Choice1Of3" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
        </type>
      </containers>
      <file name="8a5827e6-21cf-ceae-830f-047e10e6b906" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice2Of3">
      <topicdata group="api" />
      <apidata name="Choice2Of3" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
        </type>
      </containers>
      <file name="01b2e5ca-b1d9-6a5f-1722-ea5d0028dc54" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`3.Tags.Choice3Of3">
      <topicdata group="api" />
      <apidata name="Choice3Of3" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true" />
        </type>
      </containers>
      <file name="42b2ef85-9845-f2a7-33cb-4cec06c5a583" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`4">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
          </type>
        </descendents>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
                <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IStructuralEquatable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
                <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.Collections.IStructuralComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpChoice`4</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="SumType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="75652536-10dc-b819-215f-d9f984b95696" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4">
      <topicdata name="FSharpChoice" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice1Of4(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice2Of4(`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice3Of4(`2)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice4Of4(`3)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
      </containers>
      <file name="e37fcde3-8ea8-77dc-c563-29fa81829a97" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`4">
      <topicdata name="FSharpChoice" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice1Of4(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice2Of4(`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice3Of4(`2)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice4Of4(`3)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
      </containers>
      <file name="1a64f6d7-4286-6c68-7794-e1a1e258c3d1" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice1Of4(`0)">
      <topicdata group="api" />
      <apidata name="NewChoice1Of4" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d9c447ac-6b18-527e-7d5f-8dff98ac5639" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice2Of4(`1)">
      <topicdata group="api" />
      <apidata name="NewChoice2Of4" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="971203ec-37e4-f873-b6c3-724cc3973599" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice3Of4(`2)">
      <topicdata group="api" />
      <apidata name="NewChoice3Of4" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </attribute>
      </attributes>
      <file name="51ddec3a-6346-22db-70ec-4022941ea7c4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`4.NewChoice4Of4(`3)">
      <topicdata group="api" />
      <apidata name="NewChoice4Of4" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>3</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ce537cb0-470c-1b28-de1c-2f040cf47a1d" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4" />
      <apidata name="Choice1Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
      </containers>
      <file name="87669499-aa98-c3c1-2fbe-5cf0fbd4cc60" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4">
      <topicdata name="Choice1Of4" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4" />
      <apidata name="Choice1Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4" />
      </containers>
      <file name="708d951b-767d-2227-b447-19bec307b840" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4">
      <topicdata name="Choice1Of4" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4" />
      <apidata name="Choice1Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice1Of4" />
      </containers>
      <file name="6e718415-eeff-22e6-1351-5173ae6cf765" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4" />
      <apidata name="Choice2Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
      </containers>
      <file name="53cf856a-32de-142c-605c-7d3fc1d8941d" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4">
      <topicdata name="Choice2Of4" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4" />
      <apidata name="Choice2Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4" />
      </containers>
      <file name="0d985d1b-022c-72b8-4b09-20d8eee1d452" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4">
      <topicdata name="Choice2Of4" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4" />
      <apidata name="Choice2Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice2Of4" />
      </containers>
      <file name="7e82abc6-1769-dd9b-250b-ae94e277f39d" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4" />
      <apidata name="Choice3Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
      </containers>
      <file name="5208a017-fd2b-b6e6-c2e1-74a8b8cc6901" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4">
      <topicdata name="Choice3Of4" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4" />
      <apidata name="Choice3Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4" />
      </containers>
      <file name="00271b29-9e80-b0b4-6544-b89f37b70eb2" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4">
      <topicdata name="Choice3Of4" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4" />
      <apidata name="Choice3Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice3Of4" />
      </containers>
      <file name="a2c914c7-60a6-7349-5c31-78485ee6128a" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4" />
      <apidata name="Choice4Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`4" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
      </containers>
      <file name="7773537c-6f0f-8510-d919-e65301b86284" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4">
      <topicdata name="Choice4Of4" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4" />
      <apidata name="Choice4Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4" />
      </containers>
      <file name="930bc87a-97da-bc7e-bcaf-0465f24e95dd" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4">
      <topicdata name="Choice4Of4" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4" />
      <apidata name="Choice4Of4" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Choice4Of4" />
      </containers>
      <file name="6e8fd1c8-c1ec-3e9d-feb3-5eb1dc023cc6" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
      </containers>
      <file name="de2d9d21-0cef-7f2b-1851-cf1dd64cbec5" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`4.Tags">
      <topicdata name="Tags" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice1Of4" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice2Of4" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice3Of4" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice4Of4" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags" />
      </containers>
      <file name="25fb8f44-a3e5-d314-12ff-0b51cea359aa" />
    </api>
    <api id="Fields.T:Microsoft.FSharp.Core.FSharpChoice`4.Tags">
      <topicdata name="Tags" group="list" subgroup="Fields" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice1Of4" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice2Of4" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice3Of4" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice4Of4" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags" />
      </containers>
      <file name="b9a6d6b2-5180-dbec-8be8-37ff607f862f" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice1Of4">
      <topicdata group="api" />
      <apidata name="Choice1Of4" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
        </type>
      </containers>
      <file name="87e5c637-6657-3875-3053-57559297ef62" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice2Of4">
      <topicdata group="api" />
      <apidata name="Choice2Of4" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
        </type>
      </containers>
      <file name="59129e8a-6b8d-4bdb-9a82-1f67b696cb2c" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice3Of4">
      <topicdata group="api" />
      <apidata name="Choice3Of4" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
        </type>
      </containers>
      <file name="6f897bd9-15e5-5ce6-99fa-c8909bf1f4b8" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`4.Tags.Choice4Of4">
      <topicdata group="api" />
      <apidata name="Choice4Of4" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`4.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`4" ref="true" />
        </type>
      </containers>
      <file name="42eed639-425e-596e-7713-b7126445a0b7" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`5">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
          </type>
        </descendents>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
                <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
                <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IStructuralEquatable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
                <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
                <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.Collections.IStructuralComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpChoice`5</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="SumType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="221808e9-0e7b-aa35-1fc7-742d94fb14ea" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5">
      <topicdata name="FSharpChoice" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice1Of5(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice2Of5(`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice3Of5(`2)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice4Of5(`3)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice5Of5(`4)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
      </containers>
      <file name="bb9fa1cb-e318-7255-9785-a40dfe621be8" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`5">
      <topicdata name="FSharpChoice" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice1Of5(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice2Of5(`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice3Of5(`2)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice4Of5(`3)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice5Of5(`4)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
      </containers>
      <file name="dbb92fca-aefe-a0ae-a192-de52691f5741" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice1Of5(`0)">
      <topicdata group="api" />
      <apidata name="NewChoice1Of5" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9ab438ca-77e4-e32f-3f33-599ca4686af8" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice2Of5(`1)">
      <topicdata group="api" />
      <apidata name="NewChoice2Of5" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3013497e-c3ef-b067-62da-824d3773bfe4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice3Of5(`2)">
      <topicdata group="api" />
      <apidata name="NewChoice3Of5" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </attribute>
      </attributes>
      <file name="910ff84c-a5ab-d6ac-dad2-b862b48ecee7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice4Of5(`3)">
      <topicdata group="api" />
      <apidata name="NewChoice4Of5" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>3</value>
          </argument>
        </attribute>
      </attributes>
      <file name="14135b08-7263-a968-3c57-8ed98ab79d23" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`5.NewChoice5Of5(`4)">
      <topicdata group="api" />
      <apidata name="NewChoice5Of5" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>4</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cb821121-b6e0-53b1-e366-23b96322247c" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5" />
      <apidata name="Choice1Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <file name="58d5e53d-2cbb-01d6-40d1-fd37432e9bf4" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5">
      <topicdata name="Choice1Of5" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5" />
      <apidata name="Choice1Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5" />
      </containers>
      <file name="89c91b46-af57-36f7-31b1-ba461c2a253b" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5">
      <topicdata name="Choice1Of5" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5" />
      <apidata name="Choice1Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice1Of5" />
      </containers>
      <file name="32cf5b6b-a450-dd77-6f30-a10ace6362f7" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5" />
      <apidata name="Choice2Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <file name="8e089c9b-5209-b36b-2fe9-d28ca5d09318" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5">
      <topicdata name="Choice2Of5" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5" />
      <apidata name="Choice2Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5" />
      </containers>
      <file name="d1b848b2-ce76-1afe-7e56-419d9b0f48c8" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5">
      <topicdata name="Choice2Of5" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5" />
      <apidata name="Choice2Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice2Of5" />
      </containers>
      <file name="efff073a-d16c-75cf-34ef-5d06cab7af4f" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5" />
      <apidata name="Choice3Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <file name="f8de45d7-5bf0-07a0-7513-875f8278fdac" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5">
      <topicdata name="Choice3Of5" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5" />
      <apidata name="Choice3Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5" />
      </containers>
      <file name="966c0350-3356-fdf8-8b22-0aaa476211dc" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5">
      <topicdata name="Choice3Of5" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5" />
      <apidata name="Choice3Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice3Of5" />
      </containers>
      <file name="42af8ec6-c239-0379-23d4-de866247d418" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5" />
      <apidata name="Choice4Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <file name="be005dee-f548-51ad-9d87-bca4eb15635b" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5">
      <topicdata name="Choice4Of5" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5" />
      <apidata name="Choice4Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5" />
      </containers>
      <file name="ff29ad1e-2809-a84b-5d2c-3573b7183f0f" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5">
      <topicdata name="Choice4Of5" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5" />
      <apidata name="Choice4Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice4Of5" />
      </containers>
      <file name="84181c7f-ceef-64f7-fb1d-732d7a7286c7" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5" />
      <apidata name="Choice5Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`5" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <file name="3ca3e78a-50e6-c2a9-c856-bc483a47966b" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5">
      <topicdata name="Choice5Of5" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5" />
      <apidata name="Choice5Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5" />
      </containers>
      <file name="e6180fcf-aa83-5862-024a-f6cbb3397aea" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5">
      <topicdata name="Choice5Of5" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5" />
      <apidata name="Choice5Of5" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Choice5Of5" />
      </containers>
      <file name="1911f8f7-ed56-2274-5ffa-a5aaeabf32c9" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
      </containers>
      <file name="584846a4-b449-41f9-1ba8-e279e9da5c99" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`5.Tags">
      <topicdata name="Tags" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice1Of5" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice2Of5" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice3Of5" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice4Of5" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice5Of5" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" />
      </containers>
      <file name="9e598e96-8d38-25d1-e936-8987a10a88f7" />
    </api>
    <api id="Fields.T:Microsoft.FSharp.Core.FSharpChoice`5.Tags">
      <topicdata name="Tags" group="list" subgroup="Fields" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice1Of5" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice2Of5" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice3Of5" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice4Of5" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice5Of5" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" />
      </containers>
      <file name="96cd14b4-fe38-67ba-3260-69c7b6cb9f26" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice1Of5">
      <topicdata group="api" />
      <apidata name="Choice1Of5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
        </type>
      </containers>
      <file name="f1f5a47e-36a8-512c-f64a-7bf2239c0dd6" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice2Of5">
      <topicdata group="api" />
      <apidata name="Choice2Of5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
        </type>
      </containers>
      <file name="d3f92523-e903-d83d-9832-34051b357333" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice3Of5">
      <topicdata group="api" />
      <apidata name="Choice3Of5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
        </type>
      </containers>
      <file name="d9fc848c-c645-d8e9-9fb9-0863698870da" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice4Of5">
      <topicdata group="api" />
      <apidata name="Choice4Of5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
        </type>
      </containers>
      <file name="121089b1-f5b4-237d-826b-2e8e883cc5f0" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`5.Tags.Choice5Of5">
      <topicdata group="api" />
      <apidata name="Choice5Of5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`5.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`5" ref="true" />
        </type>
      </containers>
      <file name="4f56ebbe-4043-a235-b8fc-ff628bc95d56" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`6">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
          </type>
        </descendents>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
                <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
                <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
                <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IStructuralEquatable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
                <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
                <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
                <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.Collections.IStructuralComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpChoice`6</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="SumType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="18529c26-9e25-ee54-82b2-28ec12704546" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6">
      <topicdata name="FSharpChoice" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice1Of6(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice2Of6(`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice3Of6(`2)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice4Of6(`3)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice5Of6(`4)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice6Of6(`5)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
      </containers>
      <file name="046651fd-0a7b-68ef-a596-96b231a21ab3" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`6">
      <topicdata name="FSharpChoice" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice1Of6(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice2Of6(`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice3Of6(`2)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice4Of6(`3)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice5Of6(`4)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice6Of6(`5)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
      </containers>
      <file name="90a8d530-ea1d-c421-4e68-50e4281959c8" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice1Of6(`0)">
      <topicdata group="api" />
      <apidata name="NewChoice1Of6" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d83d0eb5-c65e-6bbd-9c08-bf8aa143cd10" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice2Of6(`1)">
      <topicdata group="api" />
      <apidata name="NewChoice2Of6" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7ad8a57c-a59e-dec7-089a-53e871e6fd9c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice3Of6(`2)">
      <topicdata group="api" />
      <apidata name="NewChoice3Of6" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </attribute>
      </attributes>
      <file name="66df5f1d-93d3-ac35-5329-6756c1001eeb" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice4Of6(`3)">
      <topicdata group="api" />
      <apidata name="NewChoice4Of6" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>3</value>
          </argument>
        </attribute>
      </attributes>
      <file name="35d78edc-15d9-35cf-228d-0b5b71b6046b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice5Of6(`4)">
      <topicdata group="api" />
      <apidata name="NewChoice5Of6" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>4</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3a8191c6-e787-bf30-6f72-6a19e38d7a28" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`6.NewChoice6Of6(`5)">
      <topicdata group="api" />
      <apidata name="NewChoice6Of6" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>5</value>
          </argument>
        </attribute>
      </attributes>
      <file name="74bbc7f6-85a9-8edb-8fe9-3d00f75b168e" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6" />
      <apidata name="Choice1Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <file name="b67cc8d2-8a9b-d3e8-6e2a-b66665f2d1c2" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6">
      <topicdata name="Choice1Of6" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6" />
      <apidata name="Choice1Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6" />
      </containers>
      <file name="3eb39649-5966-b93d-4f96-fffc15f4515a" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6">
      <topicdata name="Choice1Of6" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6" />
      <apidata name="Choice1Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice1Of6" />
      </containers>
      <file name="db6211b4-4ada-67a6-3181-2fb5eada2092" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6" />
      <apidata name="Choice2Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <file name="16048d17-dc91-25ff-8763-2c5bdccbf63f" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6">
      <topicdata name="Choice2Of6" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6" />
      <apidata name="Choice2Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6" />
      </containers>
      <file name="83a2d180-0ba4-a4b7-755e-30de6f248397" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6">
      <topicdata name="Choice2Of6" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6" />
      <apidata name="Choice2Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice2Of6" />
      </containers>
      <file name="0a6860c1-7f8e-f075-8252-044211daf957" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6" />
      <apidata name="Choice3Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <file name="115d20ba-a029-57b3-458d-9fd6a8295083" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6">
      <topicdata name="Choice3Of6" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6" />
      <apidata name="Choice3Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6" />
      </containers>
      <file name="6292e7b0-7238-044e-fc51-0997bf030640" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6">
      <topicdata name="Choice3Of6" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6" />
      <apidata name="Choice3Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice3Of6" />
      </containers>
      <file name="5b5552d1-6047-8d8f-df42-060ac8599e80" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6" />
      <apidata name="Choice4Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <file name="fdaa0fe9-72ce-98a2-e0a8-e509973f96fe" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6">
      <topicdata name="Choice4Of6" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6" />
      <apidata name="Choice4Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6" />
      </containers>
      <file name="57d63255-0d27-95ae-3636-8910c8a66772" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6">
      <topicdata name="Choice4Of6" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6" />
      <apidata name="Choice4Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice4Of6" />
      </containers>
      <file name="ab4db532-68cc-bb82-bd25-4e7915b2bf3c" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6" />
      <apidata name="Choice5Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <file name="b141c673-e7f1-1523-69cc-6565167bae36" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6">
      <topicdata name="Choice5Of6" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6" />
      <apidata name="Choice5Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6" />
      </containers>
      <file name="5f2e9325-c36a-ee85-7a47-5bd0492cd9eb" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6">
      <topicdata name="Choice5Of6" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6" />
      <apidata name="Choice5Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice5Of6" />
      </containers>
      <file name="99e06d60-c7c4-73ac-9976-59a824e497d1" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6" />
      <apidata name="Choice6Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`6" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <file name="8abe0562-e837-4faf-0e4e-b4ee3d1c6ba7" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6">
      <topicdata name="Choice6Of6" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6" />
      <apidata name="Choice6Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6" />
      </containers>
      <file name="f55331ea-3d4d-b595-48f8-8f6e3ef03901" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6">
      <topicdata name="Choice6Of6" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6" />
      <apidata name="Choice6Of6" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Choice6Of6" />
      </containers>
      <file name="5b6f4845-1e26-d748-a15b-84b409cc3ea0" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
      </containers>
      <file name="f882bf3a-60c4-5f08-ee3b-198d2a4019bf" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`6.Tags">
      <topicdata name="Tags" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice1Of6" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice2Of6" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice3Of6" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice4Of6" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice5Of6" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice6Of6" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" />
      </containers>
      <file name="7d78554e-c23f-8264-c006-69f7c9276906" />
    </api>
    <api id="Fields.T:Microsoft.FSharp.Core.FSharpChoice`6.Tags">
      <topicdata name="Tags" group="list" subgroup="Fields" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice1Of6" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice2Of6" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice3Of6" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice4Of6" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice5Of6" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice6Of6" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" />
      </containers>
      <file name="dada556c-95a2-a28d-da69-4c8e6a3a7086" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice1Of6">
      <topicdata group="api" />
      <apidata name="Choice1Of6" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
        </type>
      </containers>
      <file name="9381f358-4bd0-45b2-543e-f51342cf2813" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice2Of6">
      <topicdata group="api" />
      <apidata name="Choice2Of6" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
        </type>
      </containers>
      <file name="c1f8fe06-019f-9172-8bee-29cd3c71aaa7" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice3Of6">
      <topicdata group="api" />
      <apidata name="Choice3Of6" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
        </type>
      </containers>
      <file name="874eb5d5-5c29-a458-bbb0-a05df812c30e" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice4Of6">
      <topicdata group="api" />
      <apidata name="Choice4Of6" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
        </type>
      </containers>
      <file name="f10d5d18-699e-5516-def6-36238dc055c6" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice5Of6">
      <topicdata group="api" />
      <apidata name="Choice5Of6" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
        </type>
      </containers>
      <file name="3eaa3eda-119e-c899-2fb9-75df0f4417dd" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`6.Tags.Choice6Of6">
      <topicdata group="api" />
      <apidata name="Choice6Of6" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`6.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`6" ref="true" />
        </type>
      </containers>
      <file name="20305b4e-69b2-6b22-14ae-3df2df6abe8d" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`7">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7" ref="true">
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
          </type>
        </descendents>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IStructuralEquatable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
              <specialization>
                <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
                <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.Collections.IStructuralComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpChoice`7</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="SumType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="c497a67a-3523-b791-e373-40b0aa6290f3" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7">
      <topicdata name="FSharpChoice" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice1Of7(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice2Of7(`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice3Of7(`2)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice4Of7(`3)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice5Of7(`4)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice6Of7(`5)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice7Of7(`6)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
      </containers>
      <file name="748bec39-8150-23a2-0d64-7a143ad2ce48" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`7">
      <topicdata name="FSharpChoice" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7" />
      <apidata name="FSharpChoice" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="T6" />
        <template name="T7" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice1Of7(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice2Of7(`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice3Of7(`2)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice4Of7(`3)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice5Of7(`4)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice6Of7(`5)" />
        <element api="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice7Of7(`6)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
      </containers>
      <file name="614cfa09-9dfc-5a00-b725-50a3b9ff4ad6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice1Of7(`0)">
      <topicdata group="api" />
      <apidata name="NewChoice1Of7" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b3113e5e-9a8b-3b1a-4769-7bc3d09a695c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice2Of7(`1)">
      <topicdata group="api" />
      <apidata name="NewChoice2Of7" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0f0ac937-ab39-03bd-2ed0-d3fab7a56f8b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice3Of7(`2)">
      <topicdata group="api" />
      <apidata name="NewChoice3Of7" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9bbbf648-d130-22af-78d6-582c491ea023" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice4Of7(`3)">
      <topicdata group="api" />
      <apidata name="NewChoice4Of7" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>3</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ec9a6f09-53cd-4052-35c9-5aa00ba6804a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice5Of7(`4)">
      <topicdata group="api" />
      <apidata name="NewChoice5Of7" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>4</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3982a40f-df2f-5e6d-d8e9-7dabc0c9c65b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice6Of7(`5)">
      <topicdata group="api" />
      <apidata name="NewChoice6Of7" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>5</value>
          </argument>
        </attribute>
      </attributes>
      <file name="dd35cb21-e8ee-701a-4b30-286eb284ac61" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpChoice`7.NewChoice7Of7(`6)">
      <topicdata group="api" />
      <apidata name="NewChoice7Of7" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>6</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4eb061ba-c30c-314b-8f92-75d55f143304" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7" />
      <apidata name="Choice1Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <file name="0ca009af-5dad-ffc1-0aba-7316de93f670" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7">
      <topicdata name="Choice1Of7" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7" />
      <apidata name="Choice1Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7" />
      </containers>
      <file name="d811cc26-689e-8682-533a-896dc3160c1d" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7">
      <topicdata name="Choice1Of7" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7" />
      <apidata name="Choice1Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice1Of7" />
      </containers>
      <file name="6b903f78-91a5-c915-0bcd-beeca3bfc0de" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7" />
      <apidata name="Choice2Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <file name="6c94c009-a7aa-94d5-7c1f-3751b83a103b" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7">
      <topicdata name="Choice2Of7" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7" />
      <apidata name="Choice2Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7" />
      </containers>
      <file name="6b4a3026-8b9d-085e-9d2b-0c08989dc9a0" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7">
      <topicdata name="Choice2Of7" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7" />
      <apidata name="Choice2Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice2Of7" />
      </containers>
      <file name="a0a30dc3-080e-6de9-8095-267621596cce" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7" />
      <apidata name="Choice3Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <file name="9d1737c5-096f-1e53-3752-a5fd7a9cb8c2" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7">
      <topicdata name="Choice3Of7" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7" />
      <apidata name="Choice3Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7" />
      </containers>
      <file name="dd0d999f-66d8-fa1d-bf37-dfbf4d9e9bde" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7">
      <topicdata name="Choice3Of7" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7" />
      <apidata name="Choice3Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice3Of7" />
      </containers>
      <file name="e0802e08-5302-979e-bb2f-16998958a94e" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7" />
      <apidata name="Choice4Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <file name="2dd302a3-50fe-8c5c-40f4-6458f1484ef5" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7">
      <topicdata name="Choice4Of7" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7" />
      <apidata name="Choice4Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7" />
      </containers>
      <file name="2de0863d-a337-c740-b2f5-cdc873d10dc6" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7">
      <topicdata name="Choice4Of7" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7" />
      <apidata name="Choice4Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice4Of7" />
      </containers>
      <file name="84e4eb27-0263-2a84-6eba-43e65200ec05" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7" />
      <apidata name="Choice5Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <file name="26a285fa-8d50-a35c-cdf4-40b6871819af" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7">
      <topicdata name="Choice5Of7" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7" />
      <apidata name="Choice5Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7" />
      </containers>
      <file name="31ecf7ba-f076-c186-8668-71e01394bec0" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7">
      <topicdata name="Choice5Of7" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7" />
      <apidata name="Choice5Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice5Of7" />
      </containers>
      <file name="4d1254ba-303b-623e-166c-715a77ea631d" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7" />
      <apidata name="Choice6Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <file name="819ed54a-b76f-1217-358d-0783f0666697" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7">
      <topicdata name="Choice6Of7" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7" />
      <apidata name="Choice6Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7" />
      </containers>
      <file name="c0e6e515-e86f-9aa1-3dc0-5e140cf7af9a" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7">
      <topicdata name="Choice6Of7" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7" />
      <apidata name="Choice6Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice6Of7" />
      </containers>
      <file name="36c990cf-3255-b55e-cfe3-191b328dc13e" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7" />
      <apidata name="Choice7Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T2" index="1" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T3" index="2" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T4" index="3" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T6" index="5" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
              <template name="T7" index="6" api="T:Microsoft.FSharp.Core.FSharpChoice`7" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <file name="5b020605-5432-7688-d0ee-5aec0933d578" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7">
      <topicdata name="Choice7Of7" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7" />
      <apidata name="Choice7Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7" />
      </containers>
      <file name="354b74e3-1646-ddc1-6640-fb3a2d73193f" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7">
      <topicdata name="Choice7Of7" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7" />
      <apidata name="Choice7Of7" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Choice7Of7" />
      </containers>
      <file name="2f655ca6-7ca2-9aef-9c8f-d460add2d950" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
      </containers>
      <file name="2ef7aa6d-589e-a61c-8492-59773f6fbfc5" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpChoice`7.Tags">
      <topicdata name="Tags" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice1Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice2Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice3Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice4Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice5Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice6Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice7Of7" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" />
      </containers>
      <file name="ce38c799-182c-5042-1a4d-b9b6cbb04724" />
    </api>
    <api id="Fields.T:Microsoft.FSharp.Core.FSharpChoice`7.Tags">
      <topicdata name="Tags" group="list" subgroup="Fields" typeTopicId="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice1Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice2Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice3Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice4Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice5Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice6Of7" />
        <element api="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice7Of7" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" />
      </containers>
      <file name="ca3f7429-8674-6bd8-64da-fd1ade6fb1b9" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice1Of7">
      <topicdata group="api" />
      <apidata name="Choice1Of7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
        </type>
      </containers>
      <file name="59b891f8-05dd-a5f1-b799-430bbb25e42c" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice2Of7">
      <topicdata group="api" />
      <apidata name="Choice2Of7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
        </type>
      </containers>
      <file name="4980f81e-2c3d-bb24-b179-f220eac11b57" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice3Of7">
      <topicdata group="api" />
      <apidata name="Choice3Of7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
        </type>
      </containers>
      <file name="6fbd97a2-a3c2-4935-5534-5f889e073277" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice4Of7">
      <topicdata group="api" />
      <apidata name="Choice4Of7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
        </type>
      </containers>
      <file name="0680959c-a335-c4c3-bb09-3405b2ee8437" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice5Of7">
      <topicdata group="api" />
      <apidata name="Choice5Of7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
        </type>
      </containers>
      <file name="526d1c71-0bba-db96-c1f7-7a1303f82460" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice6Of7">
      <topicdata group="api" />
      <apidata name="Choice6Of7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
        </type>
      </containers>
      <file name="ee76d7a8-e7d4-1d22-6f7f-832b75ed9fa3" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpChoice`7.Tags.Choice7Of7">
      <topicdata group="api" />
      <apidata name="Choice7Of7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`7.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpChoice`7" ref="true" />
        </type>
      </containers>
      <file name="d8c13ff2-3eef-311c-0eed-8121815bb7d2" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpFunc`2">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpFunc`2" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.FSharpFunc`2.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" ref="true">
            <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" ref="true">
            <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" ref="true">
            <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
          </type>
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" ref="true">
            <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
          </type>
        </descendents>
      </family>
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="66465537-4e4d-b621-3bc5-1f9a3e87f48f" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpFunc`2">
      <topicdata name="FSharpFunc" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpFunc`2" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.FSharpFunc`2.#ctor" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.#ctor" />
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.FromConverter(System.Converter{`0,`1})" />
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)" />
        <element api="Overload:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast">
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)" />
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)" />
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)" />
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
        </element>
        <element api="Overload:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit">
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(System.Converter{`0,`1})~Microsoft.FSharp.Core.FSharpFunc{`0,`1}" />
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(Microsoft.FSharp.Core.FSharpFunc{`0,`1})~System.Converter{`0,`1}" />
        </element>
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.ToConverter(Microsoft.FSharp.Core.FSharpFunc{`0,`1})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
      </containers>
      <file name="3b0a17d7-31a6-68bb-e8a8-d1ad15fa6bff" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpFunc`2">
      <topicdata name="FSharpFunc" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpFunc`2" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.FSharpFunc`2.#ctor" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.FromConverter(System.Converter{`0,`1})" />
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)" />
        <element api="Overload:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast">
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)" />
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)" />
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)" />
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
        </element>
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.ToConverter(Microsoft.FSharp.Core.FSharpFunc{`0,`1})" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
      </containers>
      <file name="052de3ec-994e-b949-d621-2767d32d969d" />
    </api>
    <api id="Operators.T:Microsoft.FSharp.Core.FSharpFunc`2">
      <topicdata name="FSharpFunc" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.FSharp.Core.FSharpFunc`2" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.FSharpFunc`2.#ctor" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="Overload:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit">
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(System.Converter{`0,`1})~Microsoft.FSharp.Core.FSharpFunc{`0,`1}" />
          <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(Microsoft.FSharp.Core.FSharpFunc{`0,`1})~System.Converter{`0,`1}" />
        </element>
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
      </containers>
      <file name="3983ee4a-5f4a-c0e2-bbc1-f0002d32121e" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast">
      <topicdata name="InvokeFast" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpFunc`2" />
      <apidata name="InvokeFast" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="6b9704f7-ba75-052a-d57f-2eeb6bbe791a" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit">
      <topicdata name="Implicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpFunc`2" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(System.Converter{`0,`1})~Microsoft.FSharp.Core.FSharpFunc{`0,`1}" />
        <element api="M:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(Microsoft.FSharp.Core.FSharpFunc{`0,`1})~System.Converter{`0,`1}" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="6ab508f8-e05b-747f-d936-63ce27fd9979" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpFunc`2.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="14c68d7d-bb36-47bb-5bd0-b158064b5e88" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpFunc`2.FromConverter(System.Converter{`0,`1})">
      <topicdata group="api" />
      <apidata name="FromConverter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="converter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
              <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
            <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="93920771-b19c-a236-2024-1aa0dd95e2f3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="func">
          <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="48541f28-b5db-9126-e335-805f644cd4dd" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)">
      <topicdata group="api" />
      <apidata name="InvokeFast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast" />
      <proceduredata virtual="false" />
      <templates>
        <template name="V" />
        <template name="W" />
        <template name="X" />
        <template name="Y" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="V" index="0" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
                      <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                        <specialization>
                          <template name="W" index="1" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
                          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                            <specialization>
                              <template name="X" index="2" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
                              <template name="Y" index="3" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
                            </specialization>
                          </type>
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
        </parameter>
        <parameter name="arg2">
          <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
        </parameter>
        <parameter name="arg3">
          <template name="V" index="0" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
        </parameter>
        <parameter name="arg4">
          <template name="W" index="1" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
        </parameter>
        <parameter name="arg5">
          <template name="X" index="2" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
        </parameter>
      </parameters>
      <returns>
        <template name="Y" index="3" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``4(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}}}},`0,`1,``0,``1,``2)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="b4775335-0fb0-7e72-bd14-0ba94d60f1a6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)">
      <topicdata group="api" />
      <apidata name="InvokeFast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast" />
      <proceduredata virtual="false" />
      <templates>
        <template name="V" />
        <template name="W" />
        <template name="X" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="V" index="0" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)" />
                      <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                        <specialization>
                          <template name="W" index="1" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)" />
                          <template name="X" index="2" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
        </parameter>
        <parameter name="arg2">
          <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
        </parameter>
        <parameter name="arg3">
          <template name="V" index="0" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)" />
        </parameter>
        <parameter name="arg4">
          <template name="W" index="1" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="X" index="2" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``3(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}}}},`0,`1,``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="4342f5ef-4039-f697-18c6-84038979fc58" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)">
      <topicdata group="api" />
      <apidata name="InvokeFast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast" />
      <proceduredata virtual="false" />
      <templates>
        <template name="V" />
        <template name="W" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="V" index="0" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)" />
                      <template name="W" index="1" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
        </parameter>
        <parameter name="arg2">
          <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
        </parameter>
        <parameter name="arg3">
          <template name="V" index="0" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="W" index="1" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``2(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}}},`0,`1,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="5946ad79-eff0-0efb-9520-dd5d63fdf8b4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)">
      <topicdata group="api" />
      <apidata name="InvokeFast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast" />
      <proceduredata virtual="false" />
      <templates>
        <template name="V" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
                  <template name="V" index="0" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
        </parameter>
        <parameter name="arg2">
          <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
        </parameter>
      </parameters>
      <returns>
        <template name="V" index="0" api="M:Microsoft.FSharp.Core.FSharpFunc`2.InvokeFast``1(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,``0}},`0,`1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="6f41dded-fe81-8a30-87ae-7829d6d29786" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(Microsoft.FSharp.Core.FSharpFunc{`0,`1})~System.Converter{`0,`1}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
              <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Converter`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
            <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="d6d01b50-ef44-7189-f707-64b5bfda378c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit(System.Converter{`0,`1})~Microsoft.FSharp.Core.FSharpFunc{`0,`1}">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:Microsoft.FSharp.Core.FSharpFunc`2.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="converter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
              <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
            <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="a93a1478-1273-7cd3-8860-c56d5ccb45f8" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpFunc`2.ToConverter(Microsoft.FSharp.Core.FSharpFunc{`0,`1})">
      <topicdata group="api" />
      <apidata name="ToConverter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
              <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Converter`2" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
            <template name="TResult" index="1" api="T:Microsoft.FSharp.Core.FSharpFunc`2" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true" />
      </containers>
      <file name="2de8694c-de4f-49b4-11b7-fd359981d215" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" />
      <apidata name="FSharpInterfaceDataVersionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Assembly" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4f9904de-451c-49db-b6d4-601a2af5102a" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute">
      <topicdata name="FSharpInterfaceDataVersionAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" />
      <apidata name="FSharpInterfaceDataVersionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32)" />
        <element api="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Major" />
        <element api="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Minor" />
        <element api="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Release" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" />
      </containers>
      <file name="1112e7be-8777-5010-06c7-e03e2c4da6f0" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute">
      <topicdata name="FSharpInterfaceDataVersionAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" />
      <apidata name="FSharpInterfaceDataVersionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" />
      </containers>
      <file name="177f68f8-3d14-b319-16ac-d46d05673482" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute">
      <topicdata name="FSharpInterfaceDataVersionAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" />
      <apidata name="FSharpInterfaceDataVersionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Major" />
        <element api="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Minor" />
        <element api="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Release" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" />
      </containers>
      <file name="e4af2c02-9dbe-1bf9-be0c-23bb8a508d90" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.#ctor(System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="major">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="minor">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="release">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" ref="true" />
      </containers>
      <file name="28438e0f-4c0e-4e37-fa1d-57bce7dcf114" />
    </api>
    <api id="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Major">
      <topicdata group="api" />
      <apidata name="Major" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Major" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" ref="true" />
      </containers>
      <file name="b0d12c6f-37df-dfc5-f0ae-c43473f5b7f3" />
    </api>
    <api id="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Minor">
      <topicdata group="api" />
      <apidata name="Minor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Minor" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" ref="true" />
      </containers>
      <file name="51e7f764-d1fd-0efb-df87-1354da32c9a0" />
    </api>
    <api id="P:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute.Release">
      <topicdata group="api" />
      <apidata name="Release" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Release" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" ref="true" />
      </containers>
      <file name="dae90f12-b88d-9ebc-db30-325b671ba4bf" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpOption`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpOption`1" />
      <apidata name="FSharpOption" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpOption`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IStructuralEquatable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpOption`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.Collections.IStructuralComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.DefaultAugmentationAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
            <enumValue>
              <field name="UseNullAsTrueValue" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpOption`1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="SumType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0f13a042-f243-8e1d-aa00-0998d3e644f9" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpOption`1">
      <topicdata name="FSharpOption" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpOption`1" />
      <apidata name="FSharpOption" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpOption`1.get_None" />
        <element api="P:Microsoft.FSharp.Core.FSharpOption`1.IsNone(Microsoft.FSharp.Core.FSharpOption{`0})" />
        <element api="P:Microsoft.FSharp.Core.FSharpOption`1.IsSome(Microsoft.FSharp.Core.FSharpOption{`0})" />
        <element api="M:Microsoft.FSharp.Core.FSharpOption`1.Some(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpOption`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" />
      </containers>
      <file name="33eb6530-e1a5-b760-0a58-1158a02b0c84" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpOption`1">
      <topicdata name="FSharpOption" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpOption`1" />
      <apidata name="FSharpOption" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpOption`1.get_None" />
        <element api="M:Microsoft.FSharp.Core.FSharpOption`1.Some(`0)" />
        <element api="M:Microsoft.FSharp.Core.FSharpOption`1.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" />
      </containers>
      <file name="e2c205dc-3295-7d6b-decd-9c2e2c7c443e" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.FSharpOption`1">
      <topicdata name="FSharpOption" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.FSharpOption`1" />
      <apidata name="FSharpOption" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Core.FSharpOption`1.IsNone(Microsoft.FSharp.Core.FSharpOption{`0})" />
        <element api="P:Microsoft.FSharp.Core.FSharpOption`1.IsSome(Microsoft.FSharp.Core.FSharpOption{`0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" />
      </containers>
      <file name="f3bdf60d-24e6-5c88-cce1-8d58c4f33341" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpOption`1.get_None">
      <topicdata group="api" />
      <apidata name="get_None" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpOption`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a1400446-9d1c-5ec3-b3b5-5a3cc9c307d0" />
    </api>
    <api id="P:Microsoft.FSharp.Core.FSharpOption`1.IsNone(Microsoft.FSharp.Core.FSharpOption{`0})">
      <topicdata group="api" />
      <apidata name="IsNone" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsNone" />
      <parameters>
        <parameter name="param0">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpOption`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="89f2a77b-225e-a78d-e9bd-47aa20ff917d" />
    </api>
    <api id="P:Microsoft.FSharp.Core.FSharpOption`1.IsSome(Microsoft.FSharp.Core.FSharpOption{`0})">
      <topicdata group="api" />
      <apidata name="IsSome" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSome" />
      <parameters>
        <parameter name="param0">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpOption`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9f583590-4997-a411-7436-bee97b5759e0" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpOption`1.Some(`0)">
      <topicdata group="api" />
      <apidata name="Some" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpOption`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpOption`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="UnionCase" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1b902258-ecbc-3ae0-29e0-dbb79ce9069f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpOption`1.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true" />
      </containers>
      <file name="9edfa568-250f-a85b-20cf-c5eb311846f7" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpOption`1.Tags">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpOption`1.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true" />
      </containers>
      <file name="84a6ec84-1445-5672-5779-7712c3ca8af4" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpOption`1.Tags">
      <topicdata name="Tags" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpOption`1.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpOption`1.Tags.None" />
        <element api="F:Microsoft.FSharp.Core.FSharpOption`1.Tags.Some" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1.Tags" />
      </containers>
      <file name="db674665-17f8-042f-2b94-79ff249d9afb" />
    </api>
    <api id="Fields.T:Microsoft.FSharp.Core.FSharpOption`1.Tags">
      <topicdata name="Tags" group="list" subgroup="Fields" typeTopicId="T:Microsoft.FSharp.Core.FSharpOption`1.Tags" />
      <apidata name="Tags" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpOption`1.Tags.None" />
        <element api="F:Microsoft.FSharp.Core.FSharpOption`1.Tags.Some" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1.Tags" />
      </containers>
      <file name="803b54d6-42c3-5d2a-a3be-5d7c5a9fca4e" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpOption`1.Tags.None">
      <topicdata group="api" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true" />
        </type>
      </containers>
      <file name="8735dec4-566b-37a2-da7a-8c1e408336cd" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpOption`1.Tags.Some">
      <topicdata group="api" />
      <apidata name="Some" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1.Tags" ref="true">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true" />
        </type>
      </containers>
      <file name="cc2dd320-d405-fc37-6789-85daace19a2c" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpRef`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpRef`1" />
      <apidata name="FSharpRef" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpRef`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IStructuralEquatable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpRef`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.Collections.IStructuralComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpRef`1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="RecordType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e2b8c856-1b38-2ca7-d9ed-cd782bf7eb6e" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpRef`1">
      <topicdata name="FSharpRef" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpRef`1" />
      <apidata name="FSharpRef" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpRef`1.#ctor(`0)" />
        <element api="P:Microsoft.FSharp.Core.FSharpRef`1.contents" />
        <element api="F:Microsoft.FSharp.Core.FSharpRef`1.contents@" />
        <element api="P:Microsoft.FSharp.Core.FSharpRef`1.Value" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpRef`1" />
      </containers>
      <file name="29a38f2a-9519-4ef7-35a5-576eae010d32" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpRef`1">
      <topicdata name="FSharpRef" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpRef`1" />
      <apidata name="FSharpRef" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpRef`1" />
      </containers>
      <file name="5dbae195-9e63-1b7b-a1f9-30de8492fe1d" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.FSharpRef`1">
      <topicdata name="FSharpRef" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.FSharpRef`1" />
      <apidata name="FSharpRef" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Core.FSharpRef`1.contents" />
        <element api="P:Microsoft.FSharp.Core.FSharpRef`1.Value" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpRef`1" />
      </containers>
      <file name="70f8fd12-0535-501f-9740-96323b17879f" />
    </api>
    <api id="Fields.T:Microsoft.FSharp.Core.FSharpRef`1">
      <topicdata name="FSharpRef" group="list" subgroup="Fields" typeTopicId="T:Microsoft.FSharp.Core.FSharpRef`1" />
      <apidata name="FSharpRef" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="F:Microsoft.FSharp.Core.FSharpRef`1.contents@" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpRef`1" />
      </containers>
      <file name="77296541-3ef8-62ae-8ea2-cd86bcd403d4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpRef`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="contents">
          <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpRef`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true" />
      </containers>
      <file name="2bc28cb0-0b0a-465f-4686-a53bf1f72649" />
    </api>
    <api id="P:Microsoft.FSharp.Core.FSharpRef`1.contents">
      <topicdata group="api" />
      <apidata name="contents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_contents" />
      <setter name="set_contents" />
      <returns>
        <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpRef`1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Field" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0e6f544b-fe2d-7c20-eca5-67adcf15571c" />
    </api>
    <api id="F:Microsoft.FSharp.Core.FSharpRef`1.contents@">
      <topicdata group="api" />
      <apidata name="contents@" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpRef`1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true" />
      </containers>
      <file name="c2aa015c-d16e-6ea1-37a8-acb2174319d5" />
    </api>
    <api id="P:Microsoft.FSharp.Core.FSharpRef`1.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <template name="T" index="0" api="T:Microsoft.FSharp.Core.FSharpRef`1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true" />
      </containers>
      <file name="e8fdf605-2943-e834-d153-2da962ee9dbd" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FSharpTypeFunc">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FSharpTypeFunc" />
      <apidata name="FSharpTypeFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.FSharpTypeFunc.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="7fff8327-bfc1-0fbf-28d4-20f076a4ae61" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FSharpTypeFunc">
      <topicdata name="FSharpTypeFunc" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FSharpTypeFunc" />
      <apidata name="FSharpTypeFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.FSharpTypeFunc.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpTypeFunc.#ctor" />
        <element api="M:Microsoft.FSharp.Core.FSharpTypeFunc.Specialize``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpTypeFunc" />
      </containers>
      <file name="d66a8815-54b2-bca6-5213-40ef6e2a1a10" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FSharpTypeFunc">
      <topicdata name="FSharpTypeFunc" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FSharpTypeFunc" />
      <apidata name="FSharpTypeFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.FSharpTypeFunc.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.FSharpTypeFunc.Specialize``1" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpTypeFunc" />
      </containers>
      <file name="63ced3cf-bea6-9d1d-02f7-8face1bd9269" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpTypeFunc.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpTypeFunc" ref="true" />
      </containers>
      <file name="6172128d-6f1c-ee1e-8d51-d3bf9617f61a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FSharpTypeFunc.Specialize``1">
      <topicdata group="api" />
      <apidata name="Specialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FSharpTypeFunc" ref="true" />
      </containers>
      <file name="8038539d-e8b1-e31a-9fb7-a561362ccb5e" />
    </api>
    <api id="T:Microsoft.FSharp.Core.FuncConvert">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FuncConvert" />
      <apidata name="FuncConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="c04e065f-50b4-b0a6-7b17-a88e8abaca59" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.FuncConvert">
      <topicdata name="FuncConvert" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.FuncConvert" />
      <apidata name="FuncConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="true" />
      <elements>
        <element api="Overload:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled">
          <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})" />
          <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
          <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
          <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
        </element>
        <element api="Overload:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc">
          <element api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``1(System.Action{``0})" />
          <element api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``2(System.Converter{``0,``1})" />
        </element>
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FuncConvert" />
      </containers>
      <file name="805e54bd-041f-852e-47f6-103d480f2165" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.FuncConvert">
      <topicdata name="FuncConvert" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.FuncConvert" />
      <apidata name="FuncConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="true" />
      <elements>
        <element api="Overload:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled">
          <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})" />
          <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
          <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
          <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
        </element>
        <element api="Overload:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc">
          <element api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``1(System.Action{``0})" />
          <element api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``2(System.Converter{``0,``1})" />
        </element>
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FuncConvert" />
      </containers>
      <file name="6c744bfe-7c03-5b47-424f-6a65dbbaa47f" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled">
      <topicdata name="FuncFromTupled" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FuncConvert" />
      <apidata name="FuncFromTupled" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})" />
        <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
        <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
        <element api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FuncConvert" ref="true" />
      </containers>
      <file name="3677f951-6fd0-945b-cb2f-060a3c449a2b" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc">
      <topicdata name="ToFSharpFunc" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.FuncConvert" />
      <apidata name="ToFSharpFunc" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``1(System.Action{``0})" />
        <element api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``2(System.Converter{``0,``1})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FuncConvert" ref="true" />
      </containers>
      <file name="5cf4a441-fd10-143c-1f23-957747522468" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})">
      <topicdata group="api" />
      <apidata name="FuncFromTupled" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Tuple`2" ref="true">
                <specialization>
                  <template name="T1" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})" />
                  <template name="T2" index="1" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})" />
                </specialization>
              </type>
              <template name="TResult" index="2" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T1" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})" />
            <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
              <specialization>
                <template name="T2" index="1" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})" />
                <template name="TResult" index="2" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``3(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1},``2})" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FuncConvert" ref="true" />
      </containers>
      <file name="067185f7-f87d-0498-360d-61e70611c00e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})">
      <topicdata group="api" />
      <apidata name="FuncFromTupled" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Tuple`3" ref="true">
                <specialization>
                  <template name="T1" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
                  <template name="T2" index="1" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
                  <template name="T3" index="2" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
                </specialization>
              </type>
              <template name="TResult" index="3" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T1" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
            <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
              <specialization>
                <template name="T2" index="1" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
                <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                  <specialization>
                    <template name="T3" index="2" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
                    <template name="TResult" index="3" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``4(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2},``3})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FuncConvert" ref="true" />
      </containers>
      <file name="07956517-1cb9-71ab-cd30-7c1a6a2a0040" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})">
      <topicdata group="api" />
      <apidata name="FuncFromTupled" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Tuple`4" ref="true">
                <specialization>
                  <template name="T1" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
                  <template name="T2" index="1" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
                  <template name="T3" index="2" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
                  <template name="T4" index="3" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
                </specialization>
              </type>
              <template name="TResult" index="4" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T1" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
            <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
              <specialization>
                <template name="T2" index="1" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
                <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                  <specialization>
                    <template name="T3" index="2" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
                    <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                      <specialization>
                        <template name="T4" index="3" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
                        <template name="TResult" index="4" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``5(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3},``4})" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FuncConvert" ref="true" />
      </containers>
      <file name="ff5300a8-a46c-51a2-474d-9493eefeea05" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})">
      <topicdata group="api" />
      <apidata name="FuncFromTupled" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Tuple`5" ref="true">
                <specialization>
                  <template name="T1" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
                  <template name="T2" index="1" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
                  <template name="T3" index="2" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
                  <template name="T4" index="3" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
                  <template name="T5" index="4" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
                </specialization>
              </type>
              <template name="TResult" index="5" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T1" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
            <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
              <specialization>
                <template name="T2" index="1" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
                <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                  <specialization>
                    <template name="T3" index="2" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
                    <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                      <specialization>
                        <template name="T4" index="3" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
                        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                          <specialization>
                            <template name="T5" index="4" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
                            <template name="TResult" index="5" api="M:Microsoft.FSharp.Core.FuncConvert.FuncFromTupled``6(Microsoft.FSharp.Core.FSharpFunc{System.Tuple{``0,``1,``2,``3,``4},``5})" />
                          </specialization>
                        </type>
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FuncConvert" ref="true" />
      </containers>
      <file name="028bf886-e7ef-3245-211c-f8b9dc87982d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``1(System.Action{``0})">
      <topicdata group="api" />
      <apidata name="ToFSharpFunc" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``1(System.Action{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``1(System.Action{``0})" />
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FuncConvert" ref="true" />
      </containers>
      <file name="8a9bcf6a-1281-3d89-1265-4669cc65422b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``2(System.Converter{``0,``1})">
      <topicdata group="api" />
      <apidata name="ToFSharpFunc" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="converter">
          <type api="T:System.Converter`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``2(System.Converter{``0,``1})" />
              <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``2(System.Converter{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``2(System.Converter{``0,``1})" />
            <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.FuncConvert.ToFSharpFunc``2(System.Converter{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.FuncConvert" ref="true" />
      </containers>
      <file name="d60faa65-580a-be5f-9232-9f918b31bae2" />
    </api>
    <api id="T:Microsoft.FSharp.Core.GeneralizableValueAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.GeneralizableValueAttribute" />
      <apidata name="GeneralizableValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.GeneralizableValueAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="83283c96-6e62-0667-7b5f-3b637696c099" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.GeneralizableValueAttribute">
      <topicdata name="GeneralizableValueAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.GeneralizableValueAttribute" />
      <apidata name="GeneralizableValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.GeneralizableValueAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.GeneralizableValueAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.GeneralizableValueAttribute" />
      </containers>
      <file name="311329f0-0b63-91d0-1b44-f246820d7de9" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.GeneralizableValueAttribute">
      <topicdata name="GeneralizableValueAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.GeneralizableValueAttribute" />
      <apidata name="GeneralizableValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.GeneralizableValueAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.GeneralizableValueAttribute" />
      </containers>
      <file name="d31da59f-cff1-eba5-2cef-297fc9dc9045" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.GeneralizableValueAttribute">
      <topicdata name="GeneralizableValueAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.GeneralizableValueAttribute" />
      <apidata name="GeneralizableValueAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.GeneralizableValueAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.GeneralizableValueAttribute" />
      </containers>
      <file name="0bce251a-a66e-8bf8-3782-0de6ecb9c3c9" />
    </api>
    <api id="M:Microsoft.FSharp.Core.GeneralizableValueAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.GeneralizableValueAttribute" ref="true" />
      </containers>
      <file name="62140784-b331-ab22-515b-e522549c4f45" />
    </api>
    <api id="T:Microsoft.FSharp.Core.InterfaceAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.InterfaceAttribute" />
      <apidata name="InterfaceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.InterfaceAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Interface" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a364f021-e3b1-df0f-566e-5d2615d6cbb8" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.InterfaceAttribute">
      <topicdata name="InterfaceAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.InterfaceAttribute" />
      <apidata name="InterfaceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.InterfaceAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.InterfaceAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.InterfaceAttribute" />
      </containers>
      <file name="187e385c-fbc1-88eb-ac0f-9820589de373" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.InterfaceAttribute">
      <topicdata name="InterfaceAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.InterfaceAttribute" />
      <apidata name="InterfaceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.InterfaceAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.InterfaceAttribute" />
      </containers>
      <file name="1e9c8efc-2b8d-f5e8-bac1-3361993589a3" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.InterfaceAttribute">
      <topicdata name="InterfaceAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.InterfaceAttribute" />
      <apidata name="InterfaceAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.InterfaceAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.InterfaceAttribute" />
      </containers>
      <file name="11a3467e-9e12-ec22-be7f-c1ac44fe5c9c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.InterfaceAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.InterfaceAttribute" ref="true" />
      </containers>
      <file name="dbe042c5-c999-4b40-5e9b-1b60ad26d7dc" />
    </api>
    <api id="T:Microsoft.FSharp.Core.LanguagePrimitives">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.LanguagePrimitives" />
      <apidata name="LanguagePrimitives" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ad1bdb50-ae03-08b3-fdbf-971fc2e027f6" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.LanguagePrimitives">
      <topicdata name="LanguagePrimitives" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives" />
      <apidata name="LanguagePrimitives" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.AdditionDynamic``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedAdditionDynamic``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedMultiplyDynamic``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.DecimalWithMeasure(System.Decimal)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByInt``1(``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByIntDynamic``1(``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumOfValue``2(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumToValue``2(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericComparer``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericComparerFromTable``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericEqualityComparer``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericEqualityComparerFromTable``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastLimitedGenericEqualityComparer``1(System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.Float32WithMeasure(System.Single)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FloatWithMeasure(System.Double)" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparer" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparison``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparisonWithComparer``1(System.Collections.IComparer,``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEquality``1(``0,``0)" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityComparer" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityER``1(``0,``0)" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityERComparer" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityWithComparer``1(System.Collections.IEqualityComparer,``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterOrEqual``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterThan``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericHash``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericHashWithComparer``1(System.Collections.IEqualityComparer,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessOrEqual``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessThan``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLimitedHash``1(System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMaximum``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMinimum``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericOne``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericOneDynamic``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericZero``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericZeroDynamic``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.Int16WithMeasure(System.Int16)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.Int32WithMeasure(System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.Int64WithMeasure(System.Int64)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.MultiplyDynamic``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseInt32(System.String)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseInt64(System.String)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseUInt32(System.String)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseUInt64(System.String)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalEquality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalHash``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.SByteWithMeasure(System.SByte)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" />
      </containers>
      <file name="d1dbdbee-b90b-bcc1-6e74-4b6fadd79d94" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.LanguagePrimitives">
      <topicdata name="LanguagePrimitives" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives" />
      <apidata name="LanguagePrimitives" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.AdditionDynamic``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedAdditionDynamic``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedMultiplyDynamic``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.DecimalWithMeasure(System.Decimal)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByInt``1(``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByIntDynamic``1(``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumOfValue``2(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumToValue``2(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericComparer``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericComparerFromTable``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericEqualityComparer``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericEqualityComparerFromTable``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastLimitedGenericEqualityComparer``1(System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.Float32WithMeasure(System.Single)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.FloatWithMeasure(System.Double)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparison``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparisonWithComparer``1(System.Collections.IComparer,``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEquality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityER``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityWithComparer``1(System.Collections.IEqualityComparer,``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterOrEqual``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterThan``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericHash``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericHashWithComparer``1(System.Collections.IEqualityComparer,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessOrEqual``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessThan``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLimitedHash``1(System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMaximum``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMinimum``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericOne``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericOneDynamic``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericZero``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericZeroDynamic``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.Int16WithMeasure(System.Int16)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.Int32WithMeasure(System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.Int64WithMeasure(System.Int64)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.MultiplyDynamic``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseInt32(System.String)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseInt64(System.String)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseUInt32(System.String)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseUInt64(System.String)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalEquality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalHash``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.SByteWithMeasure(System.SByte)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" />
      </containers>
      <file name="67b7259b-411a-314a-fbcb-f507d034650e" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.LanguagePrimitives">
      <topicdata name="LanguagePrimitives" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives" />
      <apidata name="LanguagePrimitives" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparer" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityComparer" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityERComparer" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" />
      </containers>
      <file name="ed834f46-8478-cc78-1bae-77b4a83c165e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.AdditionDynamic``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="AdditionDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.AdditionDynamic``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.AdditionDynamic``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.AdditionDynamic``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by dynamic invocations of F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b79b20cb-96d8-efa8-947b-02a2ec6541fe" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedAdditionDynamic``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="CheckedAdditionDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedAdditionDynamic``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedAdditionDynamic``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedAdditionDynamic``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by dynamic invocations of F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="79c6ea78-0211-1b7a-4e25-7480ecda34d4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedMultiplyDynamic``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="CheckedMultiplyDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedMultiplyDynamic``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedMultiplyDynamic``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.CheckedMultiplyDynamic``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by dynamic invocations of F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7f38f928-94fe-7997-fb69-b420af8dfe37" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.DecimalWithMeasure(System.Decimal)">
      <topicdata group="api" />
      <apidata name="DecimalWithMeasure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="f">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="2f87859c-8375-879b-6e63-67916a5a0731" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByInt``1(``0,System.Int32)">
      <topicdata group="api" />
      <apidata name="DivideByInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByInt``1(``0,System.Int32)" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByInt``1(``0,System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2034fbfe-50bd-a3df-044a-79e348992755" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByIntDynamic``1(``0,System.Int32)">
      <topicdata group="api" />
      <apidata name="DivideByIntDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByIntDynamic``1(``0,System.Int32)" />
        </parameter>
        <parameter name="y">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.DivideByIntDynamic``1(``0,System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by dynamic invocations of F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e86ef8f4-0f70-7dbd-ca6e-fabbb5a52831" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumOfValue``2(``0)">
      <topicdata group="api" />
      <apidata name="EnumOfValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TEnum" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumOfValue``2(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TEnum" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumOfValue``2(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="6b7d0766-769f-a298-5202-423ea7c78355" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumToValue``2(``0)">
      <topicdata group="api" />
      <apidata name="EnumToValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TEnum" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="enum">
          <template name="TEnum" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumToValue``2(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.EnumToValue``2(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="c0bdb6f9-98b2-681f-eaac-65ee557c8923" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericComparer``1">
      <topicdata group="api" />
      <apidata name="FastGenericComparer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IComparer`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericComparer``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="20a90eb9-9ba0-ecf7-694f-8c743890db4b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericComparerFromTable``1">
      <topicdata group="api" />
      <apidata name="FastGenericComparerFromTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IComparer`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericComparerFromTable``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a compiler instrinsic should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="72e7bb0a-3cf3-aa48-94ef-0f53182fcac5" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericEqualityComparer``1">
      <topicdata group="api" />
      <apidata name="FastGenericEqualityComparer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericEqualityComparer``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="5863415c-0803-2d0d-a260-af3edaafe360" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericEqualityComparerFromTable``1">
      <topicdata group="api" />
      <apidata name="FastGenericEqualityComparerFromTable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastGenericEqualityComparerFromTable``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a compiler instrinsic should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="0818c882-a2f7-0c0f-243e-997442833076" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.FastLimitedGenericEqualityComparer``1(System.Int32)">
      <topicdata group="api" />
      <apidata name="FastLimitedGenericEqualityComparer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="limit">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.FastLimitedGenericEqualityComparer``1(System.Int32)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="b87eb3ae-61e8-d505-1732-2812f0f33681" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.Float32WithMeasure(System.Single)">
      <topicdata group="api" />
      <apidata name="Float32WithMeasure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="f">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="0a2df4a0-60f8-f155-b777-dff5632dd7a1" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.FloatWithMeasure(System.Double)">
      <topicdata group="api" />
      <apidata name="FloatWithMeasure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="f">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="40b97182-1b7b-37bf-5d3f-d55cfa95f7a9" />
    </api>
    <api id="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparer">
      <topicdata group="api" />
      <apidata name="GenericComparer" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GenericComparer" />
      <returns>
        <type api="T:System.Collections.IComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Value" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="7e69b006-5dca-d8be-3dac-581494926575" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparison``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericComparison" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparison``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparison``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="97a649f4-840d-e2b8-f380-35f657ae8552" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparisonWithComparer``1(System.Collections.IComparer,``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericComparisonWithComparer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="comp">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparisonWithComparer``1(System.Collections.IComparer,``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericComparisonWithComparer``1(System.Collections.IComparer,``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="882b180c-6837-33ad-1d28-f70820c5e4f2" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEquality``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericEquality" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEquality``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEquality``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7718d55b-faa6-4fbe-4e04-297fa3f377c0" />
    </api>
    <api id="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityComparer">
      <topicdata group="api" />
      <apidata name="GenericEqualityComparer" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GenericEqualityComparer" />
      <returns>
        <type api="T:System.Collections.IEqualityComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Value" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1f968220-d677-bc92-e006-b53e87fa9a51" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityER``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericEqualityER" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityER``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityER``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="971bf029-1850-8aa8-011d-9563b751dec8" />
    </api>
    <api id="P:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityERComparer">
      <topicdata group="api" />
      <apidata name="GenericEqualityERComparer" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_GenericEqualityERComparer" />
      <returns>
        <type api="T:System.Collections.IEqualityComparer" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Value" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="04f0399d-5b7a-063c-37cd-4d3c5c42450e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityWithComparer``1(System.Collections.IEqualityComparer,``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericEqualityWithComparer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="comp">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityWithComparer``1(System.Collections.IEqualityComparer,``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericEqualityWithComparer``1(System.Collections.IEqualityComparer,``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ff8f0424-7f4d-5d4a-9f61-96ac27f9911c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterOrEqual``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericGreaterOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterOrEqual``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterOrEqual``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c221a53b-ad42-1421-dbfd-c6f26367c880" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterThan``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericGreaterThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterThan``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericGreaterThan``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0b0f9b49-9552-132d-f4d9-6ecb507b4a24" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericHash``1(``0)">
      <topicdata group="api" />
      <apidata name="GenericHash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericHash``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="fdc0e82e-b8de-3651-8079-2b2df4931514" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericHashWithComparer``1(System.Collections.IEqualityComparer,``0)">
      <topicdata group="api" />
      <apidata name="GenericHashWithComparer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="obj">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericHashWithComparer``1(System.Collections.IEqualityComparer,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ba2eb3ea-d779-e94f-5a52-98123b61c2b2" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessOrEqual``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericLessOrEqual" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessOrEqual``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessOrEqual``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="28c4401f-d350-7643-f1c6-c6236e97f83d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessThan``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericLessThan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessThan``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLessThan``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="24f26b03-3b16-c2b8-686c-34b6faffc906" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLimitedHash``1(System.Int32,``0)">
      <topicdata group="api" />
      <apidata name="GenericLimitedHash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="limit">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="obj">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericLimitedHash``1(System.Int32,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6c757754-f6e0-b9e9-be8a-22c6064836dd" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMaximum``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericMaximum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMaximum``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMaximum``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMaximum``1(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="52b2fe77-8402-926b-976a-271109402714" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMinimum``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericMinimum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMinimum``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMinimum``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericMinimum``1(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d0cf9105-c68f-021f-c614-19b73e71d015" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericOne``1">
      <topicdata group="api" />
      <apidata name="GenericOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericOne``1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="c38a8420-c31a-bde2-a112-3c7a199a594a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericOneDynamic``1">
      <topicdata group="api" />
      <apidata name="GenericOneDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericOneDynamic``1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="8308e0c5-b2b7-7144-c04e-6e8470e19acc" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericZero``1">
      <topicdata group="api" />
      <apidata name="GenericZero" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericZero``1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="77084ff0-5595-a22b-351c-fd05d2a355b3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericZeroDynamic``1">
      <topicdata group="api" />
      <apidata name="GenericZeroDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.GenericZeroDynamic``1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6d1111bf-9aa3-811f-bbd2-b33247fa6437" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.Int16WithMeasure(System.Int16)">
      <topicdata group="api" />
      <apidata name="Int16WithMeasure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="f">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="2b4dc69f-b4d7-2dad-b54a-97f978291d71" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.Int32WithMeasure(System.Int32)">
      <topicdata group="api" />
      <apidata name="Int32WithMeasure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="f">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="45f18bcb-f1f4-cb64-3162-4ae4217c310f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.Int64WithMeasure(System.Int64)">
      <topicdata group="api" />
      <apidata name="Int64WithMeasure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="f">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="e1d02f30-f1cf-e1d5-44b0-9cdd25452a35" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.MultiplyDynamic``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="MultiplyDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.MultiplyDynamic``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.MultiplyDynamic``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.MultiplyDynamic``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by dynamic invocations of F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="59dd6ce8-41f1-176e-c6bc-333c14b8263e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseInt32(System.String)">
      <topicdata group="api" />
      <apidata name="ParseInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="8bd09c57-7fc6-0d5a-dc87-a8bb4ec5f705" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseInt64(System.String)">
      <topicdata group="api" />
      <apidata name="ParseInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="dd568dc6-0634-828b-bee9-49db9c43d1ee" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseUInt32(System.String)">
      <topicdata group="api" />
      <apidata name="ParseUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="579bfef9-7b00-469d-1de7-97e0f4342a9b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.ParseUInt64(System.String)">
      <topicdata group="api" />
      <apidata name="ParseUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="ff3eebbe-f127-126a-4072-30ab238a82d2" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalEquality``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="PhysicalEquality" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalEquality``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalEquality``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="151e7d6d-5a94-8554-b829-0879bd21b0ea" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalHash``1(``0)">
      <topicdata group="api" />
      <apidata name="PhysicalHash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.PhysicalHash``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="0c2c5af8-9e95-1cb9-c970-2a459e88c383" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.SByteWithMeasure(System.SByte)">
      <topicdata group="api" />
      <apidata name="SByteWithMeasure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="f">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <file name="ce84b641-55cd-fdc2-37e9-6913364a9f1d" />
    </api>
    <api id="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" />
      <apidata name="ErrorStrings" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="36df011b-43fc-e9e2-d7d1-b3c2cc87ff31" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings">
      <topicdata name="ErrorStrings" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" />
      <apidata name="ErrorStrings" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.AddressOpNotFirstClassString" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputArrayEmptyString" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputMustBeNonNegativeString" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputSequenceEmptyString" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.NoNegateMinValueString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" />
      </containers>
      <file name="a3297c66-cfb2-4c79-a7df-ada0c3237059" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings">
      <topicdata name="ErrorStrings" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" />
      <apidata name="ErrorStrings" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.AddressOpNotFirstClassString" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputArrayEmptyString" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputMustBeNonNegativeString" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputSequenceEmptyString" />
        <element api="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.NoNegateMinValueString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" />
      </containers>
      <file name="ab2d3930-ce42-0772-e18f-403039428014" />
    </api>
    <api id="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.AddressOpNotFirstClassString">
      <topicdata group="api" />
      <apidata name="AddressOpNotFirstClassString" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AddressOpNotFirstClassString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Value" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="01d23657-b08a-3875-af38-39776a25eff6" />
    </api>
    <api id="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputArrayEmptyString">
      <topicdata group="api" />
      <apidata name="InputArrayEmptyString" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InputArrayEmptyString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Value" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4be9c96b-5258-9582-bdb7-378c4ccb63f7" />
    </api>
    <api id="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputMustBeNonNegativeString">
      <topicdata group="api" />
      <apidata name="InputMustBeNonNegativeString" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InputMustBeNonNegativeString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Value" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4498060b-7401-3994-b06b-42cc8fa300b0" />
    </api>
    <api id="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.InputSequenceEmptyString">
      <topicdata group="api" />
      <apidata name="InputSequenceEmptyString" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InputSequenceEmptyString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Value" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0180e4f4-f237-9707-8ffc-91939f9a5b59" />
    </api>
    <api id="P:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings.NoNegateMinValueString">
      <topicdata group="api" />
      <apidata name="NoNegateMinValueString" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NoNegateMinValueString" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.ErrorStrings" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This value is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Value" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="09b06722-1c6f-0320-aef3-349762453fde" />
    </api>
    <api id="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" />
      <apidata name="HashCompare" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3973762d-e59c-f9c3-b9ab-93c398f79b08" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare">
      <topicdata name="HashCompare" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" />
      <apidata name="HashCompare" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1(System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" />
      </containers>
      <file name="733c7faa-ac33-a9ef-d1ee-5c07be6e746d" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare">
      <topicdata name="HashCompare" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" />
      <apidata name="HashCompare" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1(System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" />
      </containers>
      <file name="a9c9f493-1a9c-cfc9-9dc8-83851ede75a3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})">
      <topicdata group="api" />
      <apidata name="FastCompareTuple2" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:System.Tuple`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:System.Tuple`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple2``2(System.Collections.IComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9bad990f-e60f-6208-1f48-bfd6663f0f82" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="FastCompareTuple3" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:System.Tuple`3" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:System.Tuple`3" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple3``3(System.Collections.IComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="25153dec-4ba2-5591-587f-f70af4f228b6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})">
      <topicdata group="api" />
      <apidata name="FastCompareTuple4" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:System.Tuple`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T4" index="3" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:System.Tuple`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T4" index="3" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple4``4(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2045e233-8ee8-8d1f-fe44-bdecaead9185" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})">
      <topicdata group="api" />
      <apidata name="FastCompareTuple5" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:System.Tuple`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T4" index="3" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T5" index="4" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:System.Tuple`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T4" index="3" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T5" index="4" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastCompareTuple5``5(System.Collections.IComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d91519eb-64e6-89be-627d-c8a557d8a95e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})">
      <topicdata group="api" />
      <apidata name="FastEqualsTuple2" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:System.Tuple`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:System.Tuple`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1},System.Tuple{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2d92622b-5b6d-2f2d-45d5-8d6dad47b1d9" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="FastEqualsTuple3" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:System.Tuple`3" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:System.Tuple`3" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2},System.Tuple{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="94980c5e-6317-4671-223d-f41c253cb6dd" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})">
      <topicdata group="api" />
      <apidata name="FastEqualsTuple4" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:System.Tuple`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T4" index="3" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:System.Tuple`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
              <template name="T4" index="3" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3},System.Tuple{``0,``1,``2,``3})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="23af844a-e92d-ca67-fd02-557a9f235a8d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})">
      <topicdata group="api" />
      <apidata name="FastEqualsTuple5" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="tuple1">
          <type api="T:System.Tuple`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T4" index="3" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T5" index="4" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="tuple2">
          <type api="T:System.Tuple`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T4" index="3" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T5" index="4" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastEqualsTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4},System.Tuple{``0,``1,``2,``3,``4})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b7214e1e-1101-8350-7c87-66d15afbfc70" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})">
      <topicdata group="api" />
      <apidata name="FastHashTuple2" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="tuple">
          <type api="T:System.Tuple`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple2``2(System.Collections.IEqualityComparer,System.Tuple{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6c57a121-014e-aad4-1068-831bc2e6b072" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})">
      <topicdata group="api" />
      <apidata name="FastHashTuple3" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="tuple">
          <type api="T:System.Tuple`3" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple3``3(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="041d6c0f-eb77-033e-7604-1e716dc4b7c5" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})">
      <topicdata group="api" />
      <apidata name="FastHashTuple4" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="tuple">
          <type api="T:System.Tuple`4" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})" />
              <template name="T4" index="3" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple4``4(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3ef3b7bd-4d1b-bf8a-a3e7-383714efa3d0" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})">
      <topicdata group="api" />
      <apidata name="FastHashTuple5" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
      </templates>
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="tuple">
          <type api="T:System.Tuple`5" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T4" index="3" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})" />
              <template name="T5" index="4" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.FastHashTuple5``5(System.Collections.IEqualityComparer,System.Tuple{``0,``1,``2,``3,``4})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a318d768-dbab-2720-b7b2-a289196ee8c6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericComparisonIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonIntrinsic``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e1a4d429-d1a4-4a6f-4ee9-21a41a5eb7dd" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericComparisonWithComparerIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="comp">
          <type api="T:System.Collections.IComparer" ref="true" />
        </parameter>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericComparisonWithComparerIntrinsic``1(System.Collections.IComparer,``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9b49855d-706b-fcf1-977c-2c6163616c3c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericEqualityERIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityERIntrinsic``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a22c4ffa-1dba-87ad-dfbf-ce167c40609a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericEqualityIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityIntrinsic``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="44e8e7a8-4135-d6fc-99be-e3dfe3bdcaf6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericEqualityWithComparerIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="comp">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericEqualityWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="798b4fc2-1199-77ce-54e6-a7ffeed7136c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericGreaterOrEqualIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterOrEqualIntrinsic``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cc3f0407-c299-e748-5036-c1d85101b528" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericGreaterThanIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericGreaterThanIntrinsic``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ff2abd91-5532-5d9b-3104-f5d6f27caadc" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1(``0)">
      <topicdata group="api" />
      <apidata name="GenericHashIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="input">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashIntrinsic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="9933f85d-634a-96b6-bd90-25929857cc94" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)">
      <topicdata group="api" />
      <apidata name="GenericHashWithComparerIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="comp">
          <type api="T:System.Collections.IEqualityComparer" ref="true" />
        </parameter>
        <parameter name="input">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericHashWithComparerIntrinsic``1(System.Collections.IEqualityComparer,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fe964183-ca4a-2a8e-54d4-96e2d3ecb873" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericLessOrEqualIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessOrEqualIntrinsic``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6b5cfc55-dcee-60a4-65a8-771ee1431999" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GenericLessThanIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.GenericLessThanIntrinsic``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4d152e46-bf74-05fb-8983-12da59929869" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1(System.Int32,``0)">
      <topicdata group="api" />
      <apidata name="LimitedGenericHashIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="limit">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="input">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.LimitedGenericHashIntrinsic``1(System.Int32,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="eb7c6ed3-6b85-c1da-ee05-62cd571a1176" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="PhysicalEqualityIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalEqualityIntrinsic``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b0f19e49-78d6-5ca8-814d-14ecc03fac65" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1(``0)">
      <topicdata group="api" />
      <apidata name="PhysicalHashIntrinsic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="input">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare.PhysicalHashIntrinsic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.HashCompare" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is a primitive library routine used by optimized F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="e77a0839-d329-bee7-8864-b5c5a0d0dbdc" />
    </api>
    <api id="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" />
      <apidata name="IntrinsicFunctions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="356fccf7-07be-5fb3-03ca-e33bd1858a3a" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions">
      <topicdata name="IntrinsicFunctions" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" />
      <apidata name="IntrinsicFunctions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CheckThis``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CreateInstance``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.Dispose``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.FailInit" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.FailStaticInit" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray``1(``0[],System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray2D``1(``0[0:,0:],System.Int32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetString(System.String,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.MakeDecimal(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray``1(``0[],System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray2D``1(``0[0:,0:],System.Int32,System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.TypeTestFast``1(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.TypeTestGeneric``1(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.UnboxFast``1(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.UnboxGeneric``1(System.Object)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" />
      </containers>
      <file name="d222a786-de50-6e4b-2d21-073855e76b50" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions">
      <topicdata name="IntrinsicFunctions" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" />
      <apidata name="IntrinsicFunctions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CheckThis``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CreateInstance``1" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.Dispose``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.FailInit" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.FailStaticInit" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray``1(``0[],System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray2D``1(``0[0:,0:],System.Int32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetString(System.String,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.MakeDecimal(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray``1(``0[],System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray2D``1(``0[0:,0:],System.Int32,System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.TypeTestFast``1(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.TypeTestGeneric``1(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.UnboxFast``1(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.UnboxGeneric``1(System.Object)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" />
      </containers>
      <file name="31c5bef1-9f48-d7e3-b741-0b7358715068" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CheckThis``1(``0)">
      <topicdata group="api" />
      <apidata name="CheckThis" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CheckThis``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CheckThis``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="d729952f-1ba6-4c0e-90b7-020b021d59c7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CreateInstance``1">
      <topicdata group="api" />
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ctor="true" />
        </template>
      </templates>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.CreateInstance``1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="3e85b1a7-9c8a-228c-d25d-f1d7875a5638" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.Dispose``1(``0)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IDisposable" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <parameters>
        <parameter name="resource">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.Dispose``1(``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="8cef7ac0-1697-a04e-ffb9-130709af7e12" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.FailInit">
      <topicdata group="api" />
      <apidata name="FailInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="b74584d7-99be-8919-1f4a-1c1c4faf5091" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.FailStaticInit">
      <topicdata group="api" />
      <apidata name="FailStaticInit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="ebbdc7af-938d-f30b-5c3e-21dd7833f94a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray``1(``0[],System.Int32)">
      <topicdata group="api" />
      <apidata name="GetArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray``1(``0[],System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray``1(``0[],System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5c8bbc3c-2bfa-c1f2-cbbf-c3d604dce371" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray2D``1(``0[0:,0:],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetArray2D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="2">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray2D``1(``0[0:,0:],System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="index1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray2D``1(``0[0:,0:],System.Int32,System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b1e5d5d3-4dfb-adf7-e99c-dd01b51cb36a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetArray3D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="3">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="index1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index3">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ac7cf719-9ed2-b134-ee4e-38b3da89f4f3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetArray4D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="4">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="index1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index3">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index4">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="464a62d6-a3e0-5212-e01a-1896448ac6ab" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.GetString(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="GetString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="896ca82e-eae8-e14d-0f3f-679d8517056a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.MakeDecimal(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)">
      <topicdata group="api" />
      <apidata name="MakeDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="low">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="medium">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="high">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isNegative">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="scale">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="81376a26-fbe1-7d89-cc9c-f2144bce279a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray``1(``0[],System.Int32,``0)">
      <topicdata group="api" />
      <apidata name="SetArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray``1(``0[],System.Int32,``0)" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray``1(``0[],System.Int32,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9a465320-c069-ed87-f552-a26eab7c4b11" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray2D``1(``0[0:,0:],System.Int32,System.Int32,``0)">
      <topicdata group="api" />
      <apidata name="SetArray2D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <arrayOf rank="2">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray2D``1(``0[0:,0:],System.Int32,System.Int32,``0)" />
          </arrayOf>
        </parameter>
        <parameter name="index1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray2D``1(``0[0:,0:],System.Int32,System.Int32,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="96d78a13-0945-0146-6466-9148e2ad5a1c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32,``0)">
      <topicdata group="api" />
      <apidata name="SetArray3D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <arrayOf rank="3">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32,``0)" />
          </arrayOf>
        </parameter>
        <parameter name="index1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index3">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray3D``1(``0[0:,0:,0:],System.Int32,System.Int32,System.Int32,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="62462b61-2a0b-712e-f122-2cb2490d2c58" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,``0)">
      <topicdata group="api" />
      <apidata name="SetArray4D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <arrayOf rank="4">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,``0)" />
          </arrayOf>
        </parameter>
        <parameter name="index1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index3">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index4">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.SetArray4D``1(``0[0:,0:,0:,0:],System.Int32,System.Int32,System.Int32,System.Int32,``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f2f6215f-971f-5d2d-44e0-ee893fa0bfca" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.TypeTestFast``1(System.Object)">
      <topicdata group="api" />
      <apidata name="TypeTestFast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f47a01f6-e6b9-5dc4-11d8-d33441803ac4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.TypeTestGeneric``1(System.Object)">
      <topicdata group="api" />
      <apidata name="TypeTestGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="c4417b38-ece1-789f-bbdf-2c6eb58566a6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.UnboxFast``1(System.Object)">
      <topicdata group="api" />
      <apidata name="UnboxFast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.UnboxFast``1(System.Object)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="5d57a942-0bbb-eaf3-1be7-6ed33452a137" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.UnboxGeneric``1(System.Object)">
      <topicdata group="api" />
      <apidata name="UnboxGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions.UnboxGeneric``1(System.Object)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicFunctions" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="2e177f35-3723-e62e-ffb5-69070b2c7ccc" />
    </api>
    <api id="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" />
      <apidata name="IntrinsicOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="66beb9e4-015c-42be-cf54-db41da66c26c" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators">
      <topicdata name="IntrinsicOperators" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" />
      <apidata name="IntrinsicOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_AddressOf``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_Amp(System.Boolean,System.Boolean)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_BooleanAnd(System.Boolean,System.Boolean)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_BooleanOr(System.Boolean,System.Boolean)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_IntegerAddressOf``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.Or(System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" />
      </containers>
      <file name="1b362d9b-a45a-6d59-60fe-15cfd6f0faf3" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators">
      <topicdata name="IntrinsicOperators" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" />
      <apidata name="IntrinsicOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.Or(System.Boolean,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" />
      </containers>
      <file name="b76a0512-8c70-55ec-8b21-f4aad2250731" />
    </api>
    <api id="Operators.T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators">
      <topicdata name="IntrinsicOperators" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" />
      <apidata name="IntrinsicOperators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_AddressOf``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_Amp(System.Boolean,System.Boolean)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_BooleanAnd(System.Boolean,System.Boolean)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_BooleanOr(System.Boolean,System.Boolean)" />
        <element api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_IntegerAddressOf``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" />
      </containers>
      <file name="f27851e2-81df-c081-6be8-2c3de9083709" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_AddressOf``1(``0)">
      <topicdata group="api" />
      <apidata name="AddressOf" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_AddressOf``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <referenceTo>
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_AddressOf``1(``0)" />
        </referenceTo>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="553f99df-240b-1dec-8bb8-49674aa7c95a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_Amp(System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Amp" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e1">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="e2">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>In F# code, use 'e1 &amp;&amp; e2' instead of 'e1 &amp; e2'</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1203</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="44933e18-e58d-1abe-1823-0e73a51b4021" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_BooleanAnd(System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="BooleanAnd" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e1">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="e2">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c298b6a5-e50c-5c0c-1ff4-676ba369321d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_BooleanOr(System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="BooleanOr" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e1">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="e2">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4122dac1-afb6-f704-f317-acdabc35ee96" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_IntegerAddressOf``1(``0)">
      <topicdata group="api" />
      <apidata name="IntegerAddressOf" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.op_IntegerAddressOf``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="6ad9f2b8-cf96-f0c2-04b4-bda7a2ec389f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators.Or(System.Boolean,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Or" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="e1">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="e2">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators" ref="true">
          <type api="T:Microsoft.FSharp.Core.LanguagePrimitives" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>In F# code, use 'e1 || e2' instead of 'e1 or e2'</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1203</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>or</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e7f1ed8e-3a94-50a9-1287-edad9510246b" />
    </api>
    <api id="T:Microsoft.FSharp.Core.LiteralAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.LiteralAttribute" />
      <apidata name="LiteralAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.LiteralAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4ece69af-5f6a-9108-1f60-6e5eef058cb9" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.LiteralAttribute">
      <topicdata name="LiteralAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.LiteralAttribute" />
      <apidata name="LiteralAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.LiteralAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.LiteralAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LiteralAttribute" />
      </containers>
      <file name="8b1e765a-ac4f-127e-f663-d5ed80b26ac6" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.LiteralAttribute">
      <topicdata name="LiteralAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.LiteralAttribute" />
      <apidata name="LiteralAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.LiteralAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LiteralAttribute" />
      </containers>
      <file name="7b739ea4-aee8-e80a-558a-08d727a3b97c" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.LiteralAttribute">
      <topicdata name="LiteralAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.LiteralAttribute" />
      <apidata name="LiteralAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.LiteralAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LiteralAttribute" />
      </containers>
      <file name="439a1abb-7d21-63f8-5915-dfeda4ba1119" />
    </api>
    <api id="M:Microsoft.FSharp.Core.LiteralAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.LiteralAttribute" ref="true" />
      </containers>
      <file name="00ad7754-0156-de5a-62c6-8806d41fc088" />
    </api>
    <api id="T:Microsoft.FSharp.Core.MatchFailureException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.MatchFailureException" />
      <apidata name="MatchFailureException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.IStructuralEquatable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Exception" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="54877da2-64c5-e295-907f-6cb534fc9c5b" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.MatchFailureException">
      <topicdata name="MatchFailureException" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.MatchFailureException" />
      <apidata name="MatchFailureException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
      <elements>
        <element api="Overload:Microsoft.FSharp.Core.MatchFailureException.#ctor">
          <element api="M:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
          <element api="M:Microsoft.FSharp.Core.MatchFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:Microsoft.FSharp.Core.MatchFailureException.#ctor(System.String,System.Int32,System.Int32)" />
        </element>
        <element api="P:Microsoft.FSharp.Core.MatchFailureException.Data0" />
        <element api="P:Microsoft.FSharp.Core.MatchFailureException.Data1" />
        <element api="P:Microsoft.FSharp.Core.MatchFailureException.Data2" />
        <element api="P:Microsoft.FSharp.Core.MatchFailureException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" />
      </containers>
      <file name="6336bef6-b6ec-3a0d-6861-0b191baec2e4" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.MatchFailureException">
      <topicdata name="MatchFailureException" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.MatchFailureException" />
      <apidata name="MatchFailureException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" />
      </containers>
      <file name="86ca044e-6867-6823-59aa-0d28e57489ac" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.MatchFailureException">
      <topicdata name="MatchFailureException" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.MatchFailureException" />
      <apidata name="MatchFailureException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.MatchFailureException.Data0" />
        <element api="P:Microsoft.FSharp.Core.MatchFailureException.Data1" />
        <element api="P:Microsoft.FSharp.Core.MatchFailureException.Data2" />
        <element api="P:Microsoft.FSharp.Core.MatchFailureException.Message" />
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" />
      </containers>
      <file name="cee6c087-7fe5-8b39-4003-d755d476eb22" />
    </api>
    <api id="Events.T:Microsoft.FSharp.Core.MatchFailureException">
      <topicdata name="MatchFailureException" group="list" subgroup="Events" typeTopicId="T:Microsoft.FSharp.Core.MatchFailureException" />
      <apidata name="MatchFailureException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" />
      </containers>
      <file name="6e831ac0-8048-2dc0-6eb5-0395c5b86e97" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.MatchFailureException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.MatchFailureException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
        <element api="M:Microsoft.FSharp.Core.MatchFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Microsoft.FSharp.Core.MatchFailureException.#ctor(System.String,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" ref="true" />
      </containers>
      <file name="f09bd90d-26e7-b10e-dfef-12324ee44b6b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.MatchFailureException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" ref="true" />
      </containers>
      <file name="22e912ae-cc82-e2e8-07ef-a57673829f7f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.MatchFailureException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" ref="true" />
      </containers>
      <file name="9c0c6e36-3f3a-a16c-85eb-646096aca2fd" />
    </api>
    <api id="M:Microsoft.FSharp.Core.MatchFailureException.#ctor(System.String,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.MatchFailureException.#ctor" />
      <parameters>
        <parameter name="data0">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="data1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="data2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" ref="true" />
      </containers>
      <file name="ce452e3d-118c-caa1-5de1-3e28934d26ef" />
    </api>
    <api id="P:Microsoft.FSharp.Core.MatchFailureException.Data0">
      <topicdata group="api" />
      <apidata name="Data0" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Data0" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Field" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
      </attributes>
      <file name="682439a7-0bf8-2c76-2b23-6c2148babce9" />
    </api>
    <api id="P:Microsoft.FSharp.Core.MatchFailureException.Data1">
      <topicdata group="api" />
      <apidata name="Data1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Data1" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Field" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d9471335-45aa-b287-a439-19f59f3eb15b" />
    </api>
    <api id="P:Microsoft.FSharp.Core.MatchFailureException.Data2">
      <topicdata group="api" />
      <apidata name="Data2" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Data2" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Field" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
        </attribute>
      </attributes>
      <file name="489c7fd6-8e8f-1003-17c8-22ccaa22bd99" />
    </api>
    <api id="P:Microsoft.FSharp.Core.MatchFailureException.Message">
      <topicdata group="api" />
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MatchFailureException" ref="true" />
      </containers>
      <file name="df06f67a-76a6-956c-72da-e3deedf7ad76" />
    </api>
    <api id="T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute" />
      <apidata name="MeasureAnnotatedAbbreviationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="dc866205-ab20-0c4e-0059-8503028d1ef5" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute">
      <topicdata name="MeasureAnnotatedAbbreviationAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute" />
      <apidata name="MeasureAnnotatedAbbreviationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute" />
      </containers>
      <file name="1a59a0ab-a09f-3262-be8d-2c70ee66d978" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute">
      <topicdata name="MeasureAnnotatedAbbreviationAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute" />
      <apidata name="MeasureAnnotatedAbbreviationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute" />
      </containers>
      <file name="66baf8be-535d-6b37-9539-299a501a73a7" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute">
      <topicdata name="MeasureAnnotatedAbbreviationAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute" />
      <apidata name="MeasureAnnotatedAbbreviationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute" />
      </containers>
      <file name="c14d77d5-20a2-50eb-952a-730271a646c7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MeasureAnnotatedAbbreviationAttribute" ref="true" />
      </containers>
      <file name="18bd9d42-76e0-9086-a3d7-fa316297ef75" />
    </api>
    <api id="T:Microsoft.FSharp.Core.MeasureAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.MeasureAttribute" />
      <apidata name="MeasureAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MeasureAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="GenericParameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="fa49b609-8429-1d8b-796b-23aca367da56" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.MeasureAttribute">
      <topicdata name="MeasureAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.MeasureAttribute" />
      <apidata name="MeasureAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MeasureAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.MeasureAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MeasureAttribute" />
      </containers>
      <file name="f348ee0e-e633-4c69-a178-f198abd6c480" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.MeasureAttribute">
      <topicdata name="MeasureAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.MeasureAttribute" />
      <apidata name="MeasureAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MeasureAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MeasureAttribute" />
      </containers>
      <file name="4c62f653-c4d8-874f-9634-c342256dfcea" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.MeasureAttribute">
      <topicdata name="MeasureAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.MeasureAttribute" />
      <apidata name="MeasureAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.MeasureAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MeasureAttribute" />
      </containers>
      <file name="d2f9e8d1-e31d-fe1a-4269-b0eba5178b14" />
    </api>
    <api id="M:Microsoft.FSharp.Core.MeasureAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.MeasureAttribute" ref="true" />
      </containers>
      <file name="113fc26e-e0b1-7a8e-c6cc-8f1e2ba48a55" />
    </api>
    <api id="T:Microsoft.FSharp.Core.NoComparisonAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.NoComparisonAttribute" />
      <apidata name="NoComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoComparisonAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Enum" />
              <field name="Interface" />
              <field name="Delegate" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ff5cb05a-6931-c249-b8d9-612422a31018" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.NoComparisonAttribute">
      <topicdata name="NoComparisonAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.NoComparisonAttribute" />
      <apidata name="NoComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoComparisonAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.NoComparisonAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoComparisonAttribute" />
      </containers>
      <file name="051acb67-af71-2dde-3c10-724b4f5aa38a" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.NoComparisonAttribute">
      <topicdata name="NoComparisonAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.NoComparisonAttribute" />
      <apidata name="NoComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoComparisonAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoComparisonAttribute" />
      </containers>
      <file name="7f0cd6bc-4142-0846-0a78-8d9933543a17" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.NoComparisonAttribute">
      <topicdata name="NoComparisonAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.NoComparisonAttribute" />
      <apidata name="NoComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoComparisonAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoComparisonAttribute" />
      </containers>
      <file name="2015bb2e-851c-0252-e236-2318706316a0" />
    </api>
    <api id="M:Microsoft.FSharp.Core.NoComparisonAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoComparisonAttribute" ref="true" />
      </containers>
      <file name="562e5c57-d4b8-d91e-61dc-af029783dc22" />
    </api>
    <api id="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" />
      <apidata name="NoDynamicInvocationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoDynamicInvocationAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0778798a-03a5-ecdb-687a-fd4700e22a84" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute">
      <topicdata name="NoDynamicInvocationAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" />
      <apidata name="NoDynamicInvocationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoDynamicInvocationAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.NoDynamicInvocationAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" />
      </containers>
      <file name="c28fd8e5-61fc-e096-2624-cf7a17a90af0" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute">
      <topicdata name="NoDynamicInvocationAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" />
      <apidata name="NoDynamicInvocationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoDynamicInvocationAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" />
      </containers>
      <file name="cf8ce69a-08db-22d0-8d0f-674c4f528e14" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute">
      <topicdata name="NoDynamicInvocationAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" />
      <apidata name="NoDynamicInvocationAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoDynamicInvocationAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" />
      </containers>
      <file name="33046065-5f56-e4cd-dda5-a435f4956d5c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.NoDynamicInvocationAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
      </containers>
      <file name="4d017cc4-2fe8-9a75-2714-76e7f254c5c9" />
    </api>
    <api id="T:Microsoft.FSharp.Core.NoEqualityAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.NoEqualityAttribute" />
      <apidata name="NoEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoEqualityAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Enum" />
              <field name="Interface" />
              <field name="Delegate" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="451d51c3-152e-4e75-c258-6be40ec1ddb7" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.NoEqualityAttribute">
      <topicdata name="NoEqualityAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.NoEqualityAttribute" />
      <apidata name="NoEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoEqualityAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.NoEqualityAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoEqualityAttribute" />
      </containers>
      <file name="9799ed21-eeb7-f777-09c8-d1073029dfd2" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.NoEqualityAttribute">
      <topicdata name="NoEqualityAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.NoEqualityAttribute" />
      <apidata name="NoEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoEqualityAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoEqualityAttribute" />
      </containers>
      <file name="15eca85a-c2f9-d3ff-9a96-fad34ed4463f" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.NoEqualityAttribute">
      <topicdata name="NoEqualityAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.NoEqualityAttribute" />
      <apidata name="NoEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.NoEqualityAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoEqualityAttribute" />
      </containers>
      <file name="3b05afe7-1c88-2685-5b08-dad203f07b3e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.NoEqualityAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NoEqualityAttribute" ref="true" />
      </containers>
      <file name="7392fecf-a954-4642-ed77-ee592d3d952d" />
    </api>
    <api id="T:Microsoft.FSharp.Core.NumericLiterals">
      <topicdata group="api" />
      <apidata name="NumericLiterals" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1acdac35-cb26-6bf6-73a7-64206824c48b" />
    </api>
    <api id="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" />
      <apidata name="NumericLiteralI" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NumericLiterals" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="8c2eb545-1047-1928-1853-3cf9933adb24" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI">
      <topicdata name="NumericLiteralI" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" />
      <apidata name="NumericLiteralI" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt32``1(System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt64``1(System.Int64)" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt64Dynamic(System.Int64)" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromOne``1" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromString``1(System.String)" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromStringDynamic(System.String)" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromZero``1" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" />
      </containers>
      <file name="23ddab12-5b85-7052-c036-1c781de6be8e" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI">
      <topicdata name="NumericLiteralI" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" />
      <apidata name="NumericLiteralI" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt32``1(System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt64``1(System.Int64)" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt64Dynamic(System.Int64)" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromOne``1" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromString``1(System.String)" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromStringDynamic(System.String)" />
        <element api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromZero``1" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" />
      </containers>
      <file name="f9076d0f-702d-099a-1005-683e5b56952c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt32``1(System.Int32)">
      <topicdata group="api" />
      <apidata name="FromInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt32``1(System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" ref="true">
          <type api="T:Microsoft.FSharp.Core.NumericLiterals" ref="true" />
        </type>
      </containers>
      <file name="e596b804-4d8b-ed82-b147-69037a805a8f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt64``1(System.Int64)">
      <topicdata group="api" />
      <apidata name="FromInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt64``1(System.Int64)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" ref="true">
          <type api="T:Microsoft.FSharp.Core.NumericLiterals" ref="true" />
        </type>
      </containers>
      <file name="5d052976-aef5-fb76-6825-2ce777fbe89b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromInt64Dynamic(System.Int64)">
      <topicdata group="api" />
      <apidata name="FromInt64Dynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" ref="true">
          <type api="T:Microsoft.FSharp.Core.NumericLiterals" ref="true" />
        </type>
      </containers>
      <file name="2b9e8bfa-1812-8f99-cd8e-7bb5a433f081" />
    </api>
    <api id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromOne``1">
      <topicdata group="api" />
      <apidata name="FromOne" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromOne``1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" ref="true">
          <type api="T:Microsoft.FSharp.Core.NumericLiterals" ref="true" />
        </type>
      </containers>
      <file name="85c61451-25f2-90ed-f188-a93992a9e3f9" />
    </api>
    <api id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromString``1(System.String)">
      <topicdata group="api" />
      <apidata name="FromString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromString``1(System.String)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" ref="true">
          <type api="T:Microsoft.FSharp.Core.NumericLiterals" ref="true" />
        </type>
      </containers>
      <file name="7bf6440d-65f9-7e3a-9d7b-0f88e1b60d59" />
    </api>
    <api id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromStringDynamic(System.String)">
      <topicdata group="api" />
      <apidata name="FromStringDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" ref="true">
          <type api="T:Microsoft.FSharp.Core.NumericLiterals" ref="true" />
        </type>
      </containers>
      <file name="fd09cd98-ca63-525f-c094-33a9ffa92844" />
    </api>
    <api id="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromZero``1">
      <topicdata group="api" />
      <apidata name="FromZero" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI.FromZero``1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.NumericLiterals.NumericLiteralI" ref="true">
          <type api="T:Microsoft.FSharp.Core.NumericLiterals" ref="true" />
        </type>
      </containers>
      <file name="a488a68b-23f3-ce3c-7add-e989209ce6d6" />
    </api>
    <api id="T:Microsoft.FSharp.Core.Operators">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.Operators" />
      <apidata name="Operators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f4a1ebc6-096a-d85e-e578-9c9b35874395" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.Operators">
      <topicdata name="Operators" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.Operators" />
      <apidata name="Operators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.Abs``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Acos``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Asin``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Atan``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Box``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Ceiling``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Compare``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ConsoleError``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.ConsoleIn``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.ConsoleOut``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Cos``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Cosh``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.CreateSequence``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Microsoft.FSharp.Core.Operators.Decrement(Microsoft.FSharp.Core.FSharpRef{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Exit``1(System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Exp``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Failure(System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.FailurePattern(System.Exception)" />
        <element api="M:Microsoft.FSharp.Core.Operators.FailWith``1(System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Floor``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.Operators.Hash``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Identity``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Ignore``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Increment(Microsoft.FSharp.Core.FSharpRef{System.Int32})" />
        <element api="P:Microsoft.FSharp.Core.Operators.Infinity" />
        <element api="P:Microsoft.FSharp.Core.Operators.InfinitySingle" />
        <element api="M:Microsoft.FSharp.Core.Operators.InvalidArg``1(System.String,System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.InvalidOp``1(System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.IsNull``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.Operators.limitedHash``1(System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})" />
        <element api="M:Microsoft.FSharp.Core.Operators.Log``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Log10``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Max``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Min``1(``0,``0)" />
        <element api="P:Microsoft.FSharp.Core.Operators.NaN" />
        <element api="P:Microsoft.FSharp.Core.Operators.NaNSingle" />
        <element api="M:Microsoft.FSharp.Core.Operators.Not(System.Boolean)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NullArg``1(System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Concatenate(System.String,System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Equality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_GreaterThan``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Inequality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_LeftShift``1(``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_LessThan``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_LogicalNot``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_RightShift``1(``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_UnaryNegation``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_UnaryPlus``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.PowInteger``1(``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Raise``1(System.Exception)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Ref``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Reraise``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Rethrow``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Round``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Sign``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Sin``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Sinh``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.SizeOf``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.Operators.Sqrt``2(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Tan``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Tanh``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToChar``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToDecimal``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToDouble``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToEnum``1(System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToInt``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToInt16``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToInt32``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToInt64``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToIntPtr``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToSByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToSingle``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToString``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToUInt16``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToUInt32``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToUInt64``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToUIntPtr``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Truncate``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.TryUnbox``1(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.Operators.TypeDefOf``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.TypeOf``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Unbox``1(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" />
      </containers>
      <file name="30cf4e15-e01d-f610-f7a6-a6a190af7882" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.Operators">
      <topicdata name="Operators" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.Operators" />
      <apidata name="Operators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.Abs``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Acos``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Asin``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Atan``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Box``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Ceiling``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Compare``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ConsoleError``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.ConsoleIn``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.ConsoleOut``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Cos``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Cosh``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.CreateSequence``1(System.Collections.Generic.IEnumerable{``0})" />
        <element api="M:Microsoft.FSharp.Core.Operators.Decrement(Microsoft.FSharp.Core.FSharpRef{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Exit``1(System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Exp``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Failure(System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.FailurePattern(System.Exception)" />
        <element api="M:Microsoft.FSharp.Core.Operators.FailWith``1(System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Floor``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.Operators.Hash``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Identity``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Ignore``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Increment(Microsoft.FSharp.Core.FSharpRef{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.InvalidArg``1(System.String,System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.InvalidOp``1(System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.IsNull``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.Operators.limitedHash``1(System.Int32,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})" />
        <element api="M:Microsoft.FSharp.Core.Operators.Log``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Log10``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Max``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Min``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Not(System.Boolean)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NullArg``1(System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.PowInteger``1(``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Raise``1(System.Exception)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Ref``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Reraise``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Rethrow``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Round``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Sign``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Sin``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Sinh``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.SizeOf``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.Operators.Sqrt``2(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Tan``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Tanh``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToChar``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToDecimal``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToDouble``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToEnum``1(System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToInt``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToInt16``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToInt32``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToInt64``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToIntPtr``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToSByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToSingle``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToString``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToUInt16``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToUInt32``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToUInt64``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.ToUIntPtr``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Truncate``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.TryUnbox``1(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.Operators.TypeDefOf``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.TypeOf``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Unbox``1(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" />
      </containers>
      <file name="d2b147f4-b215-2bd3-b430-19a137f6c19e" />
    </api>
    <api id="Operators.T:Microsoft.FSharp.Core.Operators">
      <topicdata name="Operators" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.FSharp.Core.Operators" />
      <apidata name="Operators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Concatenate(System.String,System.String)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Equality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_GreaterThan``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Inequality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_LeftShift``1(``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_LessThan``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_LogicalNot``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_RightShift``1(``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_UnaryNegation``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.op_UnaryPlus``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" />
      </containers>
      <file name="4aa36332-9a53-b966-41ce-88c9425ddcd3" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.Operators">
      <topicdata name="Operators" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.Operators" />
      <apidata name="Operators" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.Operators.Infinity" />
        <element api="P:Microsoft.FSharp.Core.Operators.InfinitySingle" />
        <element api="P:Microsoft.FSharp.Core.Operators.NaN" />
        <element api="P:Microsoft.FSharp.Core.Operators.NaNSingle" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" />
      </containers>
      <file name="ea4baf4e-bb57-8c5f-c6af-3413e36594ad" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Abs``1(``0)">
      <topicdata group="api" />
      <apidata name="Abs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Abs``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Abs``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>abs</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e20106f8-2165-f532-17f2-e142b982cd6f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Acos``1(``0)">
      <topicdata group="api" />
      <apidata name="Acos" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Acos``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Acos``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>acos</value>
          </argument>
        </attribute>
      </attributes>
      <file name="388c7fe3-172c-bc42-b042-73af609427f4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Asin``1(``0)">
      <topicdata group="api" />
      <apidata name="Asin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Asin``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Asin``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>asin</value>
          </argument>
        </attribute>
      </attributes>
      <file name="873a7327-2ae0-3d95-d300-9e4215362ec1" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Atan``1(``0)">
      <topicdata group="api" />
      <apidata name="Atan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Atan``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Atan``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>atan</value>
          </argument>
        </attribute>
      </attributes>
      <file name="807c73a9-5f51-f36b-c598-2bdd71089c96" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)">
      <topicdata group="api" />
      <apidata name="Atan2" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="y">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)" />
        </parameter>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.Atan2``2(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>atan2</value>
          </argument>
        </attribute>
      </attributes>
      <file name="41befebb-2b5f-adf4-b065-ea26d353b106" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Box``1(``0)">
      <topicdata group="api" />
      <apidata name="Box" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Box``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>box</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9572f62d-4938-958a-e2dd-78a4398bb1e0" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Ceiling``1(``0)">
      <topicdata group="api" />
      <apidata name="Ceiling" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Ceiling``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Ceiling``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ceil</value>
          </argument>
        </attribute>
      </attributes>
      <file name="338dfbbc-8b3e-bac6-8093-c1a44b46de25" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Compare``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Compare``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Compare``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>compare</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d590b6b3-8fed-ea8b-6593-03231ccc449d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ConsoleError``1">
      <topicdata group="api" />
      <apidata name="ConsoleError" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>stderr</value>
          </argument>
        </attribute>
      </attributes>
      <file name="40edf966-2080-fb45-ce9c-93e9608cc7db" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ConsoleIn``1">
      <topicdata group="api" />
      <apidata name="ConsoleIn" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.IO.TextReader" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>stdin</value>
          </argument>
        </attribute>
      </attributes>
      <file name="57e94a40-ac31-2cd2-f1bf-31f67f0b4684" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ConsoleOut``1">
      <topicdata group="api" />
      <apidata name="ConsoleOut" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>stdout</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7d2c2c28-43ba-6ec4-f5f5-e1ee33a5e46d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Cos``1(``0)">
      <topicdata group="api" />
      <apidata name="Cos" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Cos``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Cos``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>cos</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b254fea8-74b2-16b9-7506-cd6889f8c5df" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Cosh``1(``0)">
      <topicdata group="api" />
      <apidata name="Cosh" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Cosh``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Cosh``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>cosh</value>
          </argument>
        </attribute>
      </attributes>
      <file name="30409816-c2a0-6656-444d-fd18198a684a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.CreateSequence``1(System.Collections.Generic.IEnumerable{``0})">
      <topicdata group="api" />
      <apidata name="CreateSequence" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="sequence">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.CreateSequence``1(System.Collections.Generic.IEnumerable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.CreateSequence``1(System.Collections.Generic.IEnumerable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>seq</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bc333d41-96d6-0882-6971-30fed0defef1" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Decrement(Microsoft.FSharp.Core.FSharpRef{System.Int32})">
      <topicdata group="api" />
      <apidata name="Decrement" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cell">
          <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>decr</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d041f70c-132c-c858-b5c6-028860b806a3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)">
      <topicdata group="api" />
      <apidata name="DefaultArg" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="arg">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="defaultValue">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.DefaultArg``1(Microsoft.FSharp.Core.FSharpOption{``0},``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>defaultArg</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8c945628-d7f0-82e9-21c8-3c5f65cf3460" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Exit``1(System.Int32)">
      <topicdata group="api" />
      <apidata name="Exit" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="exitcode">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Exit``1(System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>exit</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3d4ba9c1-a046-bb0f-1412-46cc32387c71" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Exp``1(``0)">
      <topicdata group="api" />
      <apidata name="Exp" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Exp``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Exp``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>exp</value>
          </argument>
        </attribute>
      </attributes>
      <file name="093ac969-f1c6-02ea-2438-af7d23dd1beb" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Failure(System.String)">
      <topicdata group="api" />
      <apidata name="Failure" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <file name="d876774a-c271-7ea8-90c6-aea1823a0366" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.FailurePattern(System.Exception)">
      <topicdata group="api" />
      <apidata name="FailurePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Failure|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="75b3b337-9a45-58ff-dc7a-dfaccbab0f37" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.FailWith``1(System.String)">
      <topicdata group="api" />
      <apidata name="FailWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.FailWith``1(System.String)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>failwith</value>
          </argument>
        </attribute>
      </attributes>
      <file name="017408c1-3507-103f-c4bf-811a0197925e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Floor``1(``0)">
      <topicdata group="api" />
      <apidata name="Floor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Floor``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Floor``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>floor</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b7f12528-4071-1134-4097-ce91d7251da6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})">
      <topicdata group="api" />
      <apidata name="Fst" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="tuple">
          <type api="T:System.Tuple`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.Fst``2(System.Tuple{``0,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>fst</value>
          </argument>
        </attribute>
      </attributes>
      <file name="af5b2bd6-185b-017a-fa67-4d4d54d96378" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Hash``1(``0)">
      <topicdata group="api" />
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="obj">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Hash``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>hash</value>
          </argument>
        </attribute>
      </attributes>
      <file name="676b5ae8-4df6-12a2-cd88-0c5f41623ec6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Identity``1(``0)">
      <topicdata group="api" />
      <apidata name="Identity" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Identity``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Identity``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>id</value>
          </argument>
        </attribute>
      </attributes>
      <file name="61033c2c-4654-ca93-a281-adc657c154fa" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Ignore``1(``0)">
      <topicdata group="api" />
      <apidata name="Ignore" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Ignore``1(``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ignore</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9c753548-61b1-fe1f-7103-2658c65293a4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Increment(Microsoft.FSharp.Core.FSharpRef{System.Int32})">
      <topicdata group="api" />
      <apidata name="Increment" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="cell">
          <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>incr</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bfc9329a-3f34-4ead-f1a5-9f465eeafadd" />
    </api>
    <api id="P:Microsoft.FSharp.Core.Operators.Infinity">
      <topicdata group="api" />
      <apidata name="Infinity" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Infinity" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Infinity</value>
          </argument>
        </attribute>
      </attributes>
      <file name="475c4068-f9f3-c169-cbe9-3ab2afd99b6d" />
    </api>
    <api id="P:Microsoft.FSharp.Core.Operators.InfinitySingle">
      <topicdata group="api" />
      <apidata name="InfinitySingle" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InfinitySingle" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>InfinitySingle</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c8b7a17f-eb43-39c9-d5e3-227fad525712" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.InvalidArg``1(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="InvalidArg" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="argumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.InvalidArg``1(System.String,System.String)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>invalidArg</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8cbfa5f8-2989-9a46-6367-850bfa2f62fc" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.InvalidOp``1(System.String)">
      <topicdata group="api" />
      <apidata name="InvalidOp" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.InvalidOp``1(System.String)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>invalidOp</value>
          </argument>
        </attribute>
      </attributes>
      <file name="43006cf1-1fa8-4002-1c61-48aad302e9ab" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.IsNull``1(``0)">
      <topicdata group="api" />
      <apidata name="IsNull" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.IsNull``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>isNull</value>
          </argument>
        </attribute>
      </attributes>
      <file name="09dfee36-00e6-4a79-1468-1ed7902c9632" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})">
      <topicdata group="api" />
      <apidata name="KeyValuePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <parameters>
        <parameter name="keyValuePair">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <template name="TKey" index="0" api="M:Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})" />
              <template name="TValue" index="1" api="M:Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Tuple`2" ref="true">
          <specialization>
            <template name="TKey" index="0" api="M:Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})" />
            <template name="TValue" index="1" api="M:Microsoft.FSharp.Core.Operators.KeyValuePattern``2(System.Collections.Generic.KeyValuePair{``0,``1})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|KeyValue|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7f609595-1f4c-33b7-d51f-5ffd63eb3f81" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.limitedHash``1(System.Int32,``0)">
      <topicdata group="api" />
      <apidata name="limitedHash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="limit">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="obj">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.limitedHash``1(System.Int32,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="93204ed4-fa00-285a-939d-daf79178c7c7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})">
      <topicdata group="api" />
      <apidata name="Lock" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TLock">
          <constrained ref="true" />
        </template>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="lockObject">
          <template name="TLock" index="0" api="M:Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})" />
        </parameter>
        <parameter name="action">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <template name="T" index="1" api="M:Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="1" api="M:Microsoft.FSharp.Core.Operators.Lock``2(``0,Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>lock</value>
          </argument>
        </attribute>
      </attributes>
      <file name="119976c3-4a92-3c3d-ddc5-88d29cd61a22" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Log``1(``0)">
      <topicdata group="api" />
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Log``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Log``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>log</value>
          </argument>
        </attribute>
      </attributes>
      <file name="70c9ed05-3c48-1dbd-2425-6eadea84a26f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Log10``1(``0)">
      <topicdata group="api" />
      <apidata name="Log10" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Log10``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Log10``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>log10</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3712972d-b164-0440-8f9c-45e980176fd0" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Max``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Max``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Max``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Max``1(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>max</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ff35fd66-1edf-b50f-1c4a-5e727ab5c411" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Min``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Min``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Min``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Min``1(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>min</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a7993711-5e80-838a-e6d6-6271b87a6b00" />
    </api>
    <api id="P:Microsoft.FSharp.Core.Operators.NaN">
      <topicdata group="api" />
      <apidata name="NaN" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NaN" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>NaN</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a49a758f-8324-d531-c9d9-950c1fcd5e9d" />
    </api>
    <api id="P:Microsoft.FSharp.Core.Operators.NaNSingle">
      <topicdata group="api" />
      <apidata name="NaNSingle" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NaNSingle" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>NaNSingle</value>
          </argument>
        </attribute>
      </attributes>
      <file name="059ee290-1db2-fe50-3e12-3d00849e14c3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Not(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Not" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>not</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b8616b91-99b5-3acf-fac5-1d943408f4c0" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NullArg``1(System.String)">
      <topicdata group="api" />
      <apidata name="NullArg" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="argumentName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NullArg``1(System.String)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>nullArg</value>
          </argument>
        </attribute>
      </attributes>
      <file name="aa5b85bf-51d7-56ca-cf62-5026911ee225" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_Addition``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3f2f5261-e5f5-1b16-5021-5a99c5cf3471" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="list1">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="list2">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Append``1(Microsoft.FSharp.Collections.FSharpList{``0},Microsoft.FSharp.Collections.FSharpList{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2c461baf-b9f7-2c6a-2ddf-5cc8cb2d5843" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="BitwiseAnd" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_BitwiseAnd``1(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fc292767-9d00-cf2e-a6cd-46828fd8f348" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="BitwiseOr" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_BitwiseOr``1(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7c180ecb-44e6-ec8a-33e7-add8983e2aad" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)">
      <topicdata group="api" />
      <apidata name="ColonEquals" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="cell">
          <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_ColonEquals``1(Microsoft.FSharp.Core.FSharpRef{``0},``0)" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="71a8e888-227a-539b-191e-6b70c9ff2562" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})">
      <topicdata group="api" />
      <apidata name="ComposeLeft" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T2" />
        <template name="T3" />
        <template name="T1" />
      </templates>
      <parameters>
        <parameter name="func2">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T2" index="0" api="M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})" />
              <template name="T3" index="1" api="M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="func1">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="2" api="M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})" />
              <template name="T2" index="0" api="M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T1" index="2" api="M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})" />
            <template name="T3" index="1" api="M:Microsoft.FSharp.Core.Operators.op_ComposeLeft``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``2,``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3bc49341-aea4-22b3-0a41-cb92c7537096" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})">
      <topicdata group="api" />
      <apidata name="ComposeRight" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="func1">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="func2">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})" />
              <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})" />
            <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_ComposeRight``3(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpFunc{``1,``2})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2d7ee773-38c8-67b4-a74b-3da4ea491bca" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Concatenate(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Concatenate" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="s2">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This construct is for ML compatibility. Consider using the '+' operator instead. This may require a type annotation to indicate it acts on strings. This message can be disabled using '--nowarn:62' or '#nowarn "62"'.</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>62</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2ec4c0f6-00d9-421c-9cc5-6ca7f81ad46a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})">
      <topicdata group="api" />
      <apidata name="Dereference" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="cell">
          <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Dereference``1(Microsoft.FSharp.Core.FSharpRef{``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <file name="c97f86a7-b8cc-7ee7-7901-0fb7cafa8246" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_Division``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="17200b3a-7f09-62fd-4e0f-566a5235a825" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Equality``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Equality``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Equality``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bc9d8fc9-4d2c-f686-ac32-187a637f0de5" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="ExclusiveOr" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_ExclusiveOr``1(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cf2266ed-8edf-04ad-c63e-aa7cb1109f79" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)">
      <topicdata group="api" />
      <apidata name="Exponentiation" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Exponentiation``2(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fcd70b82-7b35-976b-efc2-39cb62ed50a9" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_GreaterThan``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_GreaterThan``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_GreaterThan``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="67284c46-177f-0940-be65-0786f71dae21" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_GreaterThanOrEqual``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1140754a-ac0e-ef20-5d02-9089337c7f73" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Inequality``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Inequality``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Inequality``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="04e56a8c-c235-bca5-9ff9-11286b4e2ae8" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_LeftShift``1(``0,System.Int32)">
      <topicdata group="api" />
      <apidata name="LeftShift" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_LeftShift``1(``0,System.Int32)" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_LeftShift``1(``0,System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="68e544d9-3f1c-a800-ae67-f67c39b37e31" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_LessThan``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_LessThan``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_LessThan``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0e1bf003-63e5-1ac8-8518-b3e207f6621e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_LessThanOrEqual``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fd1ab224-0804-71fa-2c93-2e3296f3586e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_LogicalNot``1(``0)">
      <topicdata group="api" />
      <apidata name="LogicalNot" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_LogicalNot``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_LogicalNot``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="1b5f93d6-514d-490b-b14f-7450dea3c336" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_Modulus``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="32cd2825-b2ce-4c05-a3c3-e2b175bb6fb9" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_Multiply``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8f8bdcf9-4c77-bd07-adf8-e4cc58db205a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)">
      <topicdata group="api" />
      <apidata name="PipeLeft" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)" />
              <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1700bd95-a048-8b6e-8e39-377e0b02e2be" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)">
      <topicdata group="api" />
      <apidata name="PipeLeft2" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)" />
                  <template name="TResult" index="2" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft2``3(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}},``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a2f61eda-9b77-bb5e-f133-d167702fdc54" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)">
      <topicdata group="api" />
      <apidata name="PipeLeft3" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
                      <template name="TResult" index="3" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="arg1">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
        </parameter>
        <parameter name="arg3">
          <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="3" api="M:Microsoft.FSharp.Core.Operators.op_PipeLeft3``4(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}},``0,``1,``2)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8781bf3e-8c69-0f81-7023-6bf4b0a86936" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})">
      <topicdata group="api" />
      <apidata name="PipeRight" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="arg">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
        </parameter>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
              <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="232ad8dc-4e2a-2913-9228-c905d2e805f5" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})">
      <topicdata group="api" />
      <apidata name="PipeRight2" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})" />
        </parameter>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})" />
                  <template name="TResult" index="2" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight2``3(``0,``1,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``2}})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0814fd5c-437d-73db-a475-01a87ef112d2" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})">
      <topicdata group="api" />
      <apidata name="PipeRight3" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
        </parameter>
        <parameter name="arg3">
          <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
        </parameter>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
                      <template name="TResult" index="3" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="3" api="M:Microsoft.FSharp.Core.Operators.op_PipeRight3``4(``0,``1,``2,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``2,``3}}})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="16fd3da1-edd9-4d06-f31e-e09068dfea0f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Range" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="start">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)" />
        </parameter>
        <parameter name="finish">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Range``1(``0,``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="52c228a8-73ac-81cf-644f-93a2696bbb06" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)">
      <topicdata group="api" />
      <apidata name="RangeStep" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TStep" />
      </templates>
      <parameters>
        <parameter name="start">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)" />
        </parameter>
        <parameter name="step">
          <template name="TStep" index="1" api="M:Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)" />
        </parameter>
        <parameter name="finish">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_RangeStep``2(``0,``1,``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4f589b1c-9b61-5947-2812-51a781f89c58" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_RightShift``1(``0,System.Int32)">
      <topicdata group="api" />
      <apidata name="RightShift" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_RightShift``1(``0,System.Int32)" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_RightShift``1(``0,System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ce475934-5729-9e93-e957-2ae0cabbfb7e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.op_Subtraction``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3c2d4ced-b5e1-937c-300f-4210cfb854e3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_UnaryNegation``1(``0)">
      <topicdata group="api" />
      <apidata name="UnaryNegation" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="n">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_UnaryNegation``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_UnaryNegation``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9416bf24-dc54-80d8-e514-ec84c103eebd" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.op_UnaryPlus``1(``0)">
      <topicdata group="api" />
      <apidata name="UnaryPlus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_UnaryPlus``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.op_UnaryPlus``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ccc090b5-1ac1-21fd-a006-9e5ecd7f6c5b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.PowInteger``1(``0,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowInteger" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.PowInteger``1(``0,System.Int32)" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.PowInteger``1(``0,System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>pown</value>
          </argument>
        </attribute>
      </attributes>
      <file name="28bafc85-f9a9-64dd-24c4-83022a6f0f67" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Raise``1(System.Exception)">
      <topicdata group="api" />
      <apidata name="Raise" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="exn">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Raise``1(System.Exception)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>raise</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9a0987b2-898e-8464-54d4-b6d8ecdab9c7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Ref``1(``0)">
      <topicdata group="api" />
      <apidata name="Ref" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Ref``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpRef`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Ref``1(``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ref</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e3c3eab9-4d35-5ce3-cd5c-fd5a8a990688" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Reraise``1">
      <topicdata group="api" />
      <apidata name="Reraise" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Reraise``1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>reraise</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1115074a-7bc3-4014-17ef-85edeeaa56e5" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Rethrow``1">
      <topicdata group="api" />
      <apidata name="Rethrow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Rethrow``1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function has been renamed to 'reraise'. Please adjust your code to reflect this</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>rethrow</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b74fad0b-f477-a0e1-8969-4c0c7515da52" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Round``1(``0)">
      <topicdata group="api" />
      <apidata name="Round" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Round``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Round``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>round</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c559bb14-44fd-ee55-1eab-b51cd614ea42" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Sign``1(``0)">
      <topicdata group="api" />
      <apidata name="Sign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Sign``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sign</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b95edf3d-dabc-eedf-3470-b093408ad6ea" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Sin``1(``0)">
      <topicdata group="api" />
      <apidata name="Sin" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Sin``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Sin``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sin</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c5f28421-fcba-a77f-03db-139663802307" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Sinh``1(``0)">
      <topicdata group="api" />
      <apidata name="Sinh" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Sinh``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Sinh``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sinh</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d3a0a3d4-a175-ba04-4d83-44b1c8f6e867" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.SizeOf``1">
      <topicdata group="api" />
      <apidata name="SizeOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sizeof</value>
          </argument>
        </attribute>
      </attributes>
      <file name="94dd17f7-558a-642b-6caa-60ff284fc5a9" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})">
      <topicdata group="api" />
      <apidata name="Snd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="tuple">
          <type api="T:System.Tuple`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})" />
              <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.Snd``2(System.Tuple{``0,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>snd</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2c8d25e9-dbde-cc14-db4a-d129b02c02da" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Sqrt``2(``0)">
      <topicdata group="api" />
      <apidata name="Sqrt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Sqrt``2(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.Sqrt``2(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sqrt</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8bc7ec9b-4dc7-d615-f822-89255001e8f4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Tan``1(``0)">
      <topicdata group="api" />
      <apidata name="Tan" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Tan``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Tan``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>tan</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b7e30070-75ae-7656-9165-64e8ca4fe972" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Tanh``1(``0)">
      <topicdata group="api" />
      <apidata name="Tanh" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Tanh``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Tanh``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>tanh</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bcb33760-f858-c1c3-4067-fc99c760cdd3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToByte``1(``0)">
      <topicdata group="api" />
      <apidata name="ToByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToByte``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>byte</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4e28baf1-c972-29fa-c151-680b444c5cf1" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToChar``1(``0)">
      <topicdata group="api" />
      <apidata name="ToChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToChar``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>char</value>
          </argument>
        </attribute>
      </attributes>
      <file name="75b61703-9101-f7ce-7b86-8e1eaae24eaa" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToDecimal``1(``0)">
      <topicdata group="api" />
      <apidata name="ToDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToDecimal``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>decimal</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a641b09e-187c-1ada-cf4f-1ee3f35c6179" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToDouble``1(``0)">
      <topicdata group="api" />
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToDouble``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>float</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3c31920e-5b58-db44-27e3-d4f84d3ff9a7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToEnum``1(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToEnum" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="M:Microsoft.FSharp.Core.Operators.ToEnum``1(System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>enum</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b20c6695-fe94-a63e-2b1b-71ed25ecdc27" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToInt``1(``0)">
      <topicdata group="api" />
      <apidata name="ToInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToInt``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int</value>
          </argument>
        </attribute>
      </attributes>
      <file name="460f7e3f-74a9-0331-0ca4-506221d38b8e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToInt16``1(``0)">
      <topicdata group="api" />
      <apidata name="ToInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToInt16``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int16</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2c875560-7aa8-8325-e6b1-48e5cfaf287d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToInt32``1(``0)">
      <topicdata group="api" />
      <apidata name="ToInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToInt32``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int32</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bd2c3cde-bfec-4637-5a5e-4aa9c713ea15" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToInt64``1(``0)">
      <topicdata group="api" />
      <apidata name="ToInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToInt64``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int64</value>
          </argument>
        </attribute>
      </attributes>
      <file name="dfddc5cc-845c-ade7-a1da-22e0c260ab7b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToIntPtr``1(``0)">
      <topicdata group="api" />
      <apidata name="ToIntPtr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToIntPtr``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>nativeint</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a0238fe9-29fa-5318-2203-b68f09cc33f3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToSByte``1(``0)">
      <topicdata group="api" />
      <apidata name="ToSByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToSByte``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sbyte</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e71cbd96-b64b-6094-a16d-c1977d083864" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToSingle``1(``0)">
      <topicdata group="api" />
      <apidata name="ToSingle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToSingle``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>float32</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bbb106a4-617c-e7fd-aae0-271b56cb4b4a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToString``1(``0)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToString``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>string</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a390625e-e6b7-2c75-ded0-1784bae7baed" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToUInt16``1(``0)">
      <topicdata group="api" />
      <apidata name="ToUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToUInt16``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint16</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6e841d1c-f7ba-1edb-e84d-4e8c56a90d15" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToUInt32``1(``0)">
      <topicdata group="api" />
      <apidata name="ToUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToUInt32``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint32</value>
          </argument>
        </attribute>
      </attributes>
      <file name="15a41004-d390-d4af-fd46-4f441efdff58" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToUInt64``1(``0)">
      <topicdata group="api" />
      <apidata name="ToUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToUInt64``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint64</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4ffea3e4-c5fe-385f-fa6b-b908e985baf7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.ToUIntPtr``1(``0)">
      <topicdata group="api" />
      <apidata name="ToUIntPtr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.ToUIntPtr``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UIntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>unativeint</value>
          </argument>
        </attribute>
      </attributes>
      <file name="58e1f2d4-0c4d-b4c8-96bf-d78926ca9f6f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Truncate``1(``0)">
      <topicdata group="api" />
      <apidata name="Truncate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Truncate``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Truncate``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>truncate</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f2af479b-164e-0345-7091-199350817658" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.TryUnbox``1(System.Object)">
      <topicdata group="api" />
      <apidata name="TryUnbox" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.TryUnbox``1(System.Object)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>tryUnbox</value>
          </argument>
        </attribute>
      </attributes>
      <file name="56798ad7-1b36-b7c8-341b-b1dc5a66a609" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.TypeDefOf``1">
      <topicdata group="api" />
      <apidata name="TypeDefOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>typedefof</value>
          </argument>
        </attribute>
      </attributes>
      <file name="898f0212-8a0a-4b8b-6ddd-64aab37d8c42" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.TypeOf``1">
      <topicdata group="api" />
      <apidata name="TypeOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>typeof</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7eb8778f-cd87-cb99-a28c-96637f188f48" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Unbox``1(System.Object)">
      <topicdata group="api" />
      <apidata name="Unbox" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Unbox``1(System.Object)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>unbox</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f24b174d-f0ba-80e7-85d2-4b9c8f213599" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})">
      <topicdata group="api" />
      <apidata name="Using" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:System.IDisposable" ref="true" />
            </implements>
          </constrained>
        </template>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="resource">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
        </parameter>
        <parameter name="action">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
              <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.Using``2(``0,Microsoft.FSharp.Core.FSharpFunc{``0,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>using</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f1997f60-8b67-e506-28fa-e0300125384f" />
    </api>
    <api id="T:Microsoft.FSharp.Core.Operators.Checked">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.Operators.Checked" />
      <apidata name="Checked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="2b3c07e6-98de-22b2-c8e9-2c0c1206fe96" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.Operators.Checked">
      <topicdata name="Checked" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.Operators.Checked" />
      <apidata name="Checked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.op_Addition``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.op_Multiply``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.op_Subtraction``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.op_UnaryNegation``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToChar``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt16``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt32``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt64``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToIntPtr``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToSByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt16``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt32``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt64``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToUIntPtr``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" />
      </containers>
      <file name="f3d5a1f8-9da9-82d5-458d-853450c1cf49" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.Operators.Checked">
      <topicdata name="Checked" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.Operators.Checked" />
      <apidata name="Checked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToChar``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt16``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt32``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt64``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToIntPtr``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToSByte``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt16``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt32``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt64``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.ToUIntPtr``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" />
      </containers>
      <file name="d7320442-e4d2-4f58-9779-12a8cba8310b" />
    </api>
    <api id="Operators.T:Microsoft.FSharp.Core.Operators.Checked">
      <topicdata name="Checked" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.FSharp.Core.Operators.Checked" />
      <apidata name="Checked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.op_Addition``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.op_Multiply``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.op_Subtraction``3(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Checked.op_UnaryNegation``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" />
      </containers>
      <file name="84f41aab-a461-ed54-e0b4-c34e98620721" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.op_Addition``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.op_Addition``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.Checked.op_Addition``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.Checked.op_Addition``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4dd9e510-910c-ae69-08b0-9ce1c521252e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.op_Multiply``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.op_Multiply``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.Checked.op_Multiply``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.Checked.op_Multiply``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4c408d78-3dca-3675-b2dd-a75183d1846d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.op_Subtraction``3(``0,``1)">
      <topicdata group="api" />
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.op_Subtraction``3(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.Checked.op_Subtraction``3(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T3" index="2" api="M:Microsoft.FSharp.Core.Operators.Checked.op_Subtraction``3(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="875d25d6-b4f1-0931-b8c7-241220c9fa72" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.op_UnaryNegation``1(``0)">
      <topicdata group="api" />
      <apidata name="UnaryNegation" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.op_UnaryNegation``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.op_UnaryNegation``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="dbea6225-1ba2-95c4-c2e1-deebf1d33551" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToByte``1(``0)">
      <topicdata group="api" />
      <apidata name="ToByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToByte``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>byte</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cbed13f2-d168-ed32-67a9-109f08a4ff90" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToChar``1(``0)">
      <topicdata group="api" />
      <apidata name="ToChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToChar``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>char</value>
          </argument>
        </attribute>
      </attributes>
      <file name="db4dec1d-d945-a0f7-9bba-f377995ee8af" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToInt``1(``0)">
      <topicdata group="api" />
      <apidata name="ToInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int</value>
          </argument>
        </attribute>
      </attributes>
      <file name="14927785-c83f-a16d-82e2-a2980c224df0" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToInt16``1(``0)">
      <topicdata group="api" />
      <apidata name="ToInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt16``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int16</value>
          </argument>
        </attribute>
      </attributes>
      <file name="aab3f3e9-bc35-0cb8-bc67-e8744bf02cbc" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToInt32``1(``0)">
      <topicdata group="api" />
      <apidata name="ToInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt32``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int32</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e32e0757-d18b-2de6-3736-51021a13e474" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToInt64``1(``0)">
      <topicdata group="api" />
      <apidata name="ToInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToInt64``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>int64</value>
          </argument>
        </attribute>
      </attributes>
      <file name="accc8494-e20e-1da4-908b-182dcd535099" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToIntPtr``1(``0)">
      <topicdata group="api" />
      <apidata name="ToIntPtr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToIntPtr``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>nativeint</value>
          </argument>
        </attribute>
      </attributes>
      <file name="726747e4-8000-bbe7-6d08-5883600ea1ad" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToSByte``1(``0)">
      <topicdata group="api" />
      <apidata name="ToSByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToSByte``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sbyte</value>
          </argument>
        </attribute>
      </attributes>
      <file name="88365d2d-6692-d7d3-0ae4-6358d2747766" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt16``1(``0)">
      <topicdata group="api" />
      <apidata name="ToUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt16``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint16</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f0e1742c-86e3-a436-e516-7c5840ab1917" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt32``1(``0)">
      <topicdata group="api" />
      <apidata name="ToUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt32``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint32</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e29eb17f-627d-937a-cb27-717a90723144" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt64``1(``0)">
      <topicdata group="api" />
      <apidata name="ToUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToUInt64``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>uint64</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7738c631-7166-8a80-d7d1-e0e9c724ffc1" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Checked.ToUIntPtr``1(``0)">
      <topicdata group="api" />
      <apidata name="ToUIntPtr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Checked.ToUIntPtr``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UIntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Checked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.NoDynamicInvocationAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>unativeint</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1c7c97f8-fc34-c19a-5016-9f55336d91ee" />
    </api>
    <api id="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" />
      <apidata name="NonStructuralComparison" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ca962b7c-b4d4-4dc1-9920-fe9aa8a7959d" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.Operators.NonStructuralComparison">
      <topicdata name="NonStructuralComparison" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" />
      <apidata name="NonStructuralComparison" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Compare``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Hash``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Max``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Min``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Equality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThan``2(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThanOrEqual``2(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Inequality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThan``2(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThanOrEqual``2(``0,``1)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" />
      </containers>
      <file name="48ef1717-5459-4eba-0b8b-b0a0058c4a94" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.Operators.NonStructuralComparison">
      <topicdata name="NonStructuralComparison" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" />
      <apidata name="NonStructuralComparison" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Compare``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Hash``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Max``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Min``1(``0,``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" />
      </containers>
      <file name="8206c544-087a-9e30-7d33-7515251c69ea" />
    </api>
    <api id="Operators.T:Microsoft.FSharp.Core.Operators.NonStructuralComparison">
      <topicdata name="NonStructuralComparison" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" />
      <apidata name="NonStructuralComparison" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Equality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThan``2(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThanOrEqual``2(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Inequality``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThan``2(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThanOrEqual``2(``0,``1)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" />
      </containers>
      <file name="ba2a0c84-8cd1-a0b7-fb01-2dc4570d159a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Compare``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Compare``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Compare``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>compare</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0e985cdc-5caa-1d0f-4eba-8592901cbf28" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Hash``1(``0)">
      <topicdata group="api" />
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Hash``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>hash</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8bfb9b78-61ec-1754-b95a-2adc5ceb907e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Max``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Max``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Max``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Max``1(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>max</value>
          </argument>
        </attribute>
      </attributes>
      <file name="59fe63c5-4b97-733a-2300-17b67313568d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Min``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="e1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Min``1(``0,``0)" />
        </parameter>
        <parameter name="e2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Min``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.Min``1(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>min</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fcb303b9-aaf7-26f0-1956-11214d26c7db" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Equality``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Equality``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Equality``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b836c74a-b418-5e4c-6ed0-0bd08605c0a6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThan``2(``0,``1)">
      <topicdata group="api" />
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThan``2(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThan``2(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cf6086ee-b4ca-65c2-d4aa-ee5062e626f7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThanOrEqual``2(``0,``1)">
      <topicdata group="api" />
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThanOrEqual``2(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_GreaterThanOrEqual``2(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d1dadd22-eab5-9e08-9485-1bc8ff5130cc" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Inequality``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Inequality``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_Inequality``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cae57ecd-118c-9722-c5b7-a43bd98c8dd7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThan``2(``0,``1)">
      <topicdata group="api" />
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThan``2(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThan``2(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2c331650-0557-77d9-2130-116fb466b8a5" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThanOrEqual``2(``0,``1)">
      <topicdata group="api" />
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThanOrEqual``2(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.NonStructuralComparison.op_LessThanOrEqual``2(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.NonStructuralComparison" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2593d378-78f8-b81d-9d8a-8f7a3f01381b" />
    </api>
    <api id="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" />
      <apidata name="OperatorIntrinsics" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="28d40ae4-2534-3598-81fa-b0dd4642bd04" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics">
      <topicdata name="OperatorIntrinsics" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" />
      <apidata name="OperatorIntrinsics" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AbsDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AcosDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AsinDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Atan2Dynamic``2(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AtanDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CeilingDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CosDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CoshDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.ExpDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.FloorDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetStringSlice(System.String,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Log10Dynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.LogDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowByte(System.Byte,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDecimal(System.Decimal,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDouble(System.Double,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDynamic``2(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt16(System.Int16,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt32(System.Int32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt64(System.Int64,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowIntPtr(System.IntPtr,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowSByte(System.SByte,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowSingle(System.Single,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt16(System.UInt16,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt32(System.UInt32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt64(System.UInt64,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUIntPtr(System.UIntPtr,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeByte(System.Byte,System.Byte,System.Byte)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeChar(System.Char,System.Char)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeDouble(System.Double,System.Double,System.Double)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt16(System.Int16,System.Int16,System.Int16)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt32(System.Int32,System.Int32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt64(System.Int64,System.Int64,System.Int64)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeIntPtr(System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeSByte(System.SByte,System.SByte,System.SByte)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeSingle(System.Single,System.Single,System.Single)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt16(System.UInt16,System.UInt16,System.UInt16)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt32(System.UInt32,System.UInt32,System.UInt32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt64(System.UInt64,System.UInt64,System.UInt64)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUIntPtr(System.UIntPtr,System.UIntPtr,System.UIntPtr)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RoundDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32,``0[])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:,0:])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SignDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinhDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SqrtDynamic``2(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanhDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TruncateDynamic``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" />
      </containers>
      <file name="6d662290-18ef-e982-9f64-f3aa46581608" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics">
      <topicdata name="OperatorIntrinsics" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" />
      <apidata name="OperatorIntrinsics" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AbsDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AcosDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AsinDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Atan2Dynamic``2(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AtanDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CeilingDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CosDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CoshDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.ExpDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.FloorDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetStringSlice(System.String,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Log10Dynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.LogDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowByte(System.Byte,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDecimal(System.Decimal,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDouble(System.Double,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDynamic``2(``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt16(System.Int16,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt32(System.Int32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt64(System.Int64,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowIntPtr(System.IntPtr,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowSByte(System.SByte,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowSingle(System.Single,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt16(System.UInt16,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt32(System.UInt32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt64(System.UInt64,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUIntPtr(System.UIntPtr,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeByte(System.Byte,System.Byte,System.Byte)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeChar(System.Char,System.Char)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeDouble(System.Double,System.Double,System.Double)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt16(System.Int16,System.Int16,System.Int16)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt32(System.Int32,System.Int32,System.Int32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt64(System.Int64,System.Int64,System.Int64)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeIntPtr(System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeSByte(System.SByte,System.SByte,System.SByte)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeSingle(System.Single,System.Single,System.Single)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt16(System.UInt16,System.UInt16,System.UInt16)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt32(System.UInt32,System.UInt32,System.UInt32)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt64(System.UInt64,System.UInt64,System.UInt64)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUIntPtr(System.UIntPtr,System.UIntPtr,System.UIntPtr)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RoundDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32,``0[])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:,0:])" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SignDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinhDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SqrtDynamic``2(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanhDynamic``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TruncateDynamic``1(``0)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" />
      </containers>
      <file name="e5af8663-26b8-4ea3-fc37-daafb417163b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AbsDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="AbsDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AbsDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AbsDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="20699877-a8bd-62ab-a72e-800332b094ce" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AcosDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="AcosDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AcosDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AcosDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="2a3190b1-8a79-4d6a-96b2-ae125a725049" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AsinDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="AsinDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AsinDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AsinDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="af9a4379-1ead-7240-5c28-33d996b55cc8" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Atan2Dynamic``2(``0,``0)">
      <topicdata group="api" />
      <apidata name="Atan2Dynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="y">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Atan2Dynamic``2(``0,``0)" />
        </parameter>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Atan2Dynamic``2(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Atan2Dynamic``2(``0,``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6e9c5237-a45e-5c9b-cb26-426fb800da6c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AtanDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="AtanDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AtanDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.AtanDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="9113b9f4-0753-8bef-dac4-caef5a48c506" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CeilingDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="CeilingDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CeilingDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CeilingDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="4e980587-5253-5590-0ec8-bf64bd419c79" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CosDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="CosDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CosDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CosDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="104de84d-7371-cf95-5b24-a73c0274e720" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CoshDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="CoshDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CoshDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.CoshDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="6bd502fa-ebed-a191-5777-25c9944c69c1" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.ExpDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="ExpDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.ExpDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.ExpDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="91f739dc-fdf0-a278-aaf9-277257d5a715" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.FloorDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="FloorDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.FloorDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.FloorDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="cc4ee37a-b55e-0deb-b58e-bea81ef8eb41" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="GetArraySlice" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
          </arrayOf>
        </parameter>
        <parameter name="start">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="61c704e4-3b95-9496-e69a-224b552ccbcd" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="GetArraySlice2D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="2">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
          </arrayOf>
        </parameter>
        <parameter name="start1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="2">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="de6cb2df-88ab-6d8e-e456-d769225d101a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="GetArraySlice2DFixed1" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="2">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
          </arrayOf>
        </parameter>
        <parameter name="index1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="start2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="88a117ec-f5bd-b5b6-39da-784f75731681" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32)">
      <topicdata group="api" />
      <apidata name="GetArraySlice2DFixed2" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="2">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32)" />
          </arrayOf>
        </parameter>
        <parameter name="start1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32)" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="42e4167d-de8e-cb68-0468-e65d7501119c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="GetArraySlice3D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="3">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
          </arrayOf>
        </parameter>
        <parameter name="start1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start3">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish3">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="3">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c8d9d114-8fba-70bb-479c-92da2caec13f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="GetArraySlice4D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <arrayOf rank="4">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
          </arrayOf>
        </parameter>
        <parameter name="start1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start3">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish3">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start4">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish4">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="4">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="dd40aa82-3207-8623-dec2-fad981430c97" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.GetStringSlice(System.String,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
      <topicdata group="api" />
      <apidata name="GetStringSlice" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="26e21f3f-6033-6bfc-09c8-2bd895b3fded" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Log10Dynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="Log10Dynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Log10Dynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.Log10Dynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="fe2b0e26-5dc4-fd26-a441-db8c2440352d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.LogDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="LogDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.LogDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.LogDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="f58fbfa2-e6e4-d3a5-032d-ae8b7b37cb3e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowByte(System.Byte,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fb5030fa-5aa0-b210-0853-2706b4e967a3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDecimal(System.Decimal,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="da7dde53-510c-e740-49bd-a15b01aaced5" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDouble(System.Double,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d91b0d7f-de93-4c39-5bc6-107cda62b39b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDynamic``2(``0,``1)">
      <topicdata group="api" />
      <apidata name="PowDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDynamic``2(``0,``1)" />
        </parameter>
        <parameter name="y">
          <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDynamic``2(``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowDynamic``2(``0,``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e1c6c463-f18d-964f-1570-7359cc180374" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="one">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,System.Int32)" />
        </parameter>
        <parameter name="mul">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,System.Int32)" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,System.Int32)" />
                  <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,System.Int32)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,System.Int32)" />
        </parameter>
        <parameter name="exponent">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,System.Int32)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="9a7bda6d-44d4-686f-add1-d25675f360f8" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt16(System.Int16,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="0347bdb9-943a-9c35-7e33-e0720c6a7886" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt32(System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2b5d6866-8768-579d-0fd0-463d881bbe30" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowInt64(System.Int64,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="99a30cf2-c2de-02e5-7413-6ff6078dd424" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowIntPtr(System.IntPtr,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowIntPtr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="8e2c9cf1-7272-4a38-3b32-1b25a1c6977e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowSByte(System.SByte,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowSByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b38247a8-88ee-44ec-5f21-d7bc4cbe251a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowSingle(System.Single,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowSingle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4d1293c5-f74d-3eee-7d68-1ffb3a15801f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt16(System.UInt16,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="be2ad42d-e448-a096-40a6-fd13b20a8b2c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt32(System.UInt32,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b4b4485e-61a0-39f7-e705-31efa2e0886b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUInt64(System.UInt64,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="25ecb769-f718-76e5-f44f-ad7f932b5626" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.PowUIntPtr(System.UIntPtr,System.Int32)">
      <topicdata group="api" />
      <apidata name="PowUIntPtr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="x">
          <type api="T:System.UIntPtr" ref="false" />
        </parameter>
        <parameter name="n">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UIntPtr" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e003f251-eab2-e7ec-0c25-d7668485c5c3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeByte(System.Byte,System.Byte,System.Byte)">
      <topicdata group="api" />
      <apidata name="RangeByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.Byte" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d585eb7e-b49f-9a32-bc46-bd9a56ea246b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeChar(System.Char,System.Char)">
      <topicdata group="api" />
      <apidata name="RangeChar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Char" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c5821a25-5f7b-47d9-d7ef-ba7e9b9eb810" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeDouble(System.Double,System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="RangeDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e618e283-b2bb-23c6-9a86-40a3d1c6a9a8" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)">
      <topicdata group="api" />
      <apidata name="RangeGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="one">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)" />
        </parameter>
        <parameter name="add">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)" />
                  <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="start">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)" />
        </parameter>
        <parameter name="stop">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeGeneric``1(``0,Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``0,``0}},``0,``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b58e6e9f-6950-236d-538c-1ed3b2b76dad" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt16(System.Int16,System.Int16,System.Int16)">
      <topicdata group="api" />
      <apidata name="RangeInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="958ab1d6-32d8-0884-09dc-01bacc5b13da" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt32(System.Int32,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="RangeInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="541c0a94-3593-500b-8537-ae4c982a87c4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeInt64(System.Int64,System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name="RangeInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4d386849-92a5-3975-db00-c59610113cd5" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeIntPtr(System.IntPtr,System.IntPtr,System.IntPtr)">
      <topicdata group="api" />
      <apidata name="RangeIntPtr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.IntPtr" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IntPtr" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="552a42b7-45af-507b-2394-7447ce1bd893" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeSByte(System.SByte,System.SByte,System.SByte)">
      <topicdata group="api" />
      <apidata name="RangeSByte" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.SByte" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.SByte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6961d244-4c19-0b7e-8dc7-4a271da7dc6e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeSingle(System.Single,System.Single,System.Single)">
      <topicdata group="api" />
      <apidata name="RangeSingle" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cb6c3704-b729-5a1c-203f-2de80ea934ef" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)">
      <topicdata group="api" />
      <apidata name="RangeStepGeneric" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TStep" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="zero">
          <template name="TStep" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
        </parameter>
        <parameter name="add">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="1" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="TStep" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
                  <template name="T" index="1" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="start">
          <template name="T" index="1" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
        </parameter>
        <parameter name="step">
          <template name="TStep" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
        </parameter>
        <parameter name="stop">
          <template name="T" index="1" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="1" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeStepGeneric``2(``0,Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,``0,``1)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d7a4d90e-1bfb-f65b-c032-db5957ea0d53" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt16(System.UInt16,System.UInt16,System.UInt16)">
      <topicdata group="api" />
      <apidata name="RangeUInt16" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.UInt16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c410970c-8770-1a6d-e492-ed1dbd589610" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt32(System.UInt32,System.UInt32,System.UInt32)">
      <topicdata group="api" />
      <apidata name="RangeUInt32" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c0273df3-7e0c-8d20-4ee0-29dcecde2005" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUInt64(System.UInt64,System.UInt64,System.UInt64)">
      <topicdata group="api" />
      <apidata name="RangeUInt64" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.UInt64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="57db52c9-27b3-e9cc-f917-264426ab6e7d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RangeUIntPtr(System.UIntPtr,System.UIntPtr,System.UIntPtr)">
      <topicdata group="api" />
      <apidata name="RangeUIntPtr" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.UIntPtr" ref="false" />
        </parameter>
        <parameter name="step">
          <type api="T:System.UIntPtr" ref="false" />
        </parameter>
        <parameter name="stop">
          <type api="T:System.UIntPtr" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.UIntPtr" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c9d53b27-7b86-c6dd-8a77-0fc3cda3fc8f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RoundDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="RoundDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RoundDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.RoundDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="d5d1bee7-a3bd-df8b-7cac-5ea82b5ba875" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])">
      <topicdata group="api" />
      <apidata name="SetArraySlice" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="start">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice``1(``0[],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b7e76201-8992-d7bd-958e-b00cf3254354" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:])">
      <topicdata group="api" />
      <apidata name="SetArraySlice2D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <arrayOf rank="2">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:])" />
          </arrayOf>
        </parameter>
        <parameter name="start1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <arrayOf rank="2">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2D``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:])" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="81de21b0-e478-2d79-8956-98e386958e57" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])">
      <topicdata group="api" />
      <apidata name="SetArraySlice2DFixed1" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <arrayOf rank="2">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="index1">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="start2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed1``1(``0[0:,0:],System.Int32,Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9c59e18a-ca0d-a062-8ba5-b71c7791eaf3" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32,``0[])">
      <topicdata group="api" />
      <apidata name="SetArraySlice2DFixed2" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <arrayOf rank="2">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32,``0[])" />
          </arrayOf>
        </parameter>
        <parameter name="start1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="index2">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="source">
          <arrayOf rank="1">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice2DFixed2``1(``0[0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},System.Int32,``0[])" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="08d49eae-8929-a610-3d66-b8a6a7083132" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:])">
      <topicdata group="api" />
      <apidata name="SetArraySlice3D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <arrayOf rank="3">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:])" />
          </arrayOf>
        </parameter>
        <parameter name="start1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start3">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish3">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <arrayOf rank="3">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice3D``1(``0[0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:])" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1354116a-3d9f-956e-d050-edb0eeb56d00" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:,0:])">
      <topicdata group="api" />
      <apidata name="SetArraySlice4D" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="target">
          <arrayOf rank="4">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:,0:])" />
          </arrayOf>
        </parameter>
        <parameter name="start1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish1">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish2">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start3">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish3">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="start4">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="finish4">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="source">
          <arrayOf rank="4">
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SetArraySlice4D``1(``0[0:,0:,0:,0:],Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},Microsoft.FSharp.Core.FSharpOption{System.Int32},``0[0:,0:,0:,0:])" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a6e43481-ecb5-a3a8-8e7a-3f66e6f9423e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SignDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="SignDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SignDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="57f25f8e-06d3-c2bc-a4eb-89ab17dc0acf" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="SinDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="51891278-43a0-a0f4-43b0-c8742dd0feff" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinhDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="SinhDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinhDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SinhDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="c3e3bf4b-4f09-b92d-a57e-05e7b02c084b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SqrtDynamic``2(``0)">
      <topicdata group="api" />
      <apidata name="SqrtDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T1" />
        <template name="T2" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T1" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SqrtDynamic``2(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T2" index="1" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.SqrtDynamic``2(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="551a4406-7d42-4650-42ec-eec14f225d50" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="TanDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="c9f5334d-2715-4126-2d28-fe8b4aa41a8d" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanhDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="TanhDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanhDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TanhDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="9b2cfceb-0747-99af-3a4f-59f1e0da6c64" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TruncateDynamic``1(``0)">
      <topicdata group="api" />
      <apidata name="TruncateDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TruncateDynamic``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.OperatorIntrinsics.TruncateDynamic``1(``0)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.OperatorIntrinsics" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilerMessageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This function is for use by compiled F# code and should not be used directly</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>1204</value>
          </argument>
          <assignment name="IsHidden">
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="aee0755b-a14f-7a97-33d0-d9945ca017f5" />
    </api>
    <api id="T:Microsoft.FSharp.Core.Operators.Unchecked">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.Operators.Unchecked" />
      <apidata name="Unchecked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ca82da2d-8c69-bdfb-50aa-3ac589492425" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.Operators.Unchecked">
      <topicdata name="Unchecked" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.Operators.Unchecked" />
      <apidata name="Unchecked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.Unchecked.Compare``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Unchecked.DefaultOf``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Unchecked.Equals``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Unchecked.Hash``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Unchecked.Unbox``1(System.Object)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Unchecked" />
      </containers>
      <file name="c4c472fc-bcc4-874e-c992-2520d67c9d68" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.Operators.Unchecked">
      <topicdata name="Unchecked" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.Operators.Unchecked" />
      <apidata name="Unchecked" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Operators.Unchecked.Compare``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Unchecked.DefaultOf``1" />
        <element api="M:Microsoft.FSharp.Core.Operators.Unchecked.Equals``1(``0,``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Unchecked.Hash``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.Operators.Unchecked.Unbox``1(System.Object)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Unchecked" />
      </containers>
      <file name="88e8284a-5efe-fff1-c5c1-919117b1e9d0" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Unchecked.Compare``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Unchecked.Compare``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Unchecked.Compare``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Unchecked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>compare</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2a6aa989-c8a9-a25f-f85e-c4d9d5394974" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Unchecked.DefaultOf``1">
      <topicdata group="api" />
      <apidata name="DefaultOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Unchecked.DefaultOf``1" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Unchecked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>defaultof</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7cfdd18e-49ea-dc6b-6cd3-e382509a01ff" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Unchecked.Equals``1(``0,``0)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Unchecked.Equals``1(``0,``0)" />
        </parameter>
        <parameter name="y">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Unchecked.Equals``1(``0,``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Unchecked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>equals</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7de8c478-565e-bb23-3901-ed08c1b1d8cf" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Unchecked.Hash``1(``0)">
      <topicdata group="api" />
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="x">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Unchecked.Hash``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Unchecked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>hash</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a96685b5-9bc3-6848-76d6-cbafdb4852ab" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Operators.Unchecked.Unbox``1(System.Object)">
      <topicdata group="api" />
      <apidata name="Unbox" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="v">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.Operators.Unchecked.Unbox``1(System.Object)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Operators.Unchecked" ref="true">
          <type api="T:Microsoft.FSharp.Core.Operators" ref="true" />
        </type>
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>unbox</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2d48afdd-b232-716a-ec49-215335b15127" />
    </api>
    <api id="T:Microsoft.FSharp.Core.OptimizedClosures">
      <topicdata group="api" />
      <apidata name="OptimizedClosures" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="77bfaa6e-8740-a862-fcdc-e846b6f00113" />
    </api>
    <api id="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
                  <template name="TResult" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="14d8ff2c-4f48-97cd-449e-87f65215f7e1" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3">
      <topicdata name="FSharpFunc" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.#ctor" />
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,`2}})" />
        <element api="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke">
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke(`0)" />
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke(`0,`1)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
      </containers>
      <file name="88f20c26-ded7-c920-4fca-fc59a0f35ac9" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3">
      <topicdata name="FSharpFunc" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,`2}})" />
        <element api="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke">
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke(`0)" />
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke(`0,`1)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
      </containers>
      <file name="20db5d64-83fe-797c-b68c-d3629161f8b3" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke(`0)" />
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke(`0,`1)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="a6261ca0-6b94-94fc-6688-d36f2f860789" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="141214d7-6321-a324-710f-f1bd10e61198" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,`2}})">
      <topicdata group="api" />
      <apidata name="Adapt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
                  <template name="TResult" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
            <template name="TResult" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
          </specialization>
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="13e06938-dcd8-f6f4-a56f-92ada61ac437" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke(`0)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
                  <template name="TResult" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="t">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
            <template name="TResult" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="25bda840-5f3f-a0c6-6a14-cf4fab9b8e09" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke(`0,`1)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3.Invoke" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`3" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="e1b4c62f-2887-096d-d47f-21a86525ecdb" />
    </api>
    <api id="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
                      <template name="TResult" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1749fb69-44bc-51d1-141d-8bb3ba478c2a" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4">
      <topicdata name="FSharpFunc" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.#ctor" />
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,`3}}})" />
        <element api="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke">
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke(`0)" />
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke(`0,`1,`2)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
      </containers>
      <file name="316d7992-aa8e-9483-920c-8ea31c0f9d8b" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4">
      <topicdata name="FSharpFunc" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,`3}}})" />
        <element api="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke">
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke(`0)" />
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke(`0,`1,`2)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
      </containers>
      <file name="21cf42ad-315a-e818-8a2a-d39039d9e530" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke(`0)" />
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke(`0,`1,`2)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="65ec720c-2042-6061-9b3a-230b4e53e2b5" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="847c84bd-b747-9aae-fee3-6aba8eca5fd6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,`3}}})">
      <topicdata group="api" />
      <apidata name="Adapt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
                      <template name="TResult" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
            <template name="TResult" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
          </specialization>
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="168dc652-207d-84bb-75b8-af5a2353f6f7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke(`0)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
                      <template name="TResult" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="t">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
            <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
              <specialization>
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
                <template name="TResult" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="24c8c68d-b3de-51f9-e15c-997077658833" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke(`0,`1,`2)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4.Invoke" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
        </parameter>
        <parameter name="arg3">
          <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`4" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="bfeab210-4e76-15fd-1fa1-69e9749e4029" />
    </api>
    <api id="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                      <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                        <specialization>
                          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                          <template name="TResult" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e0be6d79-4e9c-2411-b460-1a4ba6171995" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5">
      <topicdata name="FSharpFunc" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor" />
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,`4}}}})" />
        <element api="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke">
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0)" />
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0,`1,`2,`3)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
      </containers>
      <file name="d2848549-d930-fcfd-0839-3efa1d5723bb" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5">
      <topicdata name="FSharpFunc" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,`4}}}})" />
        <element api="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke">
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0)" />
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0,`1,`2,`3)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
      </containers>
      <file name="3a9206ce-bc1c-66ba-2954-12cec1620799" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0)" />
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0,`1,`2,`3)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="d1523581-f39f-ee8e-f6a8-18a770777d90" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="ba70c93f-61e2-2918-26a6-343c6aaad6ad" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,`4}}}})">
      <topicdata group="api" />
      <apidata name="Adapt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                      <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                        <specialization>
                          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                          <template name="TResult" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
            <template name="TResult" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
          </specialization>
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="36a4e5ae-e5ff-9d0d-ea49-7b3587f39271" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                      <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                        <specialization>
                          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                          <template name="TResult" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="t">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
            <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
              <specialization>
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                  <specialization>
                    <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                    <template name="TResult" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="683b6858-205a-7aee-604e-02943189e042" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke(`0,`1,`2,`3)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5.Invoke" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
        </parameter>
        <parameter name="arg3">
          <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
        </parameter>
        <parameter name="arg4">
          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`5" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="c02ba5ac-2549-353a-e65b-94be913fec2a" />
    </api>
    <api id="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.#ctor" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                      <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                        <specialization>
                          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                            <specialization>
                              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                              <template name="TResult" index="5" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                            </specialization>
                          </type>
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AbstractClassAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="fd1fe100-3927-a9b3-9bb8-dd12da3efd4a" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6">
      <topicdata name="FSharpFunc" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.#ctor" />
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,Microsoft.FSharp.Core.FSharpFunc{`4,`5}}}}})" />
        <element api="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke">
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke(`0)" />
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke(`0,`1,`2,`3,`4)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
      </containers>
      <file name="dea42fb6-11ee-7d10-4f42-dad59c958703" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6">
      <topicdata name="FSharpFunc" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
      <apidata name="FSharpFunc" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.#ctor" />
      <templates>
        <template name="T1" />
        <template name="T2" />
        <template name="T3" />
        <template name="T4" />
        <template name="T5" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,Microsoft.FSharp.Core.FSharpFunc{`4,`5}}}}})" />
        <element api="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke">
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke(`0)" />
          <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke(`0,`1,`2,`3,`4)" />
        </element>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
      </containers>
      <file name="3ec242b9-5f35-5cdd-2be4-093afd1cdb1d" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke">
      <topicdata name="Invoke" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke(`0)" />
        <element api="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke(`0,`1,`2,`3,`4)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="f6b8d480-a706-3544-fd8f-432c816e2ecf" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="9c3cdb79-bad2-d63d-8233-e61af4e28f35" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Adapt(Microsoft.FSharp.Core.FSharpFunc{`0,Microsoft.FSharp.Core.FSharpFunc{`1,Microsoft.FSharp.Core.FSharpFunc{`2,Microsoft.FSharp.Core.FSharpFunc{`3,Microsoft.FSharp.Core.FSharpFunc{`4,`5}}}}})">
      <topicdata group="api" />
      <apidata name="Adapt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="func">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                      <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                        <specialization>
                          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                            <specialization>
                              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                              <template name="TResult" index="5" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                            </specialization>
                          </type>
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" ref="true">
          <specialization>
            <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
            <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
            <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
            <template name="T5" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
            <template name="TResult" index="5" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
          </specialization>
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="46f12088-b232-b214-8921-0021f89bac44" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke(`0)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Microsoft.FSharp.Core.FSharpFunc`2.Invoke(`0)">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                  <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                    <specialization>
                      <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                      <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                        <specialization>
                          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                            <specialization>
                              <template name="T5" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                              <template name="TResult" index="5" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                            </specialization>
                          </type>
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="t">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
            <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
              <specialization>
                <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                  <specialization>
                    <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                    <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                      <specialization>
                        <template name="T5" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                        <template name="TResult" index="5" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="5e6b2e1c-71c5-c226-f83e-92b196c5e936" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke(`0,`1,`2,`3,`4)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6.Invoke" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="arg1">
          <template name="T1" index="0" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
        </parameter>
        <parameter name="arg2">
          <template name="T2" index="1" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
        </parameter>
        <parameter name="arg3">
          <template name="T3" index="2" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
        </parameter>
        <parameter name="arg4">
          <template name="T4" index="3" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
        </parameter>
        <parameter name="arg5">
          <template name="T5" index="4" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="5" api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptimizedClosures.FSharpFunc`6" ref="true">
          <type api="T:Microsoft.FSharp.Core.OptimizedClosures" ref="true" />
        </type>
      </containers>
      <file name="8f84dd17-e3c4-b450-0fb1-b375bd012fd2" />
    </api>
    <api id="T:Microsoft.FSharp.Core.OptionalArgumentAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.OptionalArgumentAttribute" />
      <apidata name="OptionalArgumentAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptionalArgumentAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Parameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="515d620d-63b8-a6f1-463f-54ae9fea9437" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.OptionalArgumentAttribute">
      <topicdata name="OptionalArgumentAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" />
      <apidata name="OptionalArgumentAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptionalArgumentAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptionalArgumentAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" />
      </containers>
      <file name="3f8afbaf-0aac-aae3-1e70-7f4148db22f6" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.OptionalArgumentAttribute">
      <topicdata name="OptionalArgumentAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" />
      <apidata name="OptionalArgumentAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptionalArgumentAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" />
      </containers>
      <file name="e64431a0-606e-861a-430e-82bb26450b5e" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.OptionalArgumentAttribute">
      <topicdata name="OptionalArgumentAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" />
      <apidata name="OptionalArgumentAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.OptionalArgumentAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" />
      </containers>
      <file name="1fa2fb2d-7d2d-f86d-548d-4b5337bc7ea4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionalArgumentAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
      </containers>
      <file name="cb6cb831-569b-1584-fb58-e11be58384fd" />
    </api>
    <api id="T:Microsoft.FSharp.Core.OptionModule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.OptionModule" />
      <apidata name="OptionModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
            <enumValue>
              <field name="ModuleSuffix" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e8a81e12-e144-8d33-0012-fc99472b4822" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.OptionModule">
      <topicdata name="OptionModule" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.OptionModule" />
      <apidata name="OptionModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptionModule.Bind``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Count``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Exists``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Core.FSharpOption{``0},``1)" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.ForAll``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.GetValue``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.IsNone``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.IsSome``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.OfNullable``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.OfObj``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.ToArray``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.ToList``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.ToNullable``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.ToObj``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" />
      </containers>
      <file name="ba99e300-f247-b5f2-53f8-892831d2e4bb" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.OptionModule">
      <topicdata name="OptionModule" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.OptionModule" />
      <apidata name="OptionModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.OptionModule.Bind``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Count``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Exists``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Core.FSharpOption{``0},``1)" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.ForAll``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.GetValue``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.IsNone``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.IsSome``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.OfNullable``1(System.Nullable{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.OfObj``1(``0)" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.ToArray``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.ToList``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.ToNullable``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        <element api="M:Microsoft.FSharp.Core.OptionModule.ToObj``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" />
      </containers>
      <file name="7236d80a-a920-6898-40cd-27d1233019dc" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.Bind``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="Bind" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="binder">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Bind``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Core.FSharpOption{``0})" />
              <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                <specialization>
                  <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.OptionModule.Bind``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Core.FSharpOption{``0})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Bind``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.OptionModule.Bind``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpOption{``1}},Microsoft.FSharp.Core.FSharpOption{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>bind</value>
          </argument>
        </attribute>
      </attributes>
      <file name="90a9329d-4f78-1605-a1fb-18604ddc9a04" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.Count``1(Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Count``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>count</value>
          </argument>
        </attribute>
      </attributes>
      <file name="ccb16b02-a3ef-6f5a-fcb5-d5dc3506195a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.Exists``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Exists``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Exists``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>exists</value>
          </argument>
        </attribute>
      </attributes>
      <file name="85e60022-6538-1367-094c-b26bdca51907" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Filter``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filter</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7980bcc4-d31f-25dd-ad3b-dfd0e030aa8c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="Fold" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TState" />
      </templates>
      <parameters>
        <parameter name="folder">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="TState" index="1" api="M:Microsoft.FSharp.Core.OptionModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Core.FSharpOption{``0})" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Core.FSharpOption{``0})" />
                  <template name="TState" index="1" api="M:Microsoft.FSharp.Core.OptionModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Core.FSharpOption{``0})" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <template name="TState" index="1" api="M:Microsoft.FSharp.Core.OptionModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Core.FSharpOption{``0})" />
        </parameter>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="TState" index="1" api="M:Microsoft.FSharp.Core.OptionModule.Fold``2(Microsoft.FSharp.Core.FSharpFunc{``1,Microsoft.FSharp.Core.FSharpFunc{``0,``1}},``1,Microsoft.FSharp.Core.FSharpOption{``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>fold</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d1a993c5-b919-7c06-8ab0-b8c29ffaa747" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Core.FSharpOption{``0},``1)">
      <topicdata group="api" />
      <apidata name="FoldBack" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TState" />
      </templates>
      <parameters>
        <parameter name="folder">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Core.FSharpOption{``0},``1)" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <template name="TState" index="1" api="M:Microsoft.FSharp.Core.OptionModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Core.FSharpOption{``0},``1)" />
                  <template name="TState" index="1" api="M:Microsoft.FSharp.Core.OptionModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Core.FSharpOption{``0},``1)" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Core.FSharpOption{``0},``1)" />
            </specialization>
          </type>
        </parameter>
        <parameter name="state">
          <template name="TState" index="1" api="M:Microsoft.FSharp.Core.OptionModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Core.FSharpOption{``0},``1)" />
        </parameter>
      </parameters>
      <returns>
        <template name="TState" index="1" api="M:Microsoft.FSharp.Core.OptionModule.FoldBack``2(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.FSharpFunc{``1,``1}},Microsoft.FSharp.Core.FSharpOption{``0},``1)" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>foldBack</value>
          </argument>
        </attribute>
      </attributes>
      <file name="007d484c-d9fe-db61-09e4-79a3f0c350da" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.ForAll``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="ForAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.ForAll``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.ForAll``1(Microsoft.FSharp.Core.FSharpFunc{``0,System.Boolean},Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>forall</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6267cd12-37a1-fe40-cf7c-406d4c4a9847" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.GetValue``1(Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.GetValue``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.GetValue``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>get</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2909aaab-7857-0fe8-9911-0c88a264b94b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.IsNone``1(Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="IsNone" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.IsNone``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>isNone</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bf589d22-a6d8-435c-fa39-17eb2831f89e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.IsSome``1(Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="IsSome" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.IsSome``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>isSome</value>
          </argument>
        </attribute>
      </attributes>
      <file name="657de063-3efb-5547-e038-8cf936bf2f70" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="Iterate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="action">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{``0})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Iterate``1(Microsoft.FSharp.Core.FSharpFunc{``0,Microsoft.FSharp.Core.Unit},Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>iter</value>
          </argument>
        </attribute>
      </attributes>
      <file name="129da9ae-b6c2-7b6d-ef4e-10c44b391626" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="mapping">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpOption{``0})" />
              <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.OptionModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.OptionModule.Map``2(Microsoft.FSharp.Core.FSharpFunc{``0,``1},Microsoft.FSharp.Core.FSharpOption{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>map</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cbcacacc-7ee8-fa50-4478-de05e8f9b6be" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.OfNullable``1(System.Nullable{``0})">
      <topicdata group="api" />
      <apidata name="OfNullable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:System.Nullable`1" ref="false">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.OfNullable``1(System.Nullable{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.OfNullable``1(System.Nullable{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ofNullable</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e53d7ceb-9873-5654-d913-fe89c49d3063" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.OfObj``1(``0)">
      <topicdata group="api" />
      <apidata name="OfObj" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.OfObj``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.OfObj``1(``0)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ofObj</value>
          </argument>
        </attribute>
      </attributes>
      <file name="17a26d99-2626-b223-6443-4148202535df" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.ToArray``1(Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="ToArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.ToArray``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.ToArray``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>toArray</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d2c9563b-77e8-abd9-457d-4cc1e80a9699" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.ToList``1(Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="ToList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.ToList``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.ToList``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>toList</value>
          </argument>
        </attribute>
      </attributes>
      <file name="71a599dd-d5f2-9500-38a7-4f4ecae071c9" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.ToNullable``1(Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="ToNullable" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained value="true" ctor="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="option">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.ToNullable``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.ToNullable``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>toNullable</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a503c1ae-bfb9-4be6-9317-829c89799de6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.OptionModule.ToObj``1(Microsoft.FSharp.Core.FSharpOption{``0})">
      <topicdata group="api" />
      <apidata name="ToObj" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <parameters>
        <parameter name="value">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.ToObj``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.OptionModule.ToObj``1(Microsoft.FSharp.Core.FSharpOption{``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.OptionModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>toObj</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5eb1d1bf-9efe-da3d-4ff8-f516b89da637" />
    </api>
    <api id="T:Microsoft.FSharp.Core.PrintfFormat`4">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.PrintfFormat`4" />
      <apidata name="PrintfFormat" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`5" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TPrinter" />
        <template name="TState" />
        <template name="TResidue" />
        <template name="TResult" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3ae75c93-9513-e6a8-473c-ef458d167bc8" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.PrintfFormat`4">
      <topicdata name="PrintfFormat" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.PrintfFormat`4" />
      <apidata name="PrintfFormat" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="TPrinter" />
        <template name="TState" />
        <template name="TResidue" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Core.PrintfFormat`4.#ctor(System.String)" />
        <element api="P:Microsoft.FSharp.Core.PrintfFormat`4.Value" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" />
      </containers>
      <file name="5ec208f8-606a-3294-c280-e7c5271d3e7e" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.PrintfFormat`4">
      <topicdata name="PrintfFormat" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.PrintfFormat`4" />
      <apidata name="PrintfFormat" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="TPrinter" />
        <template name="TState" />
        <template name="TResidue" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" />
      </containers>
      <file name="38c880c9-c3b0-3317-4a69-f1bacc04c3f3" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.PrintfFormat`4">
      <topicdata name="PrintfFormat" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.PrintfFormat`4" />
      <apidata name="PrintfFormat" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="TPrinter" />
        <template name="TState" />
        <template name="TResidue" />
        <template name="TResult" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Core.PrintfFormat`4.Value" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" />
      </containers>
      <file name="3f492267-6485-2e52-d123-1de77789d981" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfFormat`4.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true" />
      </containers>
      <file name="296802b8-05fb-0dbd-400f-59681c779e9f" />
    </api>
    <api id="P:Microsoft.FSharp.Core.PrintfFormat`4.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true" />
      </containers>
      <file name="47c9d6ee-bc50-35fd-d65c-a1269ba4cb94" />
    </api>
    <api id="T:Microsoft.FSharp.Core.PrintfFormat`5">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.PrintfFormat`5" />
      <apidata name="PrintfFormat" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="TPrinter" index="0" api="T:Microsoft.FSharp.Core.PrintfFormat`5" />
              <template name="TState" index="1" api="T:Microsoft.FSharp.Core.PrintfFormat`5" />
              <template name="TResidue" index="2" api="T:Microsoft.FSharp.Core.PrintfFormat`5" />
              <template name="TResult" index="3" api="T:Microsoft.FSharp.Core.PrintfFormat`5" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TPrinter" />
        <template name="TState" />
        <template name="TResidue" />
        <template name="TResult" />
        <template name="TTuple" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="dfd373b5-c6a4-5733-5010-dd931d09a75b" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.PrintfFormat`5">
      <topicdata name="PrintfFormat" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.PrintfFormat`5" />
      <apidata name="PrintfFormat" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="TPrinter" />
        <template name="TState" />
        <template name="TResidue" />
        <template name="TResult" />
        <template name="TTuple" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Core.PrintfFormat`4.Value" />
        <element api="M:Microsoft.FSharp.Core.PrintfFormat`5.#ctor(System.String)" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfFormat`5" />
      </containers>
      <file name="8869e2f6-10dd-1c07-0581-ebad9842730e" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.PrintfFormat`5">
      <topicdata name="PrintfFormat" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.PrintfFormat`5" />
      <apidata name="PrintfFormat" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="TPrinter" />
        <template name="TState" />
        <template name="TResidue" />
        <template name="TResult" />
        <template name="TTuple" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfFormat`5" />
      </containers>
      <file name="f564a906-f6e0-db84-6c61-c0056a03b766" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.PrintfFormat`5">
      <topicdata name="PrintfFormat" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.PrintfFormat`5" />
      <apidata name="PrintfFormat" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="TPrinter" />
        <template name="TState" />
        <template name="TResidue" />
        <template name="TResult" />
        <template name="TTuple" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Core.PrintfFormat`4.Value" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfFormat`5" />
      </containers>
      <file name="c283cd74-d849-972e-7f79-73cc002cf861" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfFormat`5.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfFormat`5" ref="true" />
      </containers>
      <file name="3d379294-2701-e88c-d4e9-5bd93ebb12d7" />
    </api>
    <api id="T:Microsoft.FSharp.Core.PrintfModule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.PrintfModule" />
      <apidata name="PrintfModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
            <enumValue>
              <field name="ModuleSuffix" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b8edd6b6-ca03-b463-9548-f829a4eae86d" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.PrintfModule">
      <topicdata name="PrintfModule" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.PrintfModule" />
      <apidata name="PrintfModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilder``1(System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``0,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilderThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``1,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,``0})" />
        <element api="Overload:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen">
          <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
          <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
        </element>
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriterThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``1,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" />
      </containers>
      <file name="517038d2-fd35-e976-86ec-f207341af0e6" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.PrintfModule">
      <topicdata name="PrintfModule" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.PrintfModule" />
      <apidata name="PrintfModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilder``1(System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``0,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilderThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``1,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,``0})" />
        <element api="Overload:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen">
          <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
          <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
        </element>
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriterThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``1,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" />
      </containers>
      <file name="6e551dd3-e59e-a701-e17a-617e90f15a0e" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen">
      <topicdata name="PrintFormatToStringThen" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.PrintfModule" />
      <apidata name="PrintFormatToStringThen" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
        <element api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <file name="28d3c471-2b45-1b4f-02f1-359767809439" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormat``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>printf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="aa7b2e90-461a-06bf-0d13-a8b48432ed92" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatLine" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLine``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>printfn</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2c7ea9f6-a321-53b2-ca61-87260f248c25" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatLineToError" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>eprintfn</value>
          </argument>
        </attribute>
      </attributes>
      <file name="370cc45f-8356-8b47-30d8-2301d86153ee" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatLineToTextWriter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatLineToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>fprintfn</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9a7e48e9-39c6-b773-1e50-cac91a811292" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})">
      <topicdata group="api" />
      <apidata name="PrintFormatThen" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="continutation">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <template name="TResult" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="1" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:System.String" ref="true" />
              <template name="TResult" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="1" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>kprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1062e9f5-3549-8afa-0a43-416441e4941c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatToError" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToError``1(Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>eprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="279c92a8-7bd4-e091-f045-0c96b52ab63e" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilder``1(System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``0,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatToStringBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="builder">
          <type api="T:System.Text.StringBuilder" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilder``1(System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``0,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.Text.StringBuilder" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilder``1(System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``0,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>bprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4d36cbd3-f0b2-2f47-c013-9a3b6eb15dd4" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilderThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``1,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,``0})">
      <topicdata group="api" />
      <apidata name="PrintFormatToStringBuilderThen" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="continutation">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <template name="TResult" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilderThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``1,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="builder">
          <type api="T:System.Text.StringBuilder" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="1" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilderThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``1,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,``0})" />
              <type api="T:System.Text.StringBuilder" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <template name="TResult" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilderThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``1,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="1" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringBuilderThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.Text.StringBuilder,Microsoft.FSharp.Core.PrintfFormat{``1,System.Text.StringBuilder,Microsoft.FSharp.Core.Unit,``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>kbprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7bafcc3b-ec14-9384-5e65-9415fc6accce" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})">
      <topicdata group="api" />
      <apidata name="PrintFormatToStringThen" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="continutation">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <template name="TResult" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="1" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:System.String" ref="true" />
              <template name="TResult" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="1" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``2(Microsoft.FSharp.Core.FSharpFunc{System.String,``0},Microsoft.FSharp.Core.PrintfFormat{``1,Microsoft.FSharp.Core.Unit,System.String,``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ksprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2e8e261c-cf52-8d94-d1d6-305eae024648" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})">
      <topicdata group="api" />
      <apidata name="PrintFormatToStringThen" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThen``1(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,System.String})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>sprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="acfccded-2ebe-8fc6-43a4-46bc297c092a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})">
      <topicdata group="api" />
      <apidata name="PrintFormatToStringThenFail" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:System.String" ref="true" />
              <template name="TResult" index="1" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToStringThenFail``2(Microsoft.FSharp.Core.PrintfFormat{``0,Microsoft.FSharp.Core.Unit,System.String,``1})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>failwithf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f7a2bf9c-da42-b69b-7048-1eb0ff7355aa" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})">
      <topicdata group="api" />
      <apidata name="PrintFormatToTextWriter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriter``1(System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``0,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Core.Unit})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>fprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9ca1755b-2197-a419-b890-a6435b8d765f" />
    </api>
    <api id="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriterThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``1,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,``0})">
      <topicdata group="api" />
      <apidata name="PrintFormatToTextWriterThen" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="continutation">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <template name="TResult" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriterThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``1,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,``0})" />
            </specialization>
          </type>
        </parameter>
        <parameter name="textWriter">
          <type api="T:System.IO.TextWriter" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:Microsoft.FSharp.Core.PrintfFormat`4" ref="true">
            <specialization>
              <template name="T" index="1" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriterThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``1,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,``0})" />
              <type api="T:System.IO.TextWriter" ref="true" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
              <template name="TResult" index="0" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriterThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``1,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="1" api="M:Microsoft.FSharp.Core.PrintfModule.PrintFormatToTextWriterThen``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,``0},System.IO.TextWriter,Microsoft.FSharp.Core.PrintfFormat{``1,System.IO.TextWriter,Microsoft.FSharp.Core.Unit,``0})" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.PrintfModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>kfprintf</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2dc6d331-168f-1e41-7c39-b46fbca43bb9" />
    </api>
    <api id="T:Microsoft.FSharp.Core.ProjectionParameterAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.ProjectionParameterAttribute" />
      <apidata name="ProjectionParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ProjectionParameterAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Parameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4dba6f78-fb8a-4e33-f885-d5ca7620cbe3" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.ProjectionParameterAttribute">
      <topicdata name="ProjectionParameterAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" />
      <apidata name="ProjectionParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ProjectionParameterAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.ProjectionParameterAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" />
      </containers>
      <file name="4f453011-b493-f1d4-45db-81821910d68f" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.ProjectionParameterAttribute">
      <topicdata name="ProjectionParameterAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" />
      <apidata name="ProjectionParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ProjectionParameterAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" />
      </containers>
      <file name="89955623-eda0-bc0c-54a2-10b7dba938db" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.ProjectionParameterAttribute">
      <topicdata name="ProjectionParameterAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" />
      <apidata name="ProjectionParameterAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ProjectionParameterAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" />
      </containers>
      <file name="fd5bec2e-0fa8-684b-d7b0-9cb3915ec3d2" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ProjectionParameterAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ProjectionParameterAttribute" ref="true" />
      </containers>
      <file name="db508a04-05c7-9883-e9c2-f5691682d471" />
    </api>
    <api id="T:Microsoft.FSharp.Core.ReferenceEqualityAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.ReferenceEqualityAttribute" />
      <apidata name="ReferenceEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ReferenceEqualityAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="062d1c9e-cf25-6004-1ac5-c301fa82cf1e" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.ReferenceEqualityAttribute">
      <topicdata name="ReferenceEqualityAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.ReferenceEqualityAttribute" />
      <apidata name="ReferenceEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ReferenceEqualityAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.ReferenceEqualityAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReferenceEqualityAttribute" />
      </containers>
      <file name="78a8cd10-b2f0-82ca-4730-825f6f27a5d0" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.ReferenceEqualityAttribute">
      <topicdata name="ReferenceEqualityAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.ReferenceEqualityAttribute" />
      <apidata name="ReferenceEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ReferenceEqualityAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReferenceEqualityAttribute" />
      </containers>
      <file name="909f00a4-f9c0-5338-23f3-7d69d5bab418" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.ReferenceEqualityAttribute">
      <topicdata name="ReferenceEqualityAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.ReferenceEqualityAttribute" />
      <apidata name="ReferenceEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ReferenceEqualityAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReferenceEqualityAttribute" />
      </containers>
      <file name="608d7133-5cb9-d417-1601-4f94f49db752" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ReferenceEqualityAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReferenceEqualityAttribute" ref="true" />
      </containers>
      <file name="eba5dfff-0edb-c888-ea91-2d893bd3ccec" />
    </api>
    <api id="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" />
      <apidata name="ReflectedDefinitionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Constructor" />
              <field name="Method" />
              <field name="Property" />
              <field name="Parameter" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="7eb932f7-71a5-6650-f1d9-abb00e669405" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute">
      <topicdata name="ReflectedDefinitionAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" />
      <apidata name="ReflectedDefinitionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor" />
      <elements>
        <element api="Overload:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor">
          <element api="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor" />
          <element api="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor(System.Boolean)" />
        </element>
        <element api="P:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.IncludeValue" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" />
      </containers>
      <file name="25c2f2e1-ec42-7018-5ee5-5e53c0f73760" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute">
      <topicdata name="ReflectedDefinitionAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" />
      <apidata name="ReflectedDefinitionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" />
      </containers>
      <file name="0dfe81f8-bbc2-c94c-d74f-ab0c92a7e1c7" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute">
      <topicdata name="ReflectedDefinitionAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" />
      <apidata name="ReflectedDefinitionAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.IncludeValue" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" />
      </containers>
      <file name="494263fb-c3a9-f8fe-e5dd-da283f516b2e" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor" />
        <element api="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" ref="true" />
      </containers>
      <file name="de45a23d-7150-d9fa-b584-1f18b0fa5401" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" ref="true" />
      </containers>
      <file name="16590c7b-414c-abee-94f5-103b970e55da" />
    </api>
    <api id="M:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.#ctor" />
      <parameters>
        <parameter name="includeValue">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" ref="true" />
      </containers>
      <file name="ea6b7db7-7af6-51c5-dea5-e9e984760c10" />
    </api>
    <api id="P:Microsoft.FSharp.Core.ReflectedDefinitionAttribute.IncludeValue">
      <topicdata group="api" />
      <apidata name="IncludeValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncludeValue" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.ReflectedDefinitionAttribute" ref="true" />
      </containers>
      <file name="5ae266ae-1cde-a29a-5696-4dd36fbe62a1" />
    </api>
    <api id="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" />
      <apidata name="RequireQualifiedAccessAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="38a1402c-2972-0ca0-2b17-8690b96b8a80" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute">
      <topicdata name="RequireQualifiedAccessAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" />
      <apidata name="RequireQualifiedAccessAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" />
      </containers>
      <file name="f148099f-26a6-debb-8110-ad413136e0c8" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute">
      <topicdata name="RequireQualifiedAccessAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" />
      <apidata name="RequireQualifiedAccessAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" />
      </containers>
      <file name="87481c3a-93b7-0fe0-3f65-b3bab5976d87" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute">
      <topicdata name="RequireQualifiedAccessAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" />
      <apidata name="RequireQualifiedAccessAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" />
      </containers>
      <file name="b77581bc-b8c6-f6b2-e147-52d95ae3f7b6" />
    </api>
    <api id="M:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" ref="true" />
      </containers>
      <file name="f61e0835-dd14-39fe-a37b-ed84950541ba" />
    </api>
    <api id="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" />
      <apidata name="RequiresExplicitTypeArgumentsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="cae51c77-0e26-e118-e7c3-0b5d839bbdd4" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute">
      <topicdata name="RequiresExplicitTypeArgumentsAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" />
      <apidata name="RequiresExplicitTypeArgumentsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" />
      </containers>
      <file name="c99230d4-7775-6228-c3db-fe7172369ad2" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute">
      <topicdata name="RequiresExplicitTypeArgumentsAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" />
      <apidata name="RequiresExplicitTypeArgumentsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" />
      </containers>
      <file name="cb816906-cbb8-7df6-cb09-067a2031fd45" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute">
      <topicdata name="RequiresExplicitTypeArgumentsAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" />
      <apidata name="RequiresExplicitTypeArgumentsAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" />
      </containers>
      <file name="603b6db6-7488-1123-886e-0ffc822c1b63" />
    </api>
    <api id="M:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.RequiresExplicitTypeArgumentsAttribute" ref="true" />
      </containers>
      <file name="d72b265a-33e9-e2dd-d1a0-4b5f0ef03dee" />
    </api>
    <api id="T:Microsoft.FSharp.Core.SealedAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.SealedAttribute" />
      <apidata name="SealedAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.SealedAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6da718fc-be08-c9a3-cf30-f6e46ada57fc" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.SealedAttribute">
      <topicdata name="SealedAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.SealedAttribute" />
      <apidata name="SealedAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.SealedAttribute.#ctor" />
      <elements>
        <element api="Overload:Microsoft.FSharp.Core.SealedAttribute.#ctor">
          <element api="M:Microsoft.FSharp.Core.SealedAttribute.#ctor" />
          <element api="M:Microsoft.FSharp.Core.SealedAttribute.#ctor(System.Boolean)" />
        </element>
        <element api="P:Microsoft.FSharp.Core.SealedAttribute.Value" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SealedAttribute" />
      </containers>
      <file name="481760bb-ce83-da25-430a-6c7ed0376ff1" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.SealedAttribute">
      <topicdata name="SealedAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.SealedAttribute" />
      <apidata name="SealedAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.SealedAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SealedAttribute" />
      </containers>
      <file name="5f6d21af-1944-1442-3488-3c1f8d3e9581" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.SealedAttribute">
      <topicdata name="SealedAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.SealedAttribute" />
      <apidata name="SealedAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.SealedAttribute.#ctor" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.SealedAttribute.Value" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SealedAttribute" />
      </containers>
      <file name="0ac105e2-d929-a101-4cb8-1f8ef43cfe25" />
    </api>
    <api id="Overload:Microsoft.FSharp.Core.SealedAttribute.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.SealedAttribute" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.SealedAttribute.#ctor" />
        <element api="M:Microsoft.FSharp.Core.SealedAttribute.#ctor(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
      </containers>
      <file name="7367515b-40d5-6c56-3ded-86c022e48929" />
    </api>
    <api id="M:Microsoft.FSharp.Core.SealedAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.SealedAttribute.#ctor" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
      </containers>
      <file name="8dbdd62d-13b1-053f-ada2-9d4df848890a" />
    </api>
    <api id="M:Microsoft.FSharp.Core.SealedAttribute.#ctor(System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:Microsoft.FSharp.Core.SealedAttribute.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
      </containers>
      <file name="7ba91187-5ad4-030c-4f81-495073c92333" />
    </api>
    <api id="P:Microsoft.FSharp.Core.SealedAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
      </containers>
      <file name="67ba5472-4f30-2d58-41aa-cac2e410d205" />
    </api>
    <api id="T:Microsoft.FSharp.Core.SourceConstructFlags">
      <topicdata group="api" />
      <apidata name="SourceConstructFlags" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.None" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.SumType" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.RecordType" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.ObjectType" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.Field" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.Exception" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.Closure" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.Module" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.UnionCase" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.Value" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.KindMask" />
        <element api="F:Microsoft.FSharp.Core.SourceConstructFlags.NonPublicRepresentation" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="36dde3be-03c6-0fbd-b587-a8cd9d0299cf" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.Closure">
      <topicdata group="api" notopic="" />
      <apidata name="Closure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="1d962a57-fec7-d211-0686-867298199699" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.Exception">
      <topicdata group="api" notopic="" />
      <apidata name="Exception" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="8017755f-4079-32e5-65fc-5fd7d85ac5e7" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.Field">
      <topicdata group="api" notopic="" />
      <apidata name="Field" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="0cd9118c-4f47-db91-752d-a35f7b2fd777" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.KindMask">
      <topicdata group="api" notopic="" />
      <apidata name="KindMask" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="68603295-7735-f87c-91fe-42378a1d5f70" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.Module">
      <topicdata group="api" notopic="" />
      <apidata name="Module" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="d98d2231-750a-c358-f8d0-d1807d111c19" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="b2a0bcf9-aa7b-4bac-8d67-a7fc13898146" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.NonPublicRepresentation">
      <topicdata group="api" notopic="" />
      <apidata name="NonPublicRepresentation" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="eeaff54a-3ddb-b277-9d32-c7db8491aebb" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.ObjectType">
      <topicdata group="api" notopic="" />
      <apidata name="ObjectType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="e5236165-a54d-393b-2d40-41f87cbe85ac" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.RecordType">
      <topicdata group="api" notopic="" />
      <apidata name="RecordType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="c9a7c35d-2ccf-d203-3a35-1e345b1cab4f" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.SumType">
      <topicdata group="api" notopic="" />
      <apidata name="SumType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="9a8481c3-4ed7-82b0-f1e5-5a566e608d41" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.UnionCase">
      <topicdata group="api" notopic="" />
      <apidata name="UnionCase" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="e03387ca-5517-f38f-b96b-db67a9d87ffd" />
    </api>
    <api id="F:Microsoft.FSharp.Core.SourceConstructFlags.Value">
      <topicdata group="api" notopic="" />
      <apidata name="Value" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
      </containers>
      <file name="e803ca87-02c1-4836-506b-28d27d982563" />
    </api>
    <api id="T:Microsoft.FSharp.Core.StringModule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.StringModule" />
      <apidata name="StringModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
            <enumValue>
              <field name="ModuleSuffix" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.RequireQualifiedAccessAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="2c5f89f0-0033-5a87-0b45-3a46514d1786" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.StringModule">
      <topicdata name="StringModule" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.StringModule" />
      <apidata name="StringModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.StringModule.Collect(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Concat(System.String,System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Exists(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Filter(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.ForAll(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Initialize(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String})" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Iterate(Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.IterateIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Length(System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Map(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.MapIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Replicate(System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" />
      </containers>
      <file name="a029953d-e3a0-b83c-eb1c-973400778bf4" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.StringModule">
      <topicdata name="StringModule" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.StringModule" />
      <apidata name="StringModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.StringModule.Collect(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Concat(System.String,System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Exists(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Filter(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.ForAll(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Initialize(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String})" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Iterate(Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.IterateIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Length(System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Map(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.MapIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}},System.String)" />
        <element api="M:Microsoft.FSharp.Core.StringModule.Replicate(System.Int32,System.String)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" />
      </containers>
      <file name="785e06b9-d809-6b36-2fa3-dc159ce8cf06" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.Collect(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.String},System.String)">
      <topicdata group="api" />
      <apidata name="Collect" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mapping">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>collect</value>
          </argument>
        </attribute>
      </attributes>
      <file name="138d4ec6-9e75-8fec-cf66-b8668a24d545" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.Concat(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <topicdata group="api" />
      <apidata name="Concat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sep">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="strings">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>concat</value>
          </argument>
        </attribute>
      </attributes>
      <file name="eb10a502-78f7-9d9b-0c8c-48db0421f039" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.Exists(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)">
      <topicdata group="api" />
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>exists</value>
          </argument>
        </attribute>
      </attributes>
      <file name="47ed9b7b-62fa-dca5-9954-4450a5d3a5b9" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.Filter(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)">
      <topicdata group="api" />
      <apidata name="Filter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>filter</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3ef4770c-52b0-088e-68ea-9740c6904382" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.ForAll(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Boolean},System.String)">
      <topicdata group="api" />
      <apidata name="ForAll" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="predicate">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>forall</value>
          </argument>
        </attribute>
      </attributes>
      <file name="21daa1df-da77-1830-e530-321b525e11b0" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.Initialize(System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Int32,System.String})">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="initializer">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>init</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9bbb47b3-31e8-efb2-f574-a8879222c761" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.Iterate(Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit},System.String)">
      <topicdata group="api" />
      <apidata name="Iterate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>iter</value>
          </argument>
        </attribute>
      </attributes>
      <file name="01d89aec-34e5-272e-4b6d-34bdc729286c" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.IterateIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,Microsoft.FSharp.Core.Unit}},System.String)">
      <topicdata group="api" />
      <apidata name="IterateIndexed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <type api="T:System.Char" ref="false" />
                  <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>iteri</value>
          </argument>
        </attribute>
      </attributes>
      <file name="cd9ac720-fae5-ca33-07da-67209329fe6b" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.Length(System.String)">
      <topicdata group="api" />
      <apidata name="Length" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>length</value>
          </argument>
        </attribute>
      </attributes>
      <file name="26cbddc5-19ca-202c-1dda-1af306384bd7" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.Map(Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char},System.String)">
      <topicdata group="api" />
      <apidata name="Map" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mapping">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Char" ref="false" />
              <type api="T:System.Char" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>map</value>
          </argument>
        </attribute>
      </attributes>
      <file name="84aaf9aa-abaa-17d5-1e87-2c5c49e48c73" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.MapIndexed(Microsoft.FSharp.Core.FSharpFunc{System.Int32,Microsoft.FSharp.Core.FSharpFunc{System.Char,System.Char}},System.String)">
      <topicdata group="api" />
      <apidata name="MapIndexed" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mapping">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
              <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
                <specialization>
                  <type api="T:System.Char" ref="false" />
                  <type api="T:System.Char" ref="false" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>mapi</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5180fab4-d39d-37dd-1e0b-101e9f310cd2" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StringModule.Replicate(System.Int32,System.String)">
      <topicdata group="api" />
      <apidata name="Replicate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="str">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StringModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationArgumentCountsAttribute" ref="true" />
          <argument>
            <arrayOf rank="1">
              <type api="T:System.Int32" ref="false" />
            </arrayOf>
            <value>System.Int32[]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>replicate</value>
          </argument>
        </attribute>
      </attributes>
      <file name="045e4610-ca49-ca33-5a5c-f433a3116db3" />
    </api>
    <api id="T:Microsoft.FSharp.Core.StructAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.StructAttribute" />
      <apidata name="StructAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Struct" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="dbb50678-8b15-d7b4-d33b-ced09904773c" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.StructAttribute">
      <topicdata name="StructAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.StructAttribute" />
      <apidata name="StructAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.StructAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructAttribute" />
      </containers>
      <file name="13ab6ccc-e1b7-4e25-b197-785936a65b36" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.StructAttribute">
      <topicdata name="StructAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.StructAttribute" />
      <apidata name="StructAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructAttribute" />
      </containers>
      <file name="0f06e57d-553c-32f1-2d8a-1d48a4eaba57" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.StructAttribute">
      <topicdata name="StructAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.StructAttribute" />
      <apidata name="StructAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructAttribute" />
      </containers>
      <file name="ebf6ec8e-5819-d816-992c-64b4073f88ad" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StructAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructAttribute" ref="true" />
      </containers>
      <file name="389d5b95-cef7-61d7-f686-bf2adaf63b59" />
    </api>
    <api id="T:Microsoft.FSharp.Core.StructuralComparisonAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.StructuralComparisonAttribute" />
      <apidata name="StructuralComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructuralComparisonAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="44c82135-a5fd-973a-d194-9bdce6cd0703" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.StructuralComparisonAttribute">
      <topicdata name="StructuralComparisonAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" />
      <apidata name="StructuralComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructuralComparisonAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.StructuralComparisonAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" />
      </containers>
      <file name="fc260a0b-5912-e353-b3f5-d7ac1ae55338" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.StructuralComparisonAttribute">
      <topicdata name="StructuralComparisonAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" />
      <apidata name="StructuralComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructuralComparisonAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" />
      </containers>
      <file name="1e08080b-94e6-7974-6036-c4864a561ca2" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.StructuralComparisonAttribute">
      <topicdata name="StructuralComparisonAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" />
      <apidata name="StructuralComparisonAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructuralComparisonAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" />
      </containers>
      <file name="b88446c5-1433-9ab1-8ca0-e7da0ec5ce09" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StructuralComparisonAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuralComparisonAttribute" ref="true" />
      </containers>
      <file name="01400179-4512-0b3c-d841-a9f01d26fffe" />
    </api>
    <api id="T:Microsoft.FSharp.Core.StructuralEqualityAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.StructuralEqualityAttribute" />
      <apidata name="StructuralEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructuralEqualityAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4191f2f3-034a-0fd2-15ff-5d5ed32eeff3" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.StructuralEqualityAttribute">
      <topicdata name="StructuralEqualityAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" />
      <apidata name="StructuralEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructuralEqualityAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.StructuralEqualityAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" />
      </containers>
      <file name="a619adc7-9182-b07b-f11f-009824dde59f" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.StructuralEqualityAttribute">
      <topicdata name="StructuralEqualityAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" />
      <apidata name="StructuralEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructuralEqualityAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" />
      </containers>
      <file name="f666538d-4498-2c67-cd11-2a708426d4c1" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.StructuralEqualityAttribute">
      <topicdata name="StructuralEqualityAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" />
      <apidata name="StructuralEqualityAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.StructuralEqualityAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" />
      </containers>
      <file name="4d85554e-d0f2-cb6e-0416-5308aae7ba43" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StructuralEqualityAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuralEqualityAttribute" ref="true" />
      </containers>
      <file name="5c216038-c2b7-1d12-eedc-e265fc805132" />
    </api>
    <api id="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" />
      <apidata name="StructuredFormatDisplayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
              <field name="Struct" />
              <field name="Enum" />
              <field name="Interface" />
              <field name="Delegate" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0d909c5e-7250-47eb-0998-4b7134b98d2e" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute">
      <topicdata name="StructuredFormatDisplayAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" />
      <apidata name="StructuredFormatDisplayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute.#ctor(System.String)" />
        <element api="P:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute.Value" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" />
      </containers>
      <file name="3548d111-c373-809e-0874-823407a0e9ea" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute">
      <topicdata name="StructuredFormatDisplayAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" />
      <apidata name="StructuredFormatDisplayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" />
      </containers>
      <file name="0bd13505-68d6-e30e-07ec-14f165cc4724" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute">
      <topicdata name="StructuredFormatDisplayAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" />
      <apidata name="StructuredFormatDisplayAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute.Value" />
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" />
      </containers>
      <file name="ea2466b0-aff2-fc4a-62d2-16b14dd35751" />
    </api>
    <api id="M:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" ref="true" />
      </containers>
      <file name="7763fd1d-a98b-673e-8f87-cec1d6e3653b" />
    </api>
    <api id="P:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.StructuredFormatDisplayAttribute" ref="true" />
      </containers>
      <file name="e5304206-7853-c89d-444d-57e3479b22a3" />
    </api>
    <api id="T:Microsoft.FSharp.Core.Unit">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.Unit" />
      <apidata name="Unit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b3e0fe53-2f00-3cad-e4ac-699b50155c43" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.Unit">
      <topicdata name="Unit" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.Unit" />
      <apidata name="Unit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Unit.Equals(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.Unit.GetHashCode" />
        <element api="M:Microsoft.FSharp.Core.Unit.System#IComparable#CompareTo(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Unit" />
      </containers>
      <file name="2f4abb96-0f47-3839-23c2-d17a6e46eef5" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.Unit">
      <topicdata name="Unit" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.Unit" />
      <apidata name="Unit" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.Unit.Equals(System.Object)" />
        <element api="M:Microsoft.FSharp.Core.Unit.GetHashCode" />
        <element api="M:Microsoft.FSharp.Core.Unit.System#IComparable#CompareTo(System.Object)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Unit" />
      </containers>
      <file name="b56f5767-beac-3134-8a2b-396f0af0b0fe" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Unit.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
      </containers>
      <file name="c0a5ed12-8849-9f66-2dba-8f82d1c0ab10" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Unit.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
      </containers>
      <file name="9ea32bf5-c4ed-780f-819e-3f30b4fee4f8" />
    </api>
    <api id="M:Microsoft.FSharp.Core.Unit.System#IComparable#CompareTo(System.Object)">
      <topicdata group="api" eiiName="IComparable.System-IComparable-CompareTo" />
      <apidata name="System-IComparable-CompareTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" eii="true" />
      <parameters>
        <parameter name="_obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
      </containers>
      <file name="c5472871-5fea-9f10-2b6b-4cfd03048c7b" />
    </api>
    <api id="T:Microsoft.FSharp.Core.UnverifiableAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.UnverifiableAttribute" />
      <apidata name="UnverifiableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.UnverifiableAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
              <field name="Property" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e936a33a-6890-5864-0b8e-e5cbb2d773cf" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.UnverifiableAttribute">
      <topicdata name="UnverifiableAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.UnverifiableAttribute" />
      <apidata name="UnverifiableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.UnverifiableAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.UnverifiableAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.UnverifiableAttribute" />
      </containers>
      <file name="3c6c75ba-1dd3-3646-c117-1e9ebf08601b" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.UnverifiableAttribute">
      <topicdata name="UnverifiableAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.UnverifiableAttribute" />
      <apidata name="UnverifiableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.UnverifiableAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.UnverifiableAttribute" />
      </containers>
      <file name="11f383b2-71e4-a034-1059-38803717584f" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.UnverifiableAttribute">
      <topicdata name="UnverifiableAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.UnverifiableAttribute" />
      <apidata name="UnverifiableAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.UnverifiableAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.UnverifiableAttribute" />
      </containers>
      <file name="01ef1e9a-9c33-6496-6f30-6d6df2f05351" />
    </api>
    <api id="M:Microsoft.FSharp.Core.UnverifiableAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.UnverifiableAttribute" ref="true" />
      </containers>
      <file name="550460ab-4724-309c-a9e8-05e9a3d2206d" />
    </api>
    <api id="T:Microsoft.FSharp.Core.VolatileFieldAttribute">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Core.VolatileFieldAttribute" />
      <apidata name="VolatileFieldAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.VolatileFieldAttribute.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Field" />
            </enumValue>
          </argument>
          <assignment name="AllowMultiple">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="5dd88652-c267-1c06-6d92-975ad75de76b" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Core.VolatileFieldAttribute">
      <topicdata name="VolatileFieldAttribute" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Core.VolatileFieldAttribute" />
      <apidata name="VolatileFieldAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.VolatileFieldAttribute.#ctor" />
      <elements>
        <element api="M:Microsoft.FSharp.Core.VolatileFieldAttribute.#ctor" />
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="P:System.Attribute.TypeId" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.VolatileFieldAttribute" />
      </containers>
      <file name="f57dd1b3-6c73-cc78-9ef9-2ca11c55c026" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Core.VolatileFieldAttribute">
      <topicdata name="VolatileFieldAttribute" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Core.VolatileFieldAttribute" />
      <apidata name="VolatileFieldAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.VolatileFieldAttribute.#ctor" />
      <elements>
        <element api="M:System.Attribute.Equals(System.Object)" />
        <element api="M:System.Attribute.GetHashCode" />
        <element api="M:System.Attribute.IsDefaultAttribute" />
        <element api="M:System.Attribute.Match(System.Object)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)" />
        <element api="M:System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.VolatileFieldAttribute" />
      </containers>
      <file name="60bd7d31-19fb-04fe-12ae-646f3fbb897a" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Core.VolatileFieldAttribute">
      <topicdata name="VolatileFieldAttribute" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Core.VolatileFieldAttribute" />
      <apidata name="VolatileFieldAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" defaultConstructor="M:Microsoft.FSharp.Core.VolatileFieldAttribute.#ctor" />
      <elements>
        <element api="P:System.Attribute.TypeId" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.VolatileFieldAttribute" />
      </containers>
      <file name="e3ba22ff-2ac8-b606-fa5e-2385e4abd409" />
    </api>
    <api id="M:Microsoft.FSharp.Core.VolatileFieldAttribute.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Core" />
        <type api="T:Microsoft.FSharp.Core.VolatileFieldAttribute" ref="true" />
      </containers>
      <file name="ca09ccef-e07b-10da-fcba-7fd0d1f908d8" />
    </api>
  </apis>
</reflection>