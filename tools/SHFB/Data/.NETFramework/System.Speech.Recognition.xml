<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Speech">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Speech.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Speech.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Speech.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\wpf\src\windows.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Speech.Recognition">
      <topicdata group="api" />
      <apidata name="System.Speech.Recognition" group="namespace" />
      <elements>
        <element api="T:System.Speech.Recognition.Grammar" />
        <element api="T:System.Speech.Recognition.SpeechUI" />
        <element api="T:System.Speech.Recognition.SubsetMatchingMode" />
        <element api="T:System.Speech.Recognition.RecognitionEventArgs" />
        <element api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
        <element api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
        <element api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
        <element api="T:System.Speech.Recognition.RecognitionResult" />
        <element api="T:System.Speech.Recognition.ReplacementText" />
        <element api="T:System.Speech.Recognition.RecognizedAudio" />
        <element api="T:System.Speech.Recognition.RecognizedPhrase" />
        <element api="T:System.Speech.Recognition.RecognizedWordUnit" />
        <element api="T:System.Speech.Recognition.DisplayAttributes" />
        <element api="T:System.Speech.Recognition.SemanticValue" />
        <element api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
        <element api="T:System.Speech.Recognition.AudioSignalProblem" />
        <element api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
        <element api="T:System.Speech.Recognition.AudioState" />
        <element api="T:System.Speech.Recognition.AudioStateChangedEventArgs" />
        <element api="T:System.Speech.Recognition.Choices" />
        <element api="T:System.Speech.Recognition.DictationGrammar" />
        <element api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
        <element api="T:System.Speech.Recognition.GrammarBuilder" />
        <element api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
        <element api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
        <element api="T:System.Speech.Recognition.RecognizeMode" />
        <element api="T:System.Speech.Recognition.RecognizerInfo" />
        <element api="T:System.Speech.Recognition.RecognizerState" />
        <element api="T:System.Speech.Recognition.StateChangedEventArgs" />
        <element api="T:System.Speech.Recognition.SemanticResultKey" />
        <element api="T:System.Speech.Recognition.SemanticResultValue" />
        <element api="T:System.Speech.Recognition.SpeechDetectedEventArgs" />
        <element api="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <element api="T:System.Speech.Recognition.SpeechRecognizer" />
        <element api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      </elements>
      <file name="26a7cd7a-60cb-3e22-5a01-d021a82dcea8" />
    </api>
    <api id="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
      <apidata name="AudioLevelUpdatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="28fc26cd-8916-ca7d-2b45-d51b06e9e41d" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.AudioLevelUpdatedEventArgs">
      <topicdata name="AudioLevelUpdatedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
      <apidata name="AudioLevelUpdatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.AudioLevelUpdatedEventArgs.AudioLevel" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
      </containers>
      <file name="38d96aaa-b22b-9f00-7a77-cb3b3626bb87" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.AudioLevelUpdatedEventArgs">
      <topicdata name="AudioLevelUpdatedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
      <apidata name="AudioLevelUpdatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
      </containers>
      <file name="0d8ccd40-6190-7082-4079-c00c2fa96f94" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.AudioLevelUpdatedEventArgs">
      <topicdata name="AudioLevelUpdatedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
      <apidata name="AudioLevelUpdatedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Recognition.AudioLevelUpdatedEventArgs.AudioLevel" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" />
      </containers>
      <file name="d2e627a3-57ba-19b1-4fdf-4bddd7cd0d24" />
    </api>
    <api id="P:System.Speech.Recognition.AudioLevelUpdatedEventArgs.AudioLevel">
      <topicdata group="api" />
      <apidata name="AudioLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" ref="true" />
      </containers>
      <file name="23133abe-0e6f-aa1c-cec5-74390fe7e805" />
    </api>
    <api id="T:System.Speech.Recognition.AudioSignalProblem">
      <topicdata group="api" />
      <apidata name="AudioSignalProblem" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Recognition.AudioSignalProblem.None" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.TooNoisy" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.NoSignal" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.TooLoud" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.TooSoft" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.TooFast" />
        <element api="F:System.Speech.Recognition.AudioSignalProblem.TooSlow" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="a9165f9b-3dde-29cd-d382-17801ac5a7b7" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="79591959-7d36-81ea-5ec0-72b70b02529c" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.NoSignal">
      <topicdata group="api" notopic="" />
      <apidata name="NoSignal" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="33ef36ad-a0bd-93ba-9d20-d4028a3bc4c6" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.TooFast">
      <topicdata group="api" notopic="" />
      <apidata name="TooFast" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="dd5cdc7c-8415-4952-e204-de68fe288389" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.TooLoud">
      <topicdata group="api" notopic="" />
      <apidata name="TooLoud" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="c5f90330-9199-bc35-b494-560bc53e221c" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.TooNoisy">
      <topicdata group="api" notopic="" />
      <apidata name="TooNoisy" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="75119978-3af9-db10-931b-274de914e079" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.TooSlow">
      <topicdata group="api" notopic="" />
      <apidata name="TooSlow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="fc78af07-c4bc-f7d6-8501-248d37b49004" />
    </api>
    <api id="F:System.Speech.Recognition.AudioSignalProblem.TooSoft">
      <topicdata group="api" notopic="" />
      <apidata name="TooSoft" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </containers>
      <file name="0ccd7943-1019-cd57-1bd7-31b154b2b374" />
    </api>
    <api id="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
      <apidata name="AudioSignalProblemOccurredEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="1f541e0a-ed9e-209d-75b3-2b1e208bff62" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs">
      <topicdata name="AudioSignalProblemOccurredEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
      <apidata name="AudioSignalProblemOccurredEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioLevel" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioSignalProblem" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.RecognizerAudioPosition" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
      </containers>
      <file name="deeb7749-9929-44dd-7e22-738cb63a1fff" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs">
      <topicdata name="AudioSignalProblemOccurredEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
      <apidata name="AudioSignalProblemOccurredEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
      </containers>
      <file name="a1b553b7-8261-3124-7b0e-c70182feca24" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs">
      <topicdata name="AudioSignalProblemOccurredEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
      <apidata name="AudioSignalProblemOccurredEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioLevel" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioSignalProblem" />
        <element api="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.RecognizerAudioPosition" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" />
      </containers>
      <file name="3bda0917-71cd-16f4-cae2-96ad5a8e08c5" />
    </api>
    <api id="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioLevel">
      <topicdata group="api" />
      <apidata name="AudioLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </containers>
      <file name="11e3700e-783a-682b-58a8-4826f7cf18fa" />
    </api>
    <api id="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </containers>
      <file name="6e794590-013e-07f6-f85c-40470ecb5d26" />
    </api>
    <api id="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.AudioSignalProblem">
      <topicdata group="api" />
      <apidata name="AudioSignalProblem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioSignalProblem" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioSignalProblem" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </containers>
      <file name="3736ae11-0e15-b8e7-010b-c1156243b7d0" />
    </api>
    <api id="P:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs.RecognizerAudioPosition">
      <topicdata group="api" />
      <apidata name="RecognizerAudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecognizerAudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </containers>
      <file name="9d0162cd-877d-95a5-9c17-7f62d91d4a31" />
    </api>
    <api id="T:System.Speech.Recognition.AudioState">
      <topicdata group="api" />
      <apidata name="AudioState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Recognition.AudioState.Stopped" />
        <element api="F:System.Speech.Recognition.AudioState.Silence" />
        <element api="F:System.Speech.Recognition.AudioState.Speech" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="09957d2d-9b39-e99f-29af-23124b6dbad6" />
    </api>
    <api id="F:System.Speech.Recognition.AudioState.Silence">
      <topicdata group="api" notopic="" />
      <apidata name="Silence" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </containers>
      <file name="a979ac50-faf8-8686-8cb5-facdcc071371" />
    </api>
    <api id="F:System.Speech.Recognition.AudioState.Speech">
      <topicdata group="api" notopic="" />
      <apidata name="Speech" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </containers>
      <file name="8de5b630-cda8-3158-651b-27fafc3851e0" />
    </api>
    <api id="F:System.Speech.Recognition.AudioState.Stopped">
      <topicdata group="api" notopic="" />
      <apidata name="Stopped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </containers>
      <file name="bad23d6e-667d-866b-8ba3-85ba811c02a9" />
    </api>
    <api id="T:System.Speech.Recognition.AudioStateChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.AudioStateChangedEventArgs" />
      <apidata name="AudioStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="fff8a775-31cf-6315-8b6a-b3a6169e3e7a" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.AudioStateChangedEventArgs">
      <topicdata name="AudioStateChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.AudioStateChangedEventArgs" />
      <apidata name="AudioStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.AudioStateChangedEventArgs.AudioState" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" />
      </containers>
      <file name="73c600ed-77e2-dcaf-b6a6-c8a5824e8820" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.AudioStateChangedEventArgs">
      <topicdata name="AudioStateChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.AudioStateChangedEventArgs" />
      <apidata name="AudioStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" />
      </containers>
      <file name="3596522d-a25f-0c4d-ec9a-f8c9d3201eaa" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.AudioStateChangedEventArgs">
      <topicdata name="AudioStateChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.AudioStateChangedEventArgs" />
      <apidata name="AudioStateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Recognition.AudioStateChangedEventArgs.AudioState" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" />
      </containers>
      <file name="ad7ee056-d540-73d1-1596-e1d73f4a7332" />
    </api>
    <api id="P:System.Speech.Recognition.AudioStateChangedEventArgs.AudioState">
      <topicdata group="api" />
      <apidata name="AudioState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioState" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" ref="true" />
      </containers>
      <file name="c729b2b7-8904-8835-6f41-8e2c626214d2" />
    </api>
    <api id="T:System.Speech.Recognition.Choices">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.Choices" />
      <apidata name="Choices" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.Choices.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="39a4d9ec-df3f-cbe5-ce4f-ac9e59c9b2a5" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.Choices">
      <topicdata name="Choices" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.Choices" />
      <apidata name="Choices" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.Choices.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.Choices.#ctor">
          <element api="M:System.Speech.Recognition.Choices.#ctor" />
          <element api="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])" />
          <element api="M:System.Speech.Recognition.Choices.#ctor(System.String[])" />
        </element>
        <element api="Overload:System.Speech.Recognition.Choices.Add">
          <element api="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
          <element api="M:System.Speech.Recognition.Choices.Add(System.String[])" />
        </element>
        <element api="M:System.Speech.Recognition.Choices.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" />
      </containers>
      <file name="9367d7c7-5e30-4358-6ead-d0e39d156e3a" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.Choices">
      <topicdata name="Choices" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.Choices" />
      <apidata name="Choices" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.Choices.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.Choices.Add">
          <element api="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
          <element api="M:System.Speech.Recognition.Choices.Add(System.String[])" />
        </element>
        <element api="M:System.Speech.Recognition.Choices.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" />
      </containers>
      <file name="bbbd5059-2aab-de0b-e0f5-c2492785856a" />
    </api>
    <api id="Overload:System.Speech.Recognition.Choices.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.Choices" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.Choices.#ctor" />
        <element api="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])" />
        <element api="M:System.Speech.Recognition.Choices.#ctor(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="2483db76-d4b2-0708-b4ac-171dbb227c65" />
    </api>
    <api id="Overload:System.Speech.Recognition.Choices.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.Choices" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])" />
        <element api="M:System.Speech.Recognition.Choices.Add(System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="48ab7041-b9fe-e066-2ede-5f54b9878bd2" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Choices.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="352ef0c3-40fc-ba4d-f667-581e1fd95ca1" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.#ctor(System.Speech.Recognition.GrammarBuilder[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Choices.#ctor" />
      <parameters>
        <parameter name="alternateChoices" params="true">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="b38fe27e-cc06-a9a3-a376-3b85e96f3088" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.#ctor(System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Choices.#ctor" />
      <parameters>
        <parameter name="phrases" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="8358b06e-5bd2-2f2d-b95e-8fb946e59c31" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.Add(System.Speech.Recognition.GrammarBuilder[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.Choices.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="alternateChoices" params="true">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="5295fb1d-3ef5-6c54-7ab7-a765d13b8bc7" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.Add(System.String[])">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.Choices.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrases" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="5ed8cd28-2c39-c2e8-b047-98093b4d1aa7" />
    </api>
    <api id="M:System.Speech.Recognition.Choices.ToGrammarBuilder">
      <topicdata group="api" />
      <apidata name="ToGrammarBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Choices" ref="true" />
      </containers>
      <file name="1c443790-4891-0106-2dff-3179ee903c74" />
    </api>
    <api id="T:System.Speech.Recognition.DictationGrammar">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.DictationGrammar" />
      <apidata name="DictationGrammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.DictationGrammar.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="b979f58d-32a8-395f-c876-7923dad18ef9" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.DictationGrammar">
      <topicdata name="DictationGrammar" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.DictationGrammar" />
      <apidata name="DictationGrammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.DictationGrammar.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.DictationGrammar.#ctor">
          <element api="M:System.Speech.Recognition.DictationGrammar.#ctor" />
          <element api="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)" />
        </element>
        <element api="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)" />
        <element api="P:System.Speech.Recognition.Grammar.Enabled" />
        <element api="P:System.Speech.Recognition.Grammar.IsStg" />
        <element api="P:System.Speech.Recognition.Grammar.Loaded" />
        <element api="P:System.Speech.Recognition.Grammar.Name" />
        <element api="P:System.Speech.Recognition.Grammar.Priority" />
        <element api="P:System.Speech.Recognition.Grammar.ResourceName" />
        <element api="P:System.Speech.Recognition.Grammar.RuleName" />
        <element api="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
        <element api="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
        <element api="P:System.Speech.Recognition.Grammar.Weight" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" />
      </containers>
      <file name="3047a00b-8510-0453-be4a-4aeeb5f3cd0c" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.DictationGrammar">
      <topicdata name="DictationGrammar" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.DictationGrammar" />
      <apidata name="DictationGrammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.DictationGrammar.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)" />
        <element api="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" />
      </containers>
      <file name="7cd9f089-6bc6-261a-3e31-9cfc4058788a" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.DictationGrammar">
      <topicdata name="DictationGrammar" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.DictationGrammar" />
      <apidata name="DictationGrammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.DictationGrammar.#ctor" />
      <elements>
        <element api="P:System.Speech.Recognition.Grammar.Enabled" />
        <element api="P:System.Speech.Recognition.Grammar.IsStg" />
        <element api="P:System.Speech.Recognition.Grammar.Loaded" />
        <element api="P:System.Speech.Recognition.Grammar.Name" />
        <element api="P:System.Speech.Recognition.Grammar.Priority" />
        <element api="P:System.Speech.Recognition.Grammar.ResourceName" />
        <element api="P:System.Speech.Recognition.Grammar.RuleName" />
        <element api="P:System.Speech.Recognition.Grammar.Weight" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" />
      </containers>
      <file name="9d92bef3-1c2c-638a-95a8-fa0c616767fb" />
    </api>
    <api id="Events.T:System.Speech.Recognition.DictationGrammar">
      <topicdata name="DictationGrammar" group="list" subgroup="Events" typeTopicId="T:System.Speech.Recognition.DictationGrammar" />
      <apidata name="DictationGrammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.DictationGrammar.#ctor" />
      <elements>
        <element api="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" />
      </containers>
      <file name="5eafd3c0-5411-dc41-15ef-d966cae7c0c4" />
    </api>
    <api id="Overload:System.Speech.Recognition.DictationGrammar.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.DictationGrammar" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.DictationGrammar.#ctor" />
        <element api="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" ref="true" />
      </containers>
      <file name="d5f2428b-0a0b-9280-05bb-208b6f2f9fe0" />
    </api>
    <api id="M:System.Speech.Recognition.DictationGrammar.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.DictationGrammar.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" ref="true" />
      </containers>
      <file name="1e6592ec-42de-1e8a-540a-2a857a0644e2" />
    </api>
    <api id="M:System.Speech.Recognition.DictationGrammar.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.DictationGrammar.#ctor" />
      <parameters>
        <parameter name="topic">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" ref="true" />
      </containers>
      <file name="e431de32-bc9a-c6ca-0c87-bd2f429e8644" />
    </api>
    <api id="M:System.Speech.Recognition.DictationGrammar.SetDictationContext(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SetDictationContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="precedingText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subsequentText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DictationGrammar" ref="true" />
      </containers>
      <file name="aa13764d-bc7a-cfed-13cf-1b4dfdfaa4c9" />
    </api>
    <api id="T:System.Speech.Recognition.DisplayAttributes">
      <topicdata group="api" />
      <apidata name="DisplayAttributes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Recognition.DisplayAttributes.None" />
        <element api="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
        <element api="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
        <element api="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
        <element api="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.FlagsAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="20a72d73-4703-8807-33a9-268e4c80b112" />
    </api>
    <api id="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces">
      <topicdata group="api" notopic="" />
      <apidata name="ConsumeLeadingSpaces" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </containers>
      <file name="7a0c7ed0-1504-3ed5-756e-240fcc42df81" />
    </api>
    <api id="F:System.Speech.Recognition.DisplayAttributes.None">
      <topicdata group="api" notopic="" />
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </containers>
      <file name="5dbce435-fad0-83f1-93d8-9313b74df33b" />
    </api>
    <api id="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace">
      <topicdata group="api" notopic="" />
      <apidata name="OneTrailingSpace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </containers>
      <file name="2c35f1d4-dbfd-5f58-5598-867fffc69205" />
    </api>
    <api id="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces">
      <topicdata group="api" notopic="" />
      <apidata name="TwoTrailingSpaces" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </containers>
      <file name="9b2538b7-b952-acda-1372-5c98d2b7884e" />
    </api>
    <api id="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces">
      <topicdata group="api" notopic="" />
      <apidata name="ZeroTrailingSpaces" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </containers>
      <file name="44f8156b-d9d0-b949-0339-2020bb79ea8b" />
    </api>
    <api id="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
      <apidata name="EmulateRecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="4f8727ef-4256-8ac5-52e4-b5260af75dbf" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
      <topicdata name="EmulateRecognizeCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
      <apidata name="EmulateRecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
      </containers>
      <file name="53934b90-734c-7746-7204-ecae9c68f801" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
      <topicdata name="EmulateRecognizeCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
      <apidata name="EmulateRecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
      </containers>
      <file name="ae046ad1-79a8-d926-7323-a5178e04f574" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
      <topicdata name="EmulateRecognizeCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
      <apidata name="EmulateRecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
      </containers>
      <file name="93a6854d-78c6-07ad-f283-c5563354713a" />
    </api>
    <api id="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="7104c059-6e18-f4b7-6b7b-791570af69c3" />
    </api>
    <api id="T:System.Speech.Recognition.Grammar">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.Grammar" />
      <apidata name="Grammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Recognition.DictationGrammar" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="50e6d1b8-20a6-284f-372b-55642ec6c065" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.Grammar">
      <topicdata name="Grammar" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.Grammar" />
      <apidata name="Grammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.Grammar.#ctor">
          <element api="M:System.Speech.Recognition.Grammar.#ctor" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])" />
          <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])" />
        </element>
        <element api="P:System.Speech.Recognition.Grammar.Enabled" />
        <element api="P:System.Speech.Recognition.Grammar.IsStg" />
        <element api="P:System.Speech.Recognition.Grammar.Loaded" />
        <element api="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])" />
        <element api="P:System.Speech.Recognition.Grammar.Name" />
        <element api="P:System.Speech.Recognition.Grammar.Priority" />
        <element api="P:System.Speech.Recognition.Grammar.ResourceName" />
        <element api="P:System.Speech.Recognition.Grammar.RuleName" />
        <element api="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
        <element api="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
        <element api="P:System.Speech.Recognition.Grammar.Weight" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" />
      </containers>
      <file name="945250fa-a27d-bf23-753b-526d9b7ee5e5" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.Grammar">
      <topicdata name="Grammar" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.Grammar" />
      <apidata name="Grammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])" />
        <element api="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" />
      </containers>
      <file name="8c3f13ce-bcbd-3fd3-99bb-458fbc6e8766" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.Grammar">
      <topicdata name="Grammar" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.Grammar" />
      <apidata name="Grammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Recognition.Grammar.Enabled" />
        <element api="P:System.Speech.Recognition.Grammar.IsStg" />
        <element api="P:System.Speech.Recognition.Grammar.Loaded" />
        <element api="P:System.Speech.Recognition.Grammar.Name" />
        <element api="P:System.Speech.Recognition.Grammar.Priority" />
        <element api="P:System.Speech.Recognition.Grammar.ResourceName" />
        <element api="P:System.Speech.Recognition.Grammar.RuleName" />
        <element api="P:System.Speech.Recognition.Grammar.Weight" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" />
      </containers>
      <file name="2341a1e6-ccd5-d4ab-16f6-6cf605cb38d1" />
    </api>
    <api id="Events.T:System.Speech.Recognition.Grammar">
      <topicdata name="Grammar" group="list" subgroup="Events" typeTopicId="T:System.Speech.Recognition.Grammar" />
      <apidata name="Grammar" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" />
      </containers>
      <file name="ec9be931-0ab7-b742-c645-78cac0cc615a" />
    </api>
    <api id="Overload:System.Speech.Recognition.Grammar.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.Grammar" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.Grammar.#ctor" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])" />
        <element api="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="1896b1cc-d336-8364-a753-6a34da15194b" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="fb1b9817-b770-58b1-9d11-449d449cc07f" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="1bcf4a25-19b0-31b6-ad1a-1f2636e0bf3e" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="a57f49dd-ae2f-5ec1-0d06-c2c2ebc8b0b8" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="53414c6b-a3fc-159d-faa1-b3802d4af7ee" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="41ca0da2-5c46-ae2e-3025-8654bcc31374" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0b874676-8f44-c2b8-c1fb-c7d04e82563e" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="1e9352f1-7afe-2274-cdf2-f5894a583c3c" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="srgsDocument">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="f2a483e0-4517-177b-dee6-9c63b43c6169" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="srgsDocument">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="18520707-9cf6-5860-be1b-ec67685acd90" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="srgsDocument">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="e407cbca-b1b2-2582-63ad-365b0a6c3224" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="srgsDocument">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="077e9805-b7fc-7b3f-ea79-c55acb1ddae2" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="srgsDocument">
          <type api="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUri">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="277e35d5-bab1-f834-fc31-2b554f2e7788" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="60d5adce-d318-ec8c-9149-77d6aef884e2" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="bc26a1f5-3497-d152-a022-e06d5cb01b31" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.Grammar.#ctor" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ruleName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="17ba8ff8-3f8b-3230-8f25-d35450a3a8f3" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="13fa24c7-f303-e082-db6b-6a9fc9cbbea8" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.IsStg">
      <topicdata group="api" />
      <apidata name="IsStg" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsStg" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="603a2b12-639a-dd0c-75d5-265de510a3a1" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.Loaded">
      <topicdata group="api" />
      <apidata name="Loaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Loaded" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="4b797125-bc7b-fbbc-9fb0-baa1e4e71b9e" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])">
      <topicdata group="api" />
      <apidata name="LoadLocalizedGrammarFromType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="onInitParameters" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="2bcde479-fcdf-1481-72b7-813d624439a4" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="6da170d0-8130-da29-1aed-e72723f3384c" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.Priority">
      <topicdata group="api" />
      <apidata name="Priority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Priority" />
      <setter name="set_Priority" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="cf1f1385-75d8-c849-e55c-66bee3e69824" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.ResourceName">
      <topicdata group="api" />
      <apidata name="ResourceName" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResourceName" />
      <setter name="set_ResourceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="9f0ba0f9-6359-e09a-8d55-5be2f930ce9b" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.RuleName">
      <topicdata group="api" />
      <apidata name="RuleName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RuleName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="d21c7157-c1f8-145d-4aec-ca3c2c29978b" />
    </api>
    <api id="E:System.Speech.Recognition.Grammar.SpeechRecognized">
      <topicdata group="api" />
      <apidata name="SpeechRecognized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeechRecognized" />
      <remover name="remove_SpeechRecognized" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="1a4ef4c3-470a-b918-6389-8ba7d8905c30" />
    </api>
    <api id="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])">
      <topicdata group="api" />
      <apidata name="StgInit" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="388f8aea-cc66-3c0a-82de-f1563b8c780b" />
    </api>
    <api id="P:System.Speech.Recognition.Grammar.Weight">
      <topicdata group="api" />
      <apidata name="Weight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Weight" />
      <setter name="set_Weight" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </containers>
      <file name="6e919b6e-859c-e9fd-e5b4-ae49c39ef1d0" />
    </api>
    <api id="T:System.Speech.Recognition.GrammarBuilder">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="GrammarBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="b0840375-1f93-d21f-50f2-0030d93e81d4" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.GrammarBuilder">
      <topicdata name="GrammarBuilder" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="GrammarBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.#ctor">
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.Add">
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.Append">
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.AppendDictation">
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.AppendRuleReference">
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
        </element>
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <element api="P:System.Speech.Recognition.GrammarBuilder.Culture" />
        <element api="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition">
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit">
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" />
      </containers>
      <file name="40e9221b-cd58-e035-3b15-8559adcc01c7" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.GrammarBuilder">
      <topicdata name="GrammarBuilder" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="GrammarBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.Add">
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.Append">
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.AppendDictation">
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.AppendRuleReference">
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
        </element>
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" />
      </containers>
      <file name="3bbd97e3-13f9-3c83-a861-ec371f31261d" />
    </api>
    <api id="Operators.T:System.Speech.Recognition.GrammarBuilder">
      <topicdata name="GrammarBuilder" group="list" subgroup="Operators" subsubgroup="Operators" typeTopicId="T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="GrammarBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <elements>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition">
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
        </element>
        <element api="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit">
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
          <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" />
      </containers>
      <file name="548df3a5-792f-8854-c70a-f4a66fbedd0d" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.GrammarBuilder">
      <topicdata name="GrammarBuilder" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="GrammarBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <elements>
        <element api="P:System.Speech.Recognition.GrammarBuilder.Culture" />
        <element api="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" />
      </containers>
      <file name="74e0e332-a903-3228-9a7c-f12f03ae1001" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="46e9f071-40d5-8e44-5557-d6598e426df1" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="1f247331-a709-36ac-7bfb-0f3e77e5fb30" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.Append">
      <topicdata name="Append" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="Append" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="34dc5d19-31c5-0749-5406-328873f53d24" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.AppendDictation">
      <topicdata name="AppendDictation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="AppendDictation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="c59c9c10-4298-b0c5-b5b2-aaed3ee25a73" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.AppendRuleReference">
      <topicdata name="AppendRuleReference" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="AppendRuleReference" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="882717ab-7c5d-e733-d5df-3db0793a1bdd" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition">
      <topicdata name="Addition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="3cbf12c7-669d-1727-3442-50d95354ebee" />
    </api>
    <api id="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit">
      <topicdata name="Implicit" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.GrammarBuilder" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <elements>
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
        <element api="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="6758b8b8-3374-53e7-096c-d130a957e9a3" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="df8cfed5-eb92-85fd-712e-ab6065ad64a6" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="alternateChoices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="b8b1e100-f448-8b63-44da-9e0e1515e6a4" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="minRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="848d5a8a-a191-6068-5c59-8f011065c547" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="f66fa911-f7fa-b828-4adc-8f0952e56a80" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="d6621429-b238-f36d-09e1-1e8b23a58e5e" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="f0b7b8f6-1285-2d03-5a35-765725d85af0" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="minRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="eea96a04-79ed-520a-f13b-b18d5b4b17d2" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subsetMatchingCriteria">
          <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="43c44ad6-4a66-aadb-6f04-5c3ecca2708e" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="choices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="75e8234c-c7ce-3718-4f5c-30b7d6ce1010" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="choices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="1fc55ff8-4d15-4bfa-fd6f-ad274e49283f" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder1">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="builder2">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="7843d18e-f248-27e4-b252-748bf69d24aa" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="10de6a2b-c2e8-7405-5c57-55bacdccf053" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="05e2207a-6fdc-51a1-ae3e-0847fb572714" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="alternateChoices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="04bed0eb-5867-5338-d8a3-41fd2ad86e56" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="074f9c39-5809-1b43-66f6-86e252fcc3ee" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="minRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="1322d60c-40ad-c4b6-d5a3-cc4df107ec60" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="b5988c1a-b0eb-58b0-a17c-1c2072d6e433" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="1d2f14fb-c06b-ef6c-1894-6262ad3efe9d" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="c505289d-8339-6c86-6647-1cda9bf27812" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="minRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="maxRepeat">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="0f3e0d19-e598-9fc8-c0fc-da8133a56762" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)">
      <topicdata group="api" />
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.Append" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subsetMatchingCriteria">
          <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="e9983851-8c2f-1140-de46-e31fc7867ad3" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.AppendDictation">
      <topicdata group="api" />
      <apidata name="AppendDictation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="33419504-63a1-ae5f-52e0-d837627c60ef" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)">
      <topicdata group="api" />
      <apidata name="AppendDictation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="category">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="e0b1d813-6ea9-3f33-93ce-97e22ad9485c" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)">
      <topicdata group="api" />
      <apidata name="AppendRuleReference" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.AppendRuleReference" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="ec456b29-0c2b-e05f-0731-d0bdc5c3d385" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="AppendRuleReference" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.GrammarBuilder.AppendRuleReference" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rule">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="97fa9047-1c8c-2f0d-2887-7ace1f8880a0" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard">
      <topicdata group="api" />
      <apidata name="AppendWildcard" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="8dc6c158-9f3d-9e27-2898-2ceb64b97cb2" />
    </api>
    <api id="P:System.Speech.Recognition.GrammarBuilder.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Culture" />
      <setter name="set_Culture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="aee9456c-8dee-25f1-6189-cc6b1153de70" />
    </api>
    <api id="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases">
      <topicdata group="api" />
      <apidata name="DebugShowPhrases" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DebugShowPhrases" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="cc12b096-b99c-f042-f2a3-7cf2716c1b2c" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="choices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="bc0218e7-968b-e919-810c-8adfa64817ca" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="choices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="2aa605c2-d2d4-b5aa-e03a-1dc51f190417" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder1">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="builder2">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="21d22399-6751-94e0-fe48-7ad469f27a13" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="70e5e27d-310a-1297-14f2-bed28509f100" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)">
      <topicdata group="api" />
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Addition" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="3bc848fc-d446-26a9-b158-ef48efac77bc" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="choices">
          <type api="T:System.Speech.Recognition.Choices" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="5328873e-297d-6524-2f7a-35bdff7494b9" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="semanticKey">
          <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="d7e6e580-9f25-5d19-6dd4-c8eb00d11144" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="semanticValue">
          <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="e23143ad-68c8-80a6-dd91-bfeb8a6cdc65" />
    </api>
    <api id="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder">
      <topicdata group="api" />
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" overload="Overload:System.Speech.Recognition.GrammarBuilder.op_Implicit" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </containers>
      <file name="a6457228-6ef1-baaa-b45b-623f2d0fda28" />
    </api>
    <api id="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
      <apidata name="LoadGrammarCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="37e62944-3c71-5788-ea22-523c87051a88" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.LoadGrammarCompletedEventArgs">
      <topicdata name="LoadGrammarCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
      <apidata name="LoadGrammarCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.LoadGrammarCompletedEventArgs.Grammar" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
      </containers>
      <file name="23e7e2af-6714-0f5e-4e31-6743a55ba939" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.LoadGrammarCompletedEventArgs">
      <topicdata name="LoadGrammarCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
      <apidata name="LoadGrammarCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
      </containers>
      <file name="37fd26b9-377f-d24c-5eb3-ea6b2df496c3" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.LoadGrammarCompletedEventArgs">
      <topicdata name="LoadGrammarCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
      <apidata name="LoadGrammarCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.LoadGrammarCompletedEventArgs.Grammar" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" />
      </containers>
      <file name="4ee896b0-6402-94d7-1f30-26b040b48ddc" />
    </api>
    <api id="P:System.Speech.Recognition.LoadGrammarCompletedEventArgs.Grammar">
      <topicdata group="api" />
      <apidata name="Grammar" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Grammar" />
      <returns>
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
      </containers>
      <file name="8f839ed9-e030-6c9f-6866-e84d0546e2d8" />
    </api>
    <api id="T:System.Speech.Recognition.RecognitionEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognitionEventArgs" />
      <apidata name="RecognitionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
          <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" ref="true" />
          <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="edc581ec-ee37-9f82-4464-44e6a738c9c3" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognitionEventArgs">
      <topicdata name="RecognitionEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognitionEventArgs" />
      <apidata name="RecognitionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionEventArgs" />
      </containers>
      <file name="3be8bdac-8f23-049f-86ee-00d0c1e618ab" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognitionEventArgs">
      <topicdata name="RecognitionEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognitionEventArgs" />
      <apidata name="RecognitionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionEventArgs" />
      </containers>
      <file name="02cc7b5f-9b78-7060-8f2f-ab00c2cc52fb" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognitionEventArgs">
      <topicdata name="RecognitionEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognitionEventArgs" />
      <apidata name="RecognitionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionEventArgs" />
      </containers>
      <file name="03248a53-f048-801f-d59f-36342c47a8d9" />
    </api>
    <api id="P:System.Speech.Recognition.RecognitionEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionEventArgs" ref="true" />
      </containers>
      <file name="c585175d-bad9-3bd7-ade2-964ee4abeb02" />
    </api>
    <api id="T:System.Speech.Recognition.RecognitionResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognitionResult" />
      <apidata name="RecognitionResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="ee1a5382-b974-5b88-2542-615dd31d09a3" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognitionResult">
      <topicdata name="RecognitionResult" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognitionResult" />
      <apidata name="RecognitionResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <element api="P:System.Speech.Recognition.RecognitionResult.Audio" />
        <element api="M:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)" />
        <element api="M:System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
        <element api="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" />
      </containers>
      <file name="885f6ca0-9462-4019-689b-c17a8b4686fd" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognitionResult">
      <topicdata name="RecognitionResult" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognitionResult" />
      <apidata name="RecognitionResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)" />
        <element api="M:System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" />
      </containers>
      <file name="cd1df4e8-29ab-b2c7-5302-991979659975" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognitionResult">
      <topicdata name="RecognitionResult" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognitionResult" />
      <apidata name="RecognitionResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognitionResult.Alternates" />
        <element api="P:System.Speech.Recognition.RecognitionResult.Audio" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" />
      </containers>
      <file name="ed1cbb71-96f5-db51-f530-77a293e37e66" />
    </api>
    <api id="P:System.Speech.Recognition.RecognitionResult.Alternates">
      <topicdata group="api" />
      <apidata name="Alternates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Alternates" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </containers>
      <file name="aa75b94d-3bbe-f19b-b08c-bd5ce9a38c17" />
    </api>
    <api id="P:System.Speech.Recognition.RecognitionResult.Audio">
      <topicdata group="api" />
      <apidata name="Audio" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Audio" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </containers>
      <file name="b1763173-d473-d640-f9d4-554f56ec34fa" />
    </api>
    <api id="M:System.Speech.Recognition.RecognitionResult.GetAudioForWordRange(System.Speech.Recognition.RecognizedWordUnit,System.Speech.Recognition.RecognizedWordUnit)">
      <topicdata group="api" />
      <apidata name="GetAudioForWordRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="firstWord">
          <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
        </parameter>
        <parameter name="lastWord">
          <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </containers>
      <file name="06d0e376-fa0d-be58-11b5-621943efd184" />
    </api>
    <api id="M:System.Speech.Recognition.RecognitionResult.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" eiiName="ISerializable.GetObjectData" />
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </containers>
      <file name="4b2af6e1-3155-651b-c9bf-f48bd079f2ea" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizeCompletedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
      <apidata name="RecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.AsyncCompletedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="39a49ef1-1098-c583-2c37-ce3260e571bd" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizeCompletedEventArgs">
      <topicdata name="RecognizeCompletedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
      <apidata name="RecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
      </containers>
      <file name="319c5e31-233a-91dd-6e93-1a1aa6ebcb88" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognizeCompletedEventArgs">
      <topicdata name="RecognizeCompletedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
      <apidata name="RecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ComponentModel.AsyncCompletedEventArgs.RaiseExceptionIfNecessary" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
      </containers>
      <file name="21fa400b-d0a8-a6a2-f4fa-8172cb9578cb" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizeCompletedEventArgs">
      <topicdata name="RecognizeCompletedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
      <apidata name="RecognizeCompletedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Cancelled" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.Error" />
        <element api="P:System.ComponentModel.AsyncCompletedEventArgs.UserState" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded" />
        <element api="P:System.Speech.Recognition.RecognizeCompletedEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" />
      </containers>
      <file name="33dcf032-3ed9-bc59-6e4c-ee27f6772eb9" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizeCompletedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="9e5e7428-a758-c3f1-388b-b73e8dbf01d7" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizeCompletedEventArgs.BabbleTimeout">
      <topicdata group="api" />
      <apidata name="BabbleTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BabbleTimeout" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="15f23c53-d6f6-beba-f77c-22624ff8fea7" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InitialSilenceTimeout">
      <topicdata group="api" />
      <apidata name="InitialSilenceTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InitialSilenceTimeout" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="c1518b6a-0fee-3653-6195-bf5426ced94e" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizeCompletedEventArgs.InputStreamEnded">
      <topicdata group="api" />
      <apidata name="InputStreamEnded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InputStreamEnded" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="e44d2c25-800c-6141-19e1-b605a33efed5" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizeCompletedEventArgs.Result">
      <topicdata group="api" />
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </containers>
      <file name="55ae1004-b2cd-ef60-4177-b4ba7e2cfa7e" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizedAudio">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizedAudio" />
      <apidata name="RecognizedAudio" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="ed156949-7549-01c5-346c-d047c479afc1" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizedAudio">
      <topicdata name="RecognizedAudio" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizedAudio" />
      <apidata name="RecognizedAudio" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.Duration" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.Format" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.GetRange(System.TimeSpan,System.TimeSpan)" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.StartTime" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.WriteToAudioStream(System.IO.Stream)" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.WriteToWaveStream(System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" />
      </containers>
      <file name="03b451ab-1268-3801-f534-9f016d202d3f" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognizedAudio">
      <topicdata name="RecognizedAudio" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognizedAudio" />
      <apidata name="RecognizedAudio" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.GetRange(System.TimeSpan,System.TimeSpan)" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.WriteToAudioStream(System.IO.Stream)" />
        <element api="M:System.Speech.Recognition.RecognizedAudio.WriteToWaveStream(System.IO.Stream)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" />
      </containers>
      <file name="41810b25-098c-aa80-fba3-87e10f2051cc" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizedAudio">
      <topicdata name="RecognizedAudio" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizedAudio" />
      <apidata name="RecognizedAudio" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognizedAudio.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.Duration" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.Format" />
        <element api="P:System.Speech.Recognition.RecognizedAudio.StartTime" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" />
      </containers>
      <file name="086b4810-140c-9237-4b48-ceb86cb357f0" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedAudio.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="4762d0eb-8918-33f0-406c-120ec00ea009" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedAudio.Duration">
      <topicdata group="api" />
      <apidata name="Duration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Duration" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="e1559c5d-d670-3d8e-8dc7-f10ef965fab0" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedAudio.Format">
      <topicdata group="api" />
      <apidata name="Format" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Format" />
      <returns>
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="a0d15bc2-18c2-770d-cd62-edc1c239e54f" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizedAudio.GetRange(System.TimeSpan,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="GetRange" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioPosition">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="duration">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="185c1fed-9046-413e-961a-4425428d1c9a" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedAudio.StartTime">
      <topicdata group="api" />
      <apidata name="StartTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_StartTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="ae4872a9-31d6-e26a-dfa2-d2146e6a44b0" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizedAudio.WriteToAudioStream(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteToAudioStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="outputStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="5bcbbfbc-d2a9-b15e-31d1-f1aa24d218b2" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizedAudio.WriteToWaveStream(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="WriteToWaveStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="outputStream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedAudio" ref="true" />
      </containers>
      <file name="7a3858b8-6474-0bf8-0930-390c87dc27e3" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizedPhrase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizedPhrase" />
      <apidata name="RecognizedPhrase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="1c30eda1-4a16-3298-24fc-35081b244ba9" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizedPhrase">
      <topicdata name="RecognizedPhrase" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizedPhrase" />
      <apidata name="RecognizedPhrase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
        <element api="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" />
      </containers>
      <file name="96e89533-e1e5-be49-e09c-180bd8eff7b1" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognizedPhrase">
      <topicdata name="RecognizedPhrase" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognizedPhrase" />
      <apidata name="RecognizedPhrase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" />
      </containers>
      <file name="aebd2005-61ea-3d10-f48f-d3a8a27e8348" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizedPhrase">
      <topicdata name="RecognizedPhrase" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizedPhrase" />
      <apidata name="RecognizedPhrase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Confidence" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Grammar" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Homophones" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Semantics" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Text" />
        <element api="P:System.Speech.Recognition.RecognizedPhrase.Words" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" />
      </containers>
      <file name="befb4345-4c74-15a1-1edf-fdc3b9a66940" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Confidence">
      <topicdata group="api" />
      <apidata name="Confidence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Confidence" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="6fba0800-291d-35ad-cd14-835e39462c16" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics">
      <topicdata group="api" />
      <apidata name="ConstructSmlFromSemantics" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XPath.IXPathNavigable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="7eb45abb-4071-a160-8601-f0b029a386ec" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Grammar">
      <topicdata group="api" />
      <apidata name="Grammar" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Grammar" />
      <returns>
        <type api="T:System.Speech.Recognition.Grammar" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="83ce0462-0166-c6ae-5bd6-8fdedfb6468e" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId">
      <topicdata group="api" />
      <apidata name="HomophoneGroupId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_HomophoneGroupId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="7c20f11a-5fae-24fb-4a06-a7f3c91a9562" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Homophones">
      <topicdata group="api" />
      <apidata name="Homophones" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Homophones" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="bf913d5d-190e-3cae-5d3d-f8e50ddf81da" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits">
      <topicdata group="api" />
      <apidata name="ReplacementWordUnits" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReplacementWordUnits" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.ReplacementText" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="65fa64e0-d25a-c803-1c8d-646941d4ebe5" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Semantics">
      <topicdata group="api" />
      <apidata name="Semantics" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Semantics" />
      <returns>
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="e97283c3-f06e-2a00-697c-27697c5c2f68" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="961c6dcf-b4a6-6796-f1d9-36bf7d373623" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedPhrase.Words">
      <topicdata group="api" />
      <apidata name="Words" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Words" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedPhrase" ref="true" />
      </containers>
      <file name="56299c15-bfae-786a-b66d-5528a121a616" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizedWordUnit">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizedWordUnit" />
      <apidata name="RecognizedWordUnit" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="6a07ab84-5973-4d34-337b-baca40c55c4d" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizedWordUnit">
      <topicdata name="RecognizedWordUnit" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizedWordUnit" />
      <apidata name="RecognizedWordUnit" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.RecognizedWordUnit.#ctor(System.String,System.Single,System.String,System.String,System.Speech.Recognition.DisplayAttributes,System.TimeSpan,System.TimeSpan)" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Confidence" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" />
      </containers>
      <file name="8b8aa964-2503-6053-484d-734774d8d870" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognizedWordUnit">
      <topicdata name="RecognizedWordUnit" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognizedWordUnit" />
      <apidata name="RecognizedWordUnit" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" />
      </containers>
      <file name="3d9d3a31-dfd2-fa94-6958-af1a96d18e76" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizedWordUnit">
      <topicdata name="RecognizedWordUnit" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizedWordUnit" />
      <apidata name="RecognizedWordUnit" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Confidence" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation" />
        <element api="P:System.Speech.Recognition.RecognizedWordUnit.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" />
      </containers>
      <file name="4cee6e03-bdf7-0a97-5bb4-6f6026c0a53b" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizedWordUnit.#ctor(System.String,System.Single,System.String,System.String,System.Speech.Recognition.DisplayAttributes,System.TimeSpan,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="confidence">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="pronunciation">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lexicalForm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="displayAttributes">
          <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
        </parameter>
        <parameter name="audioPosition">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="audioDuration">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="d95436a1-e269-8232-54bb-58424829c5df" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedWordUnit.Confidence">
      <topicdata group="api" />
      <apidata name="Confidence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Confidence" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="5e002759-6d23-3d61-ff45-2a03f572e750" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes">
      <topicdata group="api" />
      <apidata name="DisplayAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisplayAttributes" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="f43783ea-1376-022c-9a9b-efc4ffecb892" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm">
      <topicdata group="api" />
      <apidata name="LexicalForm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LexicalForm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="664c612a-d647-6e81-2a28-1eddac281c56" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation">
      <topicdata group="api" />
      <apidata name="Pronunciation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Pronunciation" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="b608b34e-ca5e-64d6-9937-54580ec24b15" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizedWordUnit.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
      </containers>
      <file name="339a582a-5570-3bae-329e-d919d556477b" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizeMode">
      <topicdata group="api" />
      <apidata name="RecognizeMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Recognition.RecognizeMode.Single" />
        <element api="F:System.Speech.Recognition.RecognizeMode.Multiple" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="e3d6f9ba-7120-158f-9cdd-2d4ca34fe76d" />
    </api>
    <api id="F:System.Speech.Recognition.RecognizeMode.Multiple">
      <topicdata group="api" notopic="" />
      <apidata name="Multiple" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizeMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeMode" ref="false" />
      </containers>
      <file name="33a09765-df5f-5281-c365-eca7eee09d04" />
    </api>
    <api id="F:System.Speech.Recognition.RecognizeMode.Single">
      <topicdata group="api" notopic="" />
      <apidata name="Single" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizeMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizeMode" ref="false" />
      </containers>
      <file name="fa25d63d-6199-fc5f-2003-e35022c5defc" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizerInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizerInfo" />
      <apidata name="RecognizerInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="3aae887d-2e42-b5df-f5a1-9354e9969f00" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizerInfo">
      <topicdata name="RecognizerInfo" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizerInfo" />
      <apidata name="RecognizerInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.AdditionalInfo" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Culture" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Description" />
        <element api="M:System.Speech.Recognition.RecognizerInfo.Dispose" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Id" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Name" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" />
      </containers>
      <file name="ed5849b8-6c80-d81d-bba6-05a9f87735a3" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognizerInfo">
      <topicdata name="RecognizerInfo" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognizerInfo" />
      <apidata name="RecognizerInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.RecognizerInfo.Dispose" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" />
      </containers>
      <file name="aca945a0-f522-68a7-03dd-1cb27f01d016" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizerInfo">
      <topicdata name="RecognizerInfo" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizerInfo" />
      <apidata name="RecognizerInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognizerInfo.AdditionalInfo" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Culture" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Description" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Id" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.Name" />
        <element api="P:System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" />
      </containers>
      <file name="e8a02028-0aea-5c00-8e9e-92365a0fffc4" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.AdditionalInfo">
      <topicdata group="api" />
      <apidata name="AdditionalInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AdditionalInfo" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="eb2f62ce-3a99-18c0-1a7e-2347dc068446" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.Culture">
      <topicdata group="api" />
      <apidata name="Culture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Culture" />
      <returns>
        <type api="T:System.Globalization.CultureInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="5e48feea-d371-317e-0cf0-62eed910d016" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.Description">
      <topicdata group="api" />
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="db5cd37d-9788-594f-43fc-04cecfb9cc31" />
    </api>
    <api id="M:System.Speech.Recognition.RecognizerInfo.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="5367e0c6-cdb1-7ed4-518f-a75c3e9ce9a3" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.Id">
      <topicdata group="api" />
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Id" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="9c8e79ab-9d66-8b43-63f0-7b9be5f476c2" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="a34e4eb4-a031-eaa2-d60e-5d76e522883d" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerInfo.SupportedAudioFormats">
      <topicdata group="api" />
      <apidata name="SupportedAudioFormats" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SupportedAudioFormats" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </containers>
      <file name="bc3fe41f-8f4a-f577-aa8c-572a097ffad7" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizerState">
      <topicdata group="api" />
      <apidata name="RecognizerState" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Recognition.RecognizerState.Stopped" />
        <element api="F:System.Speech.Recognition.RecognizerState.Listening" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="8770aab8-d06e-a3c4-8b0d-645d078cbaf9" />
    </api>
    <api id="F:System.Speech.Recognition.RecognizerState.Listening">
      <topicdata group="api" notopic="" />
      <apidata name="Listening" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </containers>
      <file name="2f2a0882-edd8-e9d5-fbe0-1b1dbe0bca2a" />
    </api>
    <api id="F:System.Speech.Recognition.RecognizerState.Stopped">
      <topicdata group="api" notopic="" />
      <apidata name="Stopped" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </containers>
      <file name="30f5a034-ec69-28a9-3c53-b827e94a9f46" />
    </api>
    <api id="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      <apidata name="RecognizerUpdateReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="ae256cf1-21cd-e0db-16cc-91ee0ee51c80" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs">
      <topicdata name="RecognizerUpdateReachedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      <apidata name="RecognizerUpdateReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.UserToken" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      </containers>
      <file name="7afc424c-e4f5-ca1a-6cd6-b077d2b316f8" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs">
      <topicdata name="RecognizerUpdateReachedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      <apidata name="RecognizerUpdateReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      </containers>
      <file name="dea6d337-c527-2252-c310-9108571bc50b" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs">
      <topicdata name="RecognizerUpdateReachedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      <apidata name="RecognizerUpdateReachedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.AudioPosition" />
        <element api="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.UserToken" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" />
      </containers>
      <file name="6ce759fe-1ac4-5495-a4b4-8722ccbb6042" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
      </containers>
      <file name="5dc64546-6777-bba4-431d-887238937cd4" />
    </api>
    <api id="P:System.Speech.Recognition.RecognizerUpdateReachedEventArgs.UserToken">
      <topicdata group="api" />
      <apidata name="UserToken" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UserToken" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
      </containers>
      <file name="8ef41bbc-b7fb-5be2-41b2-ad20b767c14e" />
    </api>
    <api id="T:System.Speech.Recognition.ReplacementText">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.ReplacementText" />
      <apidata name="ReplacementText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="sequential" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="576d9e09-d591-d6ed-c79a-207fe8cb820e" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.ReplacementText">
      <topicdata name="ReplacementText" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.ReplacementText" />
      <apidata name="ReplacementText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.ReplacementText.CountOfWords" />
        <element api="P:System.Speech.Recognition.ReplacementText.DisplayAttributes" />
        <element api="P:System.Speech.Recognition.ReplacementText.FirstWordIndex" />
        <element api="P:System.Speech.Recognition.ReplacementText.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" />
      </containers>
      <file name="d4e41e4b-5609-3822-a406-497a2892fea9" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.ReplacementText">
      <topicdata name="ReplacementText" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.ReplacementText" />
      <apidata name="ReplacementText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" />
      </containers>
      <file name="ccefaca3-82fc-391e-aa51-4ff10088d4da" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.ReplacementText">
      <topicdata name="ReplacementText" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.ReplacementText" />
      <apidata name="ReplacementText" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="sequential" format="ansi" />
      <elements>
        <element api="P:System.Speech.Recognition.ReplacementText.CountOfWords" />
        <element api="P:System.Speech.Recognition.ReplacementText.DisplayAttributes" />
        <element api="P:System.Speech.Recognition.ReplacementText.FirstWordIndex" />
        <element api="P:System.Speech.Recognition.ReplacementText.Text" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" />
      </containers>
      <file name="8f575a3e-dc71-5f91-c70e-adc5b0e14be5" />
    </api>
    <api id="P:System.Speech.Recognition.ReplacementText.CountOfWords">
      <topicdata group="api" />
      <apidata name="CountOfWords" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CountOfWords" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" ref="true" />
      </containers>
      <file name="33c03fee-db4c-d1d7-b8bb-f6b81104a4f6" />
    </api>
    <api id="P:System.Speech.Recognition.ReplacementText.DisplayAttributes">
      <topicdata group="api" />
      <apidata name="DisplayAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DisplayAttributes" />
      <returns>
        <type api="T:System.Speech.Recognition.DisplayAttributes" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" ref="true" />
      </containers>
      <file name="9dbc770d-e823-30d9-eec9-8adafa66dcbb" />
    </api>
    <api id="P:System.Speech.Recognition.ReplacementText.FirstWordIndex">
      <topicdata group="api" />
      <apidata name="FirstWordIndex" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FirstWordIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" ref="true" />
      </containers>
      <file name="8e6c5535-2e4d-0a1f-f38a-3c2e11a59d73" />
    </api>
    <api id="P:System.Speech.Recognition.ReplacementText.Text">
      <topicdata group="api" />
      <apidata name="Text" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Text" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.ReplacementText" ref="true" />
      </containers>
      <file name="c916064f-ad56-712f-83b8-531686fcb0d5" />
    </api>
    <api id="T:System.Speech.Recognition.SemanticResultKey">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticResultKey" />
      <apidata name="SemanticResultKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="28b4adf4-36ad-85d7-6a9c-9ac77e317532" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SemanticResultKey">
      <topicdata name="SemanticResultKey" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SemanticResultKey" />
      <apidata name="SemanticResultKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SemanticResultKey.#ctor">
          <element api="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
          <element api="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
        </element>
        <element api="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultKey" />
      </containers>
      <file name="d3606877-9482-a6c2-e186-34bd32d42eda" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SemanticResultKey">
      <topicdata name="SemanticResultKey" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SemanticResultKey" />
      <apidata name="SemanticResultKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultKey" />
      </containers>
      <file name="c410b7b3-8941-ae40-5335-b388b5dac830" />
    </api>
    <api id="Overload:System.Speech.Recognition.SemanticResultKey.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticResultKey" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
        <element api="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
      </containers>
      <file name="79d55081-790e-22e7-8a68-ff2d1727525c" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticResultKey.#ctor" />
      <parameters>
        <parameter name="semanticResultKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="builders" params="true">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
      </containers>
      <file name="ac942e61-3d5c-ee65-316d-62e46ee456fe" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticResultKey.#ctor" />
      <parameters>
        <parameter name="semanticResultKey">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="phrases" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
      </containers>
      <file name="92d751fd-95f7-357b-1e0b-4ea72360b86e" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder">
      <topicdata group="api" />
      <apidata name="ToGrammarBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultKey" ref="true" />
      </containers>
      <file name="c08574f1-7c18-9229-d81f-5c0bdfd502f3" />
    </api>
    <api id="T:System.Speech.Recognition.SemanticResultValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticResultValue" />
      <apidata name="SemanticResultValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="03838a30-9bf1-4e31-0ba7-7afef8481234" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SemanticResultValue">
      <topicdata name="SemanticResultValue" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SemanticResultValue" />
      <apidata name="SemanticResultValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SemanticResultValue.#ctor">
          <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
          <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
          <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
        </element>
        <element api="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" />
      </containers>
      <file name="cd7ac5af-e335-0e4c-1da5-b43217412e47" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SemanticResultValue">
      <topicdata name="SemanticResultValue" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SemanticResultValue" />
      <apidata name="SemanticResultValue" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" />
      </containers>
      <file name="8d59c24a-c120-4455-16f6-4033195acca9" />
    </api>
    <api id="Overload:System.Speech.Recognition.SemanticResultValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticResultValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
        <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
        <element api="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
      </containers>
      <file name="ad474985-1663-c7ca-7c8b-f3f5db5465fb" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticResultValue.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
      </containers>
      <file name="988d0f8c-f1c1-28b3-98e0-35773774478b" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticResultValue.#ctor" />
      <parameters>
        <parameter name="builder">
          <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
      </containers>
      <file name="26ad0579-3534-5ef4-b34d-2f4361070ad1" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticResultValue.#ctor" />
      <parameters>
        <parameter name="phrase">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
      </containers>
      <file name="ef1cf0c5-2156-90ef-29bf-21b1fa543c9a" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder">
      <topicdata group="api" />
      <apidata name="ToGrammarBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Speech.Recognition.GrammarBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticResultValue" ref="true" />
      </containers>
      <file name="9c96930e-a5a2-7378-da69-8c89b5fa05ba" />
    </api>
    <api id="T:System.Speech.Recognition.SemanticValue">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticValue" />
      <apidata name="SemanticValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="d474068b-bad1-6cea-6398-c34f47514e0b" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SemanticValue">
      <topicdata name="SemanticValue" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SemanticValue" />
      <apidata name="SemanticValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Speech.Recognition.SemanticValue.#ctor">
          <element api="M:System.Speech.Recognition.SemanticValue.#ctor(System.Object)" />
          <element api="M:System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)" />
        </element>
        <element api="P:System.Speech.Recognition.SemanticValue.Confidence" />
        <element api="M:System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.ContainsKey(System.String)" />
        <element api="P:System.Speech.Recognition.SemanticValue.Count" />
        <element api="M:System.Speech.Recognition.SemanticValue.Equals(System.Object)" />
        <element api="M:System.Speech.Recognition.SemanticValue.GetHashCode" />
        <element api="P:System.Speech.Recognition.SemanticValue.Item(System.String)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#Clear" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#IsReadOnly" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Add(System.String,System.Speech.Recognition.SemanticValue)" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Keys" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Remove(System.String)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Values" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#GetEnumerator" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator" />
        <element api="P:System.Speech.Recognition.SemanticValue.Value" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" />
      </containers>
      <file name="d465fa58-f646-9877-a83d-9e89f404ad88" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SemanticValue">
      <topicdata name="SemanticValue" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SemanticValue" />
      <apidata name="SemanticValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.String" ref="true" />
                        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.String" ref="true" />
                          <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.String" ref="true" />
                      <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.String" ref="true" />
                    <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.ContainsKey(System.String)" />
        <element api="M:System.Speech.Recognition.SemanticValue.Equals(System.Object)" />
        <element api="M:System.Speech.Recognition.SemanticValue.GetHashCode" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#Clear" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Add(System.String,System.Speech.Recognition.SemanticValue)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Remove(System.String)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#GetEnumerator" />
        <element api="M:System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" />
      </containers>
      <file name="28f97433-0a35-1048-5837-b29cbc25efc3" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SemanticValue">
      <topicdata name="SemanticValue" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SemanticValue" />
      <apidata name="SemanticValue" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:System.Speech.Recognition.SemanticValue.Confidence" />
        <element api="P:System.Speech.Recognition.SemanticValue.Count" />
        <element api="P:System.Speech.Recognition.SemanticValue.Item(System.String)" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#IsReadOnly" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Keys" />
        <element api="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Values" />
        <element api="P:System.Speech.Recognition.SemanticValue.Value" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" />
      </containers>
      <file name="5a499015-5c0c-3180-114f-54a7a2c543cf" />
    </api>
    <api id="Overload:System.Speech.Recognition.SemanticValue.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SemanticValue" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SemanticValue.#ctor(System.Object)" />
        <element api="M:System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="d63637bf-fedd-b1d4-0f93-e19d95afb0f9" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.#ctor(System.Object)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticValue.#ctor" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="af8962c2-1f87-03dc-5bee-d0f3512b23bc" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.#ctor(System.String,System.Object,System.Single)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SemanticValue.#ctor" />
      <parameters>
        <parameter name="keyName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="confidence">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="f6025084-7681-0b1b-3de7-895f6c89d219" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.Confidence">
      <topicdata group="api" />
      <apidata name="Confidence" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Confidence" />
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="b020549a-f99d-ac57-7888-7563a684a6e5" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="6b5661f9-ca6c-3fd2-2a5c-2fec3eba86bc" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.ContainsKey(System.String)">
      <topicdata group="api" />
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="0cd1cdfd-5eb7-ef10-b483-b69f813bf11d" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="9464bfeb-0dd8-2fe6-d80d-a9b9309d9f1a" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="8882f3c8-5087-42e6-2f1e-cd66542be50c" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="dcc62f49-6ca7-cd1d-ee32-b13084e517f2" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.Item(System.String)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="7d8185ab-da82-fe38-de39-038e4ca6759e" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#Add(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})">
      <topicdata group="api" eiiName="ICollection.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="da607a19-15da-ac2b-3ede-a1bf7d4ef71a" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#Clear">
      <topicdata group="api" eiiName="ICollection.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="17a74e2a-29b7-0b4d-f4b2-c2eb3adbbe56" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue}[],System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="71ae0248-b67b-f526-ddb1-3627fef402b0" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#IsReadOnly">
      <topicdata group="api" eiiName="ICollection.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Speech.Recognition.SemanticValue&gt;&gt;.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="f96e6cf2-ce3f-e5f2-853a-e792549f7d07" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#Remove(System.Collections.Generic.KeyValuePair{System.String,System.Speech.Recognition.SemanticValue})">
      <topicdata group="api" eiiName="ICollection.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="0eb7290a-58ba-5436-4324-c6969b8c96a5" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Add(System.String,System.Speech.Recognition.SemanticValue)">
      <topicdata group="api" eiiName="IDictionary.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="3b9e0611-edea-c7aa-a38f-c055b6bc0b31" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Keys">
      <topicdata group="api" eiiName="IDictionary.Keys" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.IDictionary&lt;System.String,System.Speech.Recognition.SemanticValue&gt;.Keys" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Keys">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="4c494edb-d5f8-e317-cb9f-15d013777854" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Remove(System.String)">
      <topicdata group="api" eiiName="IDictionary.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="c728ecb0-2f65-a815-c158-94d24de47da5" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#TryGetValue(System.String,System.Speech.Recognition.SemanticValue@)">
      <topicdata group="api" eiiName="IDictionary.TryGetValue" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="cbe6f64d-adcf-4c7c-a988-95adff8285be" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IDictionary{System#String@System#Speech#Recognition#SemanticValue}#Values">
      <topicdata group="api" eiiName="IDictionary.Values" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.IDictionary&lt;System.String,System.Speech.Recognition.SemanticValue&gt;.Values" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="cb48e661-5647-f84d-e1f2-b5d07550ada5" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{System#String@System#Speech#Recognition#SemanticValue}}#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.String" ref="true" />
                <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.String" ref="true" />
                  <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="7481cc16-9217-2e6b-9240-4508c6d5a565" />
    </api>
    <api id="M:System.Speech.Recognition.SemanticValue.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="828c95d6-ca3b-f5d2-c935-0d1cbe02c658" />
    </api>
    <api id="P:System.Speech.Recognition.SemanticValue.Value">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SemanticValue" ref="true" />
      </containers>
      <file name="18584626-d079-1ad8-02eb-a56af05427c1" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechDetectedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechDetectedEventArgs" />
      <apidata name="SpeechDetectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="9cb7d62b-e817-d0f9-dfdf-365e0ca2bdf2" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechDetectedEventArgs">
      <topicdata name="SpeechDetectedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechDetectedEventArgs" />
      <apidata name="SpeechDetectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" />
      </containers>
      <file name="c6d56325-cb18-f67a-9634-7d80caa703db" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SpeechDetectedEventArgs">
      <topicdata name="SpeechDetectedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SpeechDetectedEventArgs" />
      <apidata name="SpeechDetectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" />
      </containers>
      <file name="f7a8bc15-b667-204d-6383-c40e7eee54c2" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SpeechDetectedEventArgs">
      <topicdata name="SpeechDetectedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SpeechDetectedEventArgs" />
      <apidata name="SpeechDetectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" />
      </containers>
      <file name="284fa958-2039-c472-780a-11240edc8488" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechDetectedEventArgs.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" ref="true" />
      </containers>
      <file name="2bea23c1-f086-ae71-2c31-c295f19d8e0e" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechHypothesizedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
      <apidata name="SpeechHypothesizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.RecognitionEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="00cb2a9b-2f92-508b-e293-ff852070001c" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechHypothesizedEventArgs">
      <topicdata name="SpeechHypothesizedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
      <apidata name="SpeechHypothesizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
      </containers>
      <file name="7b0a813e-e792-ec65-e1ec-6f106635b5d4" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SpeechHypothesizedEventArgs">
      <topicdata name="SpeechHypothesizedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
      <apidata name="SpeechHypothesizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
      </containers>
      <file name="aeea266a-1b09-aaa0-31ee-58de0b76f2cf" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SpeechHypothesizedEventArgs">
      <topicdata name="SpeechHypothesizedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
      <apidata name="SpeechHypothesizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
      </containers>
      <file name="80643132-f8c9-51d9-f186-2193d9f7e89f" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechRecognitionEngine">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="SpeechRecognitionEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="7c33b36e-bc66-9793-1f29-5d49f0ba0c22" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine">
      <topicdata name="SpeechRecognitionEngine" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="SpeechRecognitionEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Globalization.CultureInfo)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Speech.Recognition.RecognizerInfo)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.String)" />
        </element>
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioFormat" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevel" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevelUpdated" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioPosition" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioSignalProblemOccurred" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioState" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioStateChanged" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.BabbleTimeout" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Dispose">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeout" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeoutAmbiguous" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.Grammars" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.InitialSilenceTimeout" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarAsync(System.Speech.Recognition.Grammar)" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarCompleted" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.MaxAlternates" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.QueryRecognizerSetting(System.String)" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Recognize">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync(System.Speech.Recognition.RecognizeMode)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncCancel" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncStop" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerAudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerUpdateReached" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToDefaultAudioDevice" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveFile(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveStream(System.IO.Stream)" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadAllGrammars" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.Int32)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </containers>
      <file name="a864d919-9932-9596-52c1-a18f58e81f63" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SpeechRecognitionEngine">
      <topicdata name="SpeechRecognitionEngine" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="SpeechRecognitionEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Dispose">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarAsync(System.Speech.Recognition.Grammar)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.QueryRecognizerSetting(System.String)" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Recognize">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize(System.TimeSpan)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync(System.Speech.Recognition.RecognizeMode)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncCancel" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncStop" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToDefaultAudioDevice" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveFile(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveStream(System.IO.Stream)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadAllGrammars" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting">
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.Int32)" />
          <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.String)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </containers>
      <file name="101843d6-d430-2195-214b-4f543e28d428" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SpeechRecognitionEngine">
      <topicdata name="SpeechRecognitionEngine" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="SpeechRecognitionEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <elements>
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioFormat" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevel" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioState" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.BabbleTimeout" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeout" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeoutAmbiguous" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.Grammars" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.InitialSilenceTimeout" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.MaxAlternates" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerAudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </containers>
      <file name="d8101679-dd85-c370-3366-d0d212556aa6" />
    </api>
    <api id="Events.T:System.Speech.Recognition.SpeechRecognitionEngine">
      <topicdata name="SpeechRecognitionEngine" group="list" subgroup="Events" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="SpeechRecognitionEngine" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <elements>
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevelUpdated" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioSignalProblemOccurred" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioStateChanged" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarCompleted" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerUpdateReached" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected" />
        <element api="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </containers>
      <file name="11a9e91c-f6a6-0ce4-9884-a7ddf0ccbc89" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Globalization.CultureInfo)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Speech.Recognition.RecognizerInfo)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="df288d3e-d64e-ecab-6463-846a948bdcc8" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="bcc2d19a-6125-145a-17de-ed9bb76afb47" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize">
      <topicdata name="EmulateRecognize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="0a08f4d0-6312-40b4-e16b-66d1add70d10" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync">
      <topicdata name="EmulateRecognizeAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="a6fd0562-b706-c428-141a-7e2b0a33e13b" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Recognize">
      <topicdata name="Recognize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="Recognize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize(System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="58e3a4e6-cd4e-18f2-e5c6-df273149e5c7" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync">
      <topicdata name="RecognizeAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="RecognizeAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync(System.Speech.Recognition.RecognizeMode)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="ef6e6e0f-0a74-d8a8-2424-2af3cb108349" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate">
      <topicdata name="RequestRecognizerUpdate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="4c105851-bd80-b823-57b6-85f1a306711a" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting">
      <topicdata name="UpdateRecognizerSetting" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionEngine" />
      <apidata name="UpdateRecognizerSetting" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.Int32)" />
        <element api="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="a0aba1ea-052c-ba93-bbd9-515ce4b21774" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="a94c11e4-0853-0617-b2b1-9158d09925d1" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Globalization.CultureInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <parameters>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="f970ba07-6294-e084-1b63-77a03b6c8c38" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.Speech.Recognition.RecognizerInfo)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <parameters>
        <parameter name="recognizerInfo">
          <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="8446d4ce-7b6b-e0bf-78fb-0226d7c70828" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.#ctor" />
      <parameters>
        <parameter name="recognizerId">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="3540daa2-8386-a644-0e38-42e0d444e881" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioFormat">
      <topicdata group="api" />
      <apidata name="AudioFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioFormat" />
      <returns>
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="bcf39d64-54e0-a08c-7716-b1fb177869e2" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevel">
      <topicdata group="api" />
      <apidata name="AudioLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="23081f29-fe2e-1943-cf2c-3b874460a059" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioLevelUpdated">
      <topicdata group="api" />
      <apidata name="AudioLevelUpdated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AudioLevelUpdated" />
      <remover name="remove_AudioLevelUpdated" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="27c9f664-389b-722e-b164-cd20a39252a8" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="9080393d-54ab-8573-9699-ea9a78452af0" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioSignalProblemOccurred">
      <topicdata group="api" />
      <apidata name="AudioSignalProblemOccurred" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AudioSignalProblemOccurred" />
      <remover name="remove_AudioSignalProblemOccurred" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="c138f148-0616-31ca-8bfd-2d5d71d066dd" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.AudioState">
      <topicdata group="api" />
      <apidata name="AudioState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioState" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="f70055c7-6d2a-bb59-fefe-9ccd5b5b4874" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.AudioStateChanged">
      <topicdata group="api" />
      <apidata name="AudioStateChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AudioStateChanged" />
      <remover name="remove_AudioStateChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="e241dec1-9510-3f83-f33a-cc23a73cad89" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.BabbleTimeout">
      <topicdata group="api" />
      <apidata name="BabbleTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BabbleTimeout" />
      <setter name="set_BabbleTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="76b1ace1-b667-7dfc-a7a5-d84ba3d045e3" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="3b77c11d-92e8-8c1f-d59a-7ea98ef481e2" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="4db7a2cc-f1e0-aa52-e3ba-ed7fcd72930a" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wordUnits">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="c4866f6f-de1e-ef57-3d76-61c281302ccf" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="ba2b0806-19a9-6c4e-5166-044076bbccb8" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize(System.String,System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="0d4a5cf1-3018-b1ba-ca05-3684b6937a2d" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wordUnits">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="dc77bccb-fa72-c5d8-ab3b-43a8bebbef5d" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="ef23d2e9-f83d-de0f-d649-84553a01d56d" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="ef19f3bb-9976-5047-8165-38ec9c6bbb60" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_EmulateRecognizeCompleted" />
      <remover name="remove_EmulateRecognizeCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="d375ae41-1e34-ac3a-ed94-effc893be3f5" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeout">
      <topicdata group="api" />
      <apidata name="EndSilenceTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndSilenceTimeout" />
      <setter name="set_EndSilenceTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ea3bed46-8dd0-29e7-e2ae-b06486292c34" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.EndSilenceTimeoutAmbiguous">
      <topicdata group="api" />
      <apidata name="EndSilenceTimeoutAmbiguous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndSilenceTimeoutAmbiguous" />
      <setter name="set_EndSilenceTimeoutAmbiguous" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1ccadf4c-2d9e-a53d-becb-de488f279834" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.Grammars">
      <topicdata group="api" />
      <apidata name="Grammars" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Grammars" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.Grammar" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="388cae0e-e89a-a99f-e2e7-a976f35cc010" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.InitialSilenceTimeout">
      <topicdata group="api" />
      <apidata name="InitialSilenceTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InitialSilenceTimeout" />
      <setter name="set_InitialSilenceTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Advanced" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="b82fc806-bc24-4a76-f46f-58aaa80505be" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.InstalledRecognizers">
      <topicdata group="api" />
      <apidata name="InstalledRecognizers" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="1b8e65cf-f05a-ad7e-b353-7867750d4b1e" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammar(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="LoadGrammar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="7506bc06-a7a6-a763-9991-0e4b4b047d1f" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarAsync(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="LoadGrammarAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="c2244520-323f-e855-7fe2-40b5926938c0" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.LoadGrammarCompleted">
      <topicdata group="api" />
      <apidata name="LoadGrammarCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LoadGrammarCompleted" />
      <remover name="remove_LoadGrammarCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="9f9a1767-2205-aaef-9105-d0861e18dbb0" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.MaxAlternates">
      <topicdata group="api" />
      <apidata name="MaxAlternates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxAlternates" />
      <setter name="set_MaxAlternates" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="dd524eb0-fa84-d9af-5004-c365d0c86aa7" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.QueryRecognizerSetting(System.String)">
      <topicdata group="api" />
      <apidata name="QueryRecognizerSetting" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settingName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="9c15be2a-b727-396c-a30d-3792ef2295e0" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize">
      <topicdata group="api" />
      <apidata name="Recognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Recognize" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="3ceb720d-0001-b80d-8c84-df7f6498dca1" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.Recognize(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="Recognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.Recognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="initialSilenceTimeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="2ea98909-02bf-fc8f-8204-53aa75a13aea" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync">
      <topicdata group="api" />
      <apidata name="RecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="af6c5595-13a2-c374-62df-18574a3a5f59" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync(System.Speech.Recognition.RecognizeMode)">
      <topicdata group="api" />
      <apidata name="RecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mode">
          <type api="T:System.Speech.Recognition.RecognizeMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="e45deb64-a754-88a6-8572-5d2766fb1889" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncCancel">
      <topicdata group="api" />
      <apidata name="RecognizeAsyncCancel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="57d8147d-f865-5d90-1980-7ef20977ca9b" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeAsyncStop">
      <topicdata group="api" />
      <apidata name="RecognizeAsyncStop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="d7022063-e519-5da0-a2ff-651228cad673" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted">
      <topicdata group="api" />
      <apidata name="RecognizeCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RecognizeCompleted" />
      <remover name="remove_RecognizeCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.RecognizeCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="ef0abb16-fb34-d9cf-a362-eab84e51d584" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerAudioPosition">
      <topicdata group="api" />
      <apidata name="RecognizerAudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecognizerAudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="b49675a9-8cde-4c13-3b53-d7ed079318fe" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerInfo">
      <topicdata group="api" />
      <apidata name="RecognizerInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecognizerInfo" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="fd12e1ec-24f5-71d0-cf4a-52f91f5cee55" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.RecognizerUpdateReached">
      <topicdata group="api" />
      <apidata name="RecognizerUpdateReached" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RecognizerUpdateReached" />
      <remover name="remove_RecognizerUpdateReached" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="959d2bb1-0055-3876-49b7-6b7b29b47c79" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="21944506-e779-fe8b-3ba4-db202412fb16" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object)">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="0e080667-9cd0-8395-f15d-96c1b3418fe9" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="audioPositionAheadToRaiseUpdate">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="6c550efa-c2fe-688a-8bb0-b1b85cdf87e6" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToAudioStream(System.IO.Stream,System.Speech.AudioFormat.SpeechAudioFormatInfo)">
      <topicdata group="api" />
      <apidata name="SetInputToAudioStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioSource">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="audioFormat">
          <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="efd03122-c6fd-5e68-32e7-297ca6a9d1ee" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToDefaultAudioDevice">
      <topicdata group="api" />
      <apidata name="SetInputToDefaultAudioDevice" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="da19d936-345d-c043-3935-4ab9c1e58e3e" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull">
      <topicdata group="api" />
      <apidata name="SetInputToNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="cbaf7395-94c2-ad7e-27dd-d50f50d26cae" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveFile(System.String)">
      <topicdata group="api" />
      <apidata name="SetInputToWaveFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="37a23997-2047-6b2f-840b-bf3f556693e4" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToWaveStream(System.IO.Stream)">
      <topicdata group="api" />
      <apidata name="SetInputToWaveStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="audioSource">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="ab928ce4-75de-1e6d-9c04-d6aabdce49c5" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechDetected">
      <topicdata group="api" />
      <apidata name="SpeechDetected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeechDetected" />
      <remover name="remove_SpeechDetected" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="6e7356c2-3522-5524-c68f-82c8c0d158d8" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized">
      <topicdata group="api" />
      <apidata name="SpeechHypothesized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeechHypothesized" />
      <remover name="remove_SpeechHypothesized" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="f94686ed-74e4-b9be-edf0-f398dd6cbc15" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected">
      <topicdata group="api" />
      <apidata name="SpeechRecognitionRejected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeechRecognitionRejected" />
      <remover name="remove_SpeechRecognitionRejected" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="8e331b92-991a-36ab-36f7-44e564349c7d" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized">
      <topicdata group="api" />
      <apidata name="SpeechRecognized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeechRecognized" />
      <remover name="remove_SpeechRecognized" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="18b067cd-548b-e90b-1a81-837bda81e557" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadAllGrammars">
      <topicdata group="api" />
      <apidata name="UnloadAllGrammars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="4e0b8a03-3b77-117c-e51e-437c7859ce54" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.UnloadGrammar(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="UnloadGrammar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="dc14badc-43cb-6789-e92b-727f5034d17c" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="UpdateRecognizerSetting" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settingName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="updatedValue">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="d8a69335-763b-b9f9-aa8d-9fcf6acdb7ca" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="UpdateRecognizerSetting" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="settingName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="updatedValue">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionEngine" ref="true" />
      </containers>
      <file name="ff3b0f6a-bd7e-ef60-291f-1ebabc191bbe" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
      <apidata name="SpeechRecognitionRejectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.RecognitionEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="e3edb53b-a0b3-94ea-630b-a791f32d3699" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs">
      <topicdata name="SpeechRecognitionRejectedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
      <apidata name="SpeechRecognitionRejectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
      </containers>
      <file name="7526932e-eaa6-270a-00c4-ed4137ab171b" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs">
      <topicdata name="SpeechRecognitionRejectedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
      <apidata name="SpeechRecognitionRejectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
      </containers>
      <file name="6058d88d-5144-76d0-9922-57fee8daa286" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs">
      <topicdata name="SpeechRecognitionRejectedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
      <apidata name="SpeechRecognitionRejectedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
      </containers>
      <file name="0569f42f-721c-1351-5f16-9773b79ba6e0" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechRecognizedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
      <apidata name="SpeechRecognizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Speech.Recognition.RecognitionEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="9d815474-5466-a39a-8c0a-2ff3772f0bea" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechRecognizedEventArgs">
      <topicdata name="SpeechRecognizedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
      <apidata name="SpeechRecognizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
      </containers>
      <file name="53f36dd2-95f7-9f65-d660-f1bfc8b89fa9" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SpeechRecognizedEventArgs">
      <topicdata name="SpeechRecognizedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
      <apidata name="SpeechRecognizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
      </containers>
      <file name="4adf369a-68ae-7994-0bc3-3c1925b24855" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SpeechRecognizedEventArgs">
      <topicdata name="SpeechRecognizedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
      <apidata name="SpeechRecognizedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:System.Speech.Recognition.RecognitionEventArgs.Result" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
      </containers>
      <file name="b78dd9b7-0622-4a72-0c3c-74db0ab2c64a" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechRecognizer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="SpeechRecognizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.SpeechRecognizer.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="8e7c4386-e0e4-481d-5cb1-f9a723b616b6" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechRecognizer">
      <topicdata name="SpeechRecognizer" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="SpeechRecognizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.SpeechRecognizer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.#ctor" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioFormat" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioLevel" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioLevelUpdated" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioPosition" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioSignalProblemOccurred" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioState" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioStateChanged" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.Dispose">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.Enabled" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.Grammars" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammarAsync(System.Speech.Recognition.Grammar)" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.LoadGrammarCompleted" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.MaxAlternates" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.PauseRecognizerOnRecognition" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.RecognizerAudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.RecognizerUpdateReached" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
        </element>
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechDetected" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.State" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.StateChanged" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.UnloadAllGrammars" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.UnloadGrammar(System.Speech.Recognition.Grammar)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" />
      </containers>
      <file name="97f51d26-1239-81fd-e0cf-4792b8eec1c7" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SpeechRecognizer">
      <topicdata name="SpeechRecognizer" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="SpeechRecognizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.SpeechRecognizer.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.Dispose">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose(System.Boolean)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammar(System.Speech.Recognition.Grammar)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammarAsync(System.Speech.Recognition.Grammar)" />
        <element api="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate">
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object)" />
          <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
        </element>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.UnloadAllGrammars" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.UnloadGrammar(System.Speech.Recognition.Grammar)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" />
      </containers>
      <file name="bea7020e-dc9c-1686-2bdb-a761acb85b8a" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.SpeechRecognizer">
      <topicdata name="SpeechRecognizer" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="SpeechRecognizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.SpeechRecognizer.#ctor" />
      <elements>
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioFormat" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioLevel" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.AudioState" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.Enabled" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.Grammars" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.MaxAlternates" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.PauseRecognizerOnRecognition" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.RecognizerAudioPosition" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo" />
        <element api="P:System.Speech.Recognition.SpeechRecognizer.State" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" />
      </containers>
      <file name="2a8c6e1d-1d95-913b-4a39-7807386c686e" />
    </api>
    <api id="Events.T:System.Speech.Recognition.SpeechRecognizer">
      <topicdata name="SpeechRecognizer" group="list" subgroup="Events" typeTopicId="T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="SpeechRecognizer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Speech.Recognition.SpeechRecognizer.#ctor" />
      <elements>
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioLevelUpdated" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioSignalProblemOccurred" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.AudioStateChanged" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.LoadGrammarCompleted" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.RecognizerUpdateReached" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechDetected" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized" />
        <element api="E:System.Speech.Recognition.SpeechRecognizer.StateChanged" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" />
      </containers>
      <file name="6177a250-974c-9382-d66f-7f034e587ab4" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognizer.Dispose">
      <topicdata name="Dispose" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="af8ff750-dfd8-f620-b83f-d3f120a43763" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize">
      <topicdata name="EmulateRecognize" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String,System.Globalization.CompareOptions)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="4ba032b2-226e-418b-2c89-e61d33baebde" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync">
      <topicdata name="EmulateRecognizeAsync" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="6422e011-c9b3-5a74-f6e0-2740352ff190" />
    </api>
    <api id="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate">
      <topicdata name="RequestRecognizerUpdate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechRecognizer" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object)" />
        <element api="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object,System.TimeSpan)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="ab3607b1-4867-c832-6618-fe16ec38f5c5" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="4b9aef9a-2e88-6f8a-6c2b-03d1ce613277" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.AudioFormat">
      <topicdata group="api" />
      <apidata name="AudioFormat" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioFormat" />
      <returns>
        <type api="T:System.Speech.AudioFormat.SpeechAudioFormatInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="e5b6e22c-099f-b769-007d-ddd6ddf6d102" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.AudioLevel">
      <topicdata group="api" />
      <apidata name="AudioLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioLevel" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="1faa89c7-d6ed-f294-a157-ff0fc5565d81" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.AudioLevelUpdated">
      <topicdata group="api" />
      <apidata name="AudioLevelUpdated" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AudioLevelUpdated" />
      <remover name="remove_AudioLevelUpdated" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioLevelUpdatedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="61f3307e-72be-f171-33f7-80b12467f4d6" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.AudioPosition">
      <topicdata group="api" />
      <apidata name="AudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="c1b9f9bb-663c-2d18-1aa3-bfbc97e5803c" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.AudioSignalProblemOccurred">
      <topicdata group="api" />
      <apidata name="AudioSignalProblemOccurred" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AudioSignalProblemOccurred" />
      <remover name="remove_AudioSignalProblemOccurred" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioSignalProblemOccurredEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="41050aed-75c6-fbbf-ae7c-733e85f56826" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.AudioState">
      <topicdata group="api" />
      <apidata name="AudioState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AudioState" />
      <returns>
        <type api="T:System.Speech.Recognition.AudioState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="6243bd13-0c9a-6c66-f15f-64690d4254bb" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.AudioStateChanged">
      <topicdata group="api" />
      <apidata name="AudioStateChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AudioStateChanged" />
      <remover name="remove_AudioStateChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.AudioStateChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="a11c86e2-a509-6c88-50bf-566cd5d89bc6" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.Dispose" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="d9f92b65-f353-8fb9-bdd3-276c80253c41" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.Dispose(System.Boolean)">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.Speech.Recognition.SpeechRecognizer.Dispose" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="3ee2788e-9425-7944-2926-2721d4dabeb3" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wordUnits">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="e8afc50b-8550-8087-d152-c4852af482fb" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="12345743-0b8f-4939-ec2a-fd60ea7bc1b2" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize(System.String,System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognize" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="69588aa9-1f6e-c3f7-6e73-8615cde0864b" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.Speech.Recognition.RecognizedWordUnit[],System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wordUnits">
          <arrayOf rank="1">
            <type api="T:System.Speech.Recognition.RecognizedWordUnit" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="dc794b1a-b165-2387-b0a4-3bfe63743309" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="655e99ef-e9a4-0aef-2e12-6cf5a99b49e8" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync(System.String,System.Globalization.CompareOptions)">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="compareOptions">
          <type api="T:System.Globalization.CompareOptions" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="8a50a7a2-42c7-22f6-ff3a-fb38090b327a" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted">
      <topicdata group="api" />
      <apidata name="EmulateRecognizeCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_EmulateRecognizeCompleted" />
      <remover name="remove_EmulateRecognizeCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="8e10e4f7-2d35-41bc-e923-3c0e4409286d" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.Enabled">
      <topicdata group="api" />
      <apidata name="Enabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Enabled" />
      <setter name="set_Enabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="d3b76993-3092-c867-8d91-337efa3ead5b" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.Grammars">
      <topicdata group="api" />
      <apidata name="Grammars" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Grammars" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.Grammar" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="7a22aa44-172c-3b8e-f490-e4649f543b23" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammar(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="LoadGrammar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="32e66f26-698d-b21a-bedb-a1ae332683eb" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.LoadGrammarAsync(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="LoadGrammarAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="1a7b4cda-5f7a-c248-6239-8f7e8433edf6" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.LoadGrammarCompleted">
      <topicdata group="api" />
      <apidata name="LoadGrammarCompleted" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LoadGrammarCompleted" />
      <remover name="remove_LoadGrammarCompleted" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.LoadGrammarCompletedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="3ea8f4a5-9a10-c7b5-0114-f04f6b280dce" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.MaxAlternates">
      <topicdata group="api" />
      <apidata name="MaxAlternates" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxAlternates" />
      <setter name="set_MaxAlternates" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="7b1e602c-79e2-fd88-cbb0-f314a7f8c36f" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.PauseRecognizerOnRecognition">
      <topicdata group="api" />
      <apidata name="PauseRecognizerOnRecognition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PauseRecognizerOnRecognition" />
      <setter name="set_PauseRecognizerOnRecognition" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="5136b93d-46c4-3414-8d02-6bdd0b1a5679" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.RecognizerAudioPosition">
      <topicdata group="api" />
      <apidata name="RecognizerAudioPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecognizerAudioPosition" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="575958e9-473f-f51a-d5a5-c0760d8428c3" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.RecognizerInfo">
      <topicdata group="api" />
      <apidata name="RecognizerInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecognizerInfo" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="ae9b4ac8-9694-e328-7a53-133b38bb4a40" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.RecognizerUpdateReached">
      <topicdata group="api" />
      <apidata name="RecognizerUpdateReached" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RecognizerUpdateReached" />
      <remover name="remove_RecognizerUpdateReached" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.RecognizerUpdateReachedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="737d012d-8eda-005f-62aa-9f40d58adb90" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="072b56de-755a-c0ba-13b1-bce139bdcf60" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object)">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="19f552cb-2eb4-d46e-6aae-c7a321783443" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate(System.Object,System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="RequestRecognizerUpdate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Speech.Recognition.SpeechRecognizer.RequestRecognizerUpdate" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="userToken">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="audioPositionAheadToRaiseUpdate">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="86511516-0a51-7425-62f5-00cf57a9ad51" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.SpeechDetected">
      <topicdata group="api" />
      <apidata name="SpeechDetected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeechDetected" />
      <remover name="remove_SpeechDetected" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechDetectedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="c214eac9-f017-161c-8dd5-b2395c575f0b" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized">
      <topicdata group="api" />
      <apidata name="SpeechHypothesized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeechHypothesized" />
      <remover name="remove_SpeechHypothesized" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="54b3dda3-e083-85d9-e341-a05ae4ac5392" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected">
      <topicdata group="api" />
      <apidata name="SpeechRecognitionRejected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeechRecognitionRejected" />
      <remover name="remove_SpeechRecognitionRejected" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="b1c1c65c-0c3e-2d76-fd4a-77f4a399ba8c" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized">
      <topicdata group="api" />
      <apidata name="SpeechRecognized" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_SpeechRecognized" />
      <remover name="remove_SpeechRecognized" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.SpeechRecognizedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="57017234-7628-1c7f-b60f-c36e52dd508c" />
    </api>
    <api id="P:System.Speech.Recognition.SpeechRecognizer.State">
      <topicdata group="api" />
      <apidata name="State" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_State" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="8fdf88be-05f5-1e8e-30a1-bc5c576e0a4a" />
    </api>
    <api id="E:System.Speech.Recognition.SpeechRecognizer.StateChanged">
      <topicdata group="api" />
      <apidata name="StateChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_StateChanged" />
      <remover name="remove_StateChanged" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Speech.Recognition.StateChangedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Speech.Recognition.StateChangedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="88add954-314c-5e07-4496-8474c5a1b85a" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.UnloadAllGrammars">
      <topicdata group="api" />
      <apidata name="UnloadAllGrammars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="b25bb2bd-065d-5be4-48f7-303062cfa330" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechRecognizer.UnloadGrammar(System.Speech.Recognition.Grammar)">
      <topicdata group="api" />
      <apidata name="UnloadGrammar" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="grammar">
          <type api="T:System.Speech.Recognition.Grammar" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechRecognizer" ref="true" />
      </containers>
      <file name="942d2231-48d8-e2fb-b0d4-32ab62acf504" />
    </api>
    <api id="T:System.Speech.Recognition.SpeechUI">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.SpeechUI" />
      <apidata name="SpeechUI" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="0bd988df-c479-5042-0f72-6ec82278dbaa" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.SpeechUI">
      <topicdata name="SpeechUI" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.SpeechUI" />
      <apidata name="SpeechUI" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechUI" />
      </containers>
      <file name="fcc1ab89-d281-8c7f-97eb-ccf5afe45c4a" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.SpeechUI">
      <topicdata name="SpeechUI" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.SpeechUI" />
      <apidata name="SpeechUI" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechUI" />
      </containers>
      <file name="8000ac6d-3ac2-aedf-838b-56fef0ef5e42" />
    </api>
    <api id="M:System.Speech.Recognition.SpeechUI.SendTextFeedback(System.Speech.Recognition.RecognitionResult,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="SendTextFeedback" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <type api="T:System.Speech.Recognition.RecognitionResult" ref="true" />
        </parameter>
        <parameter name="feedback">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isSuccessfulAction">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SpeechUI" ref="true" />
      </containers>
      <file name="c912027b-17e2-ec68-5647-b279f0679e83" />
    </api>
    <api id="T:System.Speech.Recognition.StateChangedEventArgs">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Speech.Recognition.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="b7b2ec33-12c8-0a9e-0eec-459a8b351780" />
    </api>
    <api id="AllMembers.T:System.Speech.Recognition.StateChangedEventArgs">
      <topicdata name="StateChangedEventArgs" group="list" subgroup="members" typeTopicId="T:System.Speech.Recognition.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Speech.Recognition.StateChangedEventArgs.RecognizerState" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.StateChangedEventArgs" />
      </containers>
      <file name="b3ab6e2a-4461-0677-e244-dd55ec086439" />
    </api>
    <api id="Methods.T:System.Speech.Recognition.StateChangedEventArgs">
      <topicdata name="StateChangedEventArgs" group="list" subgroup="Methods" typeTopicId="T:System.Speech.Recognition.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.StateChangedEventArgs" />
      </containers>
      <file name="9e5027da-3f54-b682-e9e7-67d711133b60" />
    </api>
    <api id="Properties.T:System.Speech.Recognition.StateChangedEventArgs">
      <topicdata name="StateChangedEventArgs" group="list" subgroup="Properties" typeTopicId="T:System.Speech.Recognition.StateChangedEventArgs" />
      <apidata name="StateChangedEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Speech.Recognition.StateChangedEventArgs.RecognizerState" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.StateChangedEventArgs" />
      </containers>
      <file name="c5cfed1b-3118-ed89-5b47-149988836c8a" />
    </api>
    <api id="P:System.Speech.Recognition.StateChangedEventArgs.RecognizerState">
      <topicdata group="api" />
      <apidata name="RecognizerState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RecognizerState" />
      <returns>
        <type api="T:System.Speech.Recognition.RecognizerState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.StateChangedEventArgs" ref="true" />
      </containers>
      <file name="f9218da7-1b1c-c2de-a28a-939dbb68f9e1" />
    </api>
    <api id="T:System.Speech.Recognition.SubsetMatchingMode">
      <topicdata group="api" />
      <apidata name="SubsetMatchingMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Speech.Recognition.SubsetMatchingMode.Subsequence" />
        <element api="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubset" />
        <element api="F:System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired" />
        <element api="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired" />
      </elements>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Speech.Recognition" />
      </containers>
      <file name="b83af7df-9da9-3262-499a-ae67242ad359" />
    </api>
    <api id="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubset">
      <topicdata group="api" notopic="" />
      <apidata name="OrderedSubset" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </containers>
      <file name="a3f8a9a1-f121-ce14-3fa2-4050ee84d6d9" />
    </api>
    <api id="F:System.Speech.Recognition.SubsetMatchingMode.OrderedSubsetContentRequired">
      <topicdata group="api" notopic="" />
      <apidata name="OrderedSubsetContentRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </containers>
      <file name="5ea74315-5cbb-a531-8db7-b55d9f4cb859" />
    </api>
    <api id="F:System.Speech.Recognition.SubsetMatchingMode.Subsequence">
      <topicdata group="api" notopic="" />
      <apidata name="Subsequence" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </containers>
      <file name="d90ec999-881e-401e-b1d4-11ce4129881f" />
    </api>
    <api id="F:System.Speech.Recognition.SubsetMatchingMode.SubsequenceContentRequired">
      <topicdata group="api" notopic="" />
      <apidata name="SubsequenceContentRequired" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Speech" module="System.Speech" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.Speech.Recognition" />
        <type api="T:System.Speech.Recognition.SubsetMatchingMode" ref="false" />
      </containers>
      <file name="0378a955-d216-9f61-9b8c-107717754871" />
    </api>
  </apis>
</reflection>