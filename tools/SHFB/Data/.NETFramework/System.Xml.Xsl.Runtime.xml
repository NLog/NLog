<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.Data.SqlXml">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.SqlXml.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.SqlXml.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.Data.SqlXml.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.Xml.Xsl.Runtime">
      <topicdata group="api" />
      <apidata name="System.Xml.Xsl.Runtime" group="namespace" />
      <elements>
        <element api="T:System.Xml.Xsl.Runtime.ContentIterator" />
        <element api="T:System.Xml.Xsl.Runtime.ElementContentIterator" />
        <element api="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" />
        <element api="T:System.Xml.Xsl.Runtime.AttributeIterator" />
        <element api="T:System.Xml.Xsl.Runtime.NamespaceIterator" />
        <element api="T:System.Xml.Xsl.Runtime.AttributeContentIterator" />
        <element api="T:System.Xml.Xsl.Runtime.ContentMergeIterator" />
        <element api="T:System.Xml.Xsl.Runtime.DodSequenceMerge" />
        <element api="T:System.Xml.Xsl.Runtime.SetIteratorResult" />
        <element api="T:System.Xml.Xsl.Runtime.UnionIterator" />
        <element api="T:System.Xml.Xsl.Runtime.IntersectIterator" />
        <element api="T:System.Xml.Xsl.Runtime.DifferenceIterator" />
        <element api="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" />
        <element api="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" />
        <element api="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" />
        <element api="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" />
        <element api="T:System.Xml.Xsl.Runtime.StringConcat" />
        <element api="T:System.Xml.Xsl.Runtime.DescendantIterator" />
        <element api="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" />
        <element api="T:System.Xml.Xsl.Runtime.ParentIterator" />
        <element api="T:System.Xml.Xsl.Runtime.AncestorIterator" />
        <element api="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" />
        <element api="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" />
        <element api="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" />
        <element api="T:System.Xml.Xsl.Runtime.PrecedingIterator" />
        <element api="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" />
        <element api="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" />
        <element api="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" />
        <element api="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />
        <element api="T:System.Xml.Xsl.Runtime.Int32Aggregator" />
        <element api="T:System.Xml.Xsl.Runtime.Int64Aggregator" />
        <element api="T:System.Xml.Xsl.Runtime.DecimalAggregator" />
        <element api="T:System.Xml.Xsl.Runtime.DoubleAggregator" />
        <element api="T:System.Xml.Xsl.Runtime.XmlCollation" />
        <element api="T:System.Xml.Xsl.Runtime.XmlILIndex" />
        <element api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" />
        <element api="T:System.Xml.Xsl.Runtime.IteratorResult" />
        <element api="T:System.Xml.Xsl.Runtime.IdIterator" />
        <element api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />
        <element api="T:System.Xml.Xsl.Runtime.XmlQueryContext" />
        <element api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
        <element api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
        <element api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
        <element api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
        <element api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
        <element api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" />
        <element api="T:System.Xml.Xsl.Runtime.XsltConvert" />
        <element api="T:System.Xml.Xsl.Runtime.XsltFunctions" />
        <element api="T:System.Xml.Xsl.Runtime.XsltLibrary" />
      </elements>
      <file name="6f441c27-1c94-716f-0061-6451693c7a90" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" />
      <apidata name="AncestorDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="fc31bb5d-5fc5-0350-9e6c-55e3b8caa1b0" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator">
      <topicdata name="AncestorDocOrderIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" />
      <apidata name="AncestorDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)" />
        <element api="P:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" />
      </containers>
      <file name="643f2310-854f-5192-08b2-0d11042ccba6" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator">
      <topicdata name="AncestorDocOrderIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" />
      <apidata name="AncestorDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)" />
        <element api="M:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" />
      </containers>
      <file name="bec320f3-6af0-7ca8-bc2f-8e00fa4f0b14" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator">
      <topicdata name="AncestorDocOrderIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" />
      <apidata name="AncestorDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" />
      </containers>
      <file name="d104a008-cdb5-d799-f73d-e669ad2c5ca1" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
        <parameter name="orSelf">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" ref="false" />
      </containers>
      <file name="df3e65b7-a96e-9530-5572-040b1e3addfa" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" ref="false" />
      </containers>
      <file name="5dd7b7ec-be9f-4995-6fcd-2d737a205383" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.AncestorDocOrderIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorDocOrderIterator" ref="false" />
      </containers>
      <file name="f6c77ee4-cbac-425f-aaa7-c949a2c1d604" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.AncestorIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.AncestorIterator" />
      <apidata name="AncestorIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="80863289-db04-882f-c4ad-47b0d37e9f56" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.AncestorIterator">
      <topicdata name="AncestorIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.AncestorIterator" />
      <apidata name="AncestorIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.AncestorIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)" />
        <element api="P:System.Xml.Xsl.Runtime.AncestorIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.AncestorIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorIterator" />
      </containers>
      <file name="dfda8a01-5c75-d627-b407-a5510782f77b" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.AncestorIterator">
      <topicdata name="AncestorIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.AncestorIterator" />
      <apidata name="AncestorIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.AncestorIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)" />
        <element api="M:System.Xml.Xsl.Runtime.AncestorIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorIterator" />
      </containers>
      <file name="d4cf5580-cacc-83cd-1920-ff48fc153a8c" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.AncestorIterator">
      <topicdata name="AncestorIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.AncestorIterator" />
      <apidata name="AncestorIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.AncestorIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorIterator" />
      </containers>
      <file name="a132e8bb-af74-4132-66ad-b690e36678d6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.AncestorIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
        <parameter name="orSelf">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorIterator" ref="false" />
      </containers>
      <file name="1aaedbf7-775b-7c38-9130-a6186969b642" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.AncestorIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorIterator" ref="false" />
      </containers>
      <file name="0ec1cb07-d407-f634-92a6-5eafc333cfe2" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.AncestorIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AncestorIterator" ref="false" />
      </containers>
      <file name="0e54fa4d-9dd0-be27-ab3e-66ad2d57b9e9" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.AttributeContentIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.AttributeContentIterator" />
      <apidata name="AttributeContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="8b03703c-514a-acc7-1e33-6de01b3de58a" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.AttributeContentIterator">
      <topicdata name="AttributeContentIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.AttributeContentIterator" />
      <apidata name="AttributeContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.AttributeContentIterator.Create(System.Xml.XPath.XPathNavigator)" />
        <element api="P:System.Xml.Xsl.Runtime.AttributeContentIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.AttributeContentIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeContentIterator" />
      </containers>
      <file name="4a0c3060-c4a6-5e87-7f1b-1bfa80ad696d" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.AttributeContentIterator">
      <topicdata name="AttributeContentIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.AttributeContentIterator" />
      <apidata name="AttributeContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.AttributeContentIterator.Create(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.AttributeContentIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeContentIterator" />
      </containers>
      <file name="859397af-7893-a17e-c876-36b4746caaec" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.AttributeContentIterator">
      <topicdata name="AttributeContentIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.AttributeContentIterator" />
      <apidata name="AttributeContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.AttributeContentIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeContentIterator" />
      </containers>
      <file name="33538a6c-c6b5-bf57-2acb-fcd5832f2df2" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.AttributeContentIterator.Create(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeContentIterator" ref="false" />
      </containers>
      <file name="3975da63-15db-2cbf-89fa-9bfa9214ec0c" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.AttributeContentIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeContentIterator" ref="false" />
      </containers>
      <file name="47a55a74-9818-1cdc-66a6-b3f97a7e02a9" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.AttributeContentIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeContentIterator" ref="false" />
      </containers>
      <file name="bf84eb49-d87a-a1e2-3b1e-bf5a8ce1bc9d" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.AttributeIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.AttributeIterator" />
      <apidata name="AttributeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="8824afa5-e120-c8df-bee6-8fa51c50a0c1" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.AttributeIterator">
      <topicdata name="AttributeIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.AttributeIterator" />
      <apidata name="AttributeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.AttributeIterator.Create(System.Xml.XPath.XPathNavigator)" />
        <element api="P:System.Xml.Xsl.Runtime.AttributeIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.AttributeIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeIterator" />
      </containers>
      <file name="6c32f478-ad66-af29-cf39-0d2a57d145b6" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.AttributeIterator">
      <topicdata name="AttributeIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.AttributeIterator" />
      <apidata name="AttributeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.AttributeIterator.Create(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.AttributeIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeIterator" />
      </containers>
      <file name="428c2ad8-3bac-231e-a36c-3a28223f105a" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.AttributeIterator">
      <topicdata name="AttributeIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.AttributeIterator" />
      <apidata name="AttributeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.AttributeIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeIterator" />
      </containers>
      <file name="c540ecd1-1916-82e1-ab76-5127fb59b0b8" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.AttributeIterator.Create(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeIterator" ref="false" />
      </containers>
      <file name="c6590b06-ad1f-56c9-b345-8ac50e7a233a" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.AttributeIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeIterator" ref="false" />
      </containers>
      <file name="2bb6aef4-02fe-93e3-db21-78c2e582e5b6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.AttributeIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.AttributeIterator" ref="false" />
      </containers>
      <file name="a65b2d67-a03d-e27d-d7c9-406a2000ecd3" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.ContentIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.ContentIterator" />
      <apidata name="ContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="13de23e8-fd5e-fbd3-3038-dd3d59c3351c" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.ContentIterator">
      <topicdata name="ContentIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.ContentIterator" />
      <apidata name="ContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.ContentIterator.Create(System.Xml.XPath.XPathNavigator)" />
        <element api="P:System.Xml.Xsl.Runtime.ContentIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.ContentIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentIterator" />
      </containers>
      <file name="e42c7d40-c2ce-b181-9882-6a9571b26d40" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.ContentIterator">
      <topicdata name="ContentIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.ContentIterator" />
      <apidata name="ContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.ContentIterator.Create(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.ContentIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentIterator" />
      </containers>
      <file name="7ea7d62d-9a3a-2152-75c1-bdf23ea82b68" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.ContentIterator">
      <topicdata name="ContentIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.ContentIterator" />
      <apidata name="ContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.ContentIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentIterator" />
      </containers>
      <file name="eeeddf6e-aabc-205c-3644-91bc136d8909" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.ContentIterator.Create(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentIterator" ref="false" />
      </containers>
      <file name="06b0ca0d-0e3e-7dac-e101-bc11e20b324c" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.ContentIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentIterator" ref="false" />
      </containers>
      <file name="ddb99d8c-9e08-d394-3d7f-d1b9920a23ec" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.ContentIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentIterator" ref="false" />
      </containers>
      <file name="6d1410ad-71dc-3ceb-97ba-cb19036f9e6c" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.ContentMergeIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.ContentMergeIterator" />
      <apidata name="ContentMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6dc1efea-ba0b-dfef-6cc1-abd4f727af68" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.ContentMergeIterator">
      <topicdata name="ContentMergeIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.ContentMergeIterator" />
      <apidata name="ContentMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.ContentMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.ContentMergeIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.ContentMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentMergeIterator" />
      </containers>
      <file name="cff19d33-1d2d-cddc-b935-bab28cc1b907" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.ContentMergeIterator">
      <topicdata name="ContentMergeIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.ContentMergeIterator" />
      <apidata name="ContentMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.ContentMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.ContentMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentMergeIterator" />
      </containers>
      <file name="cb920f58-78e3-2b2b-eed3-fe2f315defa5" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.ContentMergeIterator">
      <topicdata name="ContentMergeIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.ContentMergeIterator" />
      <apidata name="ContentMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.ContentMergeIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentMergeIterator" />
      </containers>
      <file name="d56f9fda-2f61-9529-aa1d-3fb7d451d5ce" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.ContentMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentMergeIterator" ref="false" />
      </containers>
      <file name="fcd7ef9c-e64e-1870-b3e8-e073ea09e682" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.ContentMergeIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentMergeIterator" ref="false" />
      </containers>
      <file name="3fee1a2f-1f67-e047-f019-ce6d5de05408" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.ContentMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ContentMergeIterator" ref="false" />
      </containers>
      <file name="c7d67637-f346-fc8f-f7fe-2b5161e85ac4" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.DecimalAggregator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.DecimalAggregator" />
      <apidata name="DecimalAggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="137a09b9-699a-28c4-1070-fc372ccd7f6f" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.DecimalAggregator">
      <topicdata name="DecimalAggregator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.DecimalAggregator" />
      <apidata name="DecimalAggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DecimalAggregator.Average(System.Decimal)" />
        <element api="P:System.Xml.Xsl.Runtime.DecimalAggregator.AverageResult" />
        <element api="M:System.Xml.Xsl.Runtime.DecimalAggregator.Create" />
        <element api="P:System.Xml.Xsl.Runtime.DecimalAggregator.IsEmpty" />
        <element api="M:System.Xml.Xsl.Runtime.DecimalAggregator.Maximum(System.Decimal)" />
        <element api="P:System.Xml.Xsl.Runtime.DecimalAggregator.MaximumResult" />
        <element api="M:System.Xml.Xsl.Runtime.DecimalAggregator.Minimum(System.Decimal)" />
        <element api="P:System.Xml.Xsl.Runtime.DecimalAggregator.MinimumResult" />
        <element api="M:System.Xml.Xsl.Runtime.DecimalAggregator.Sum(System.Decimal)" />
        <element api="P:System.Xml.Xsl.Runtime.DecimalAggregator.SumResult" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" />
      </containers>
      <file name="f0c4cfb5-1be8-e7cd-9723-382a198a5880" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.DecimalAggregator">
      <topicdata name="DecimalAggregator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.DecimalAggregator" />
      <apidata name="DecimalAggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DecimalAggregator.Average(System.Decimal)" />
        <element api="M:System.Xml.Xsl.Runtime.DecimalAggregator.Create" />
        <element api="M:System.Xml.Xsl.Runtime.DecimalAggregator.Maximum(System.Decimal)" />
        <element api="M:System.Xml.Xsl.Runtime.DecimalAggregator.Minimum(System.Decimal)" />
        <element api="M:System.Xml.Xsl.Runtime.DecimalAggregator.Sum(System.Decimal)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" />
      </containers>
      <file name="463e64bc-4650-0146-153c-b1ef9279fa5a" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.DecimalAggregator">
      <topicdata name="DecimalAggregator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.DecimalAggregator" />
      <apidata name="DecimalAggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.DecimalAggregator.AverageResult" />
        <element api="P:System.Xml.Xsl.Runtime.DecimalAggregator.IsEmpty" />
        <element api="P:System.Xml.Xsl.Runtime.DecimalAggregator.MaximumResult" />
        <element api="P:System.Xml.Xsl.Runtime.DecimalAggregator.MinimumResult" />
        <element api="P:System.Xml.Xsl.Runtime.DecimalAggregator.SumResult" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" />
      </containers>
      <file name="6a922b74-ad3d-692f-c0a0-31a8620249b6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DecimalAggregator.Average(System.Decimal)">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" ref="false" />
      </containers>
      <file name="7a0d9a22-72d4-17f8-06d1-cd0060bffd93" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DecimalAggregator.AverageResult">
      <topicdata group="api" />
      <apidata name="AverageResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AverageResult" />
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" ref="false" />
      </containers>
      <file name="0ded1184-595d-4e95-003e-c715ad0b84de" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DecimalAggregator.Create">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" ref="false" />
      </containers>
      <file name="76c87348-4a21-d7b7-6c17-09065a70ba61" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DecimalAggregator.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" ref="false" />
      </containers>
      <file name="f726ecc1-f4a1-f834-2cbe-a9d20b1b3026" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DecimalAggregator.Maximum(System.Decimal)">
      <topicdata group="api" />
      <apidata name="Maximum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" ref="false" />
      </containers>
      <file name="1b25b55b-31b1-94b3-23e7-f6f6bfb669f5" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DecimalAggregator.MaximumResult">
      <topicdata group="api" />
      <apidata name="MaximumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaximumResult" />
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" ref="false" />
      </containers>
      <file name="6230f689-3734-19ef-5c58-aed603ff71be" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DecimalAggregator.Minimum(System.Decimal)">
      <topicdata group="api" />
      <apidata name="Minimum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" ref="false" />
      </containers>
      <file name="a0dcd8c9-4d35-6684-d20d-58171891c23a" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DecimalAggregator.MinimumResult">
      <topicdata group="api" />
      <apidata name="MinimumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinimumResult" />
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" ref="false" />
      </containers>
      <file name="135abd0d-1ace-df2c-6c78-f2bd6dc77550" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DecimalAggregator.Sum(System.Decimal)">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" ref="false" />
      </containers>
      <file name="a4f162b9-72b4-ba21-3b10-dd750681c4c5" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DecimalAggregator.SumResult">
      <topicdata group="api" />
      <apidata name="SumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SumResult" />
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DecimalAggregator" ref="false" />
      </containers>
      <file name="d42b1826-16f3-c53b-9e35-2ff5a08d7bd5" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.DescendantIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.DescendantIterator" />
      <apidata name="DescendantIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="41d41d00-2aef-1349-2179-735cf54b9fde" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.DescendantIterator">
      <topicdata name="DescendantIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.DescendantIterator" />
      <apidata name="DescendantIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DescendantIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)" />
        <element api="P:System.Xml.Xsl.Runtime.DescendantIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.DescendantIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantIterator" />
      </containers>
      <file name="f8a5be13-2ccc-e0a9-e24b-70c7196f414b" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.DescendantIterator">
      <topicdata name="DescendantIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.DescendantIterator" />
      <apidata name="DescendantIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DescendantIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)" />
        <element api="M:System.Xml.Xsl.Runtime.DescendantIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantIterator" />
      </containers>
      <file name="badc34f7-1ac5-1b3a-d596-10ec3d937bb7" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.DescendantIterator">
      <topicdata name="DescendantIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.DescendantIterator" />
      <apidata name="DescendantIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.DescendantIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantIterator" />
      </containers>
      <file name="05efbde3-c05b-2d8a-6232-7dc41a32cc82" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DescendantIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
        <parameter name="orSelf">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantIterator" ref="false" />
      </containers>
      <file name="352abfb9-38a9-983a-739e-8adc52e18e64" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DescendantIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantIterator" ref="false" />
      </containers>
      <file name="3937c612-a6ae-8b23-c3fc-9bcfa8696419" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DescendantIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantIterator" ref="false" />
      </containers>
      <file name="c8bec6bc-ab04-98ae-cd48-9cf4ec053b8f" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.DescendantMergeIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.DescendantMergeIterator" />
      <apidata name="DescendantMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="704d5763-c987-3659-1e1d-8e8ec6f3a108" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.DescendantMergeIterator">
      <topicdata name="DescendantMergeIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" />
      <apidata name="DescendantMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DescendantMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)" />
        <element api="P:System.Xml.Xsl.Runtime.DescendantMergeIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.DescendantMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" />
      </containers>
      <file name="ff31fa49-55b7-689e-f3d0-0ef2fc2b39ac" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.DescendantMergeIterator">
      <topicdata name="DescendantMergeIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" />
      <apidata name="DescendantMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DescendantMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)" />
        <element api="M:System.Xml.Xsl.Runtime.DescendantMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" />
      </containers>
      <file name="3d78dba1-da0a-6d10-edef-8d94a45edee1" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.DescendantMergeIterator">
      <topicdata name="DescendantMergeIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" />
      <apidata name="DescendantMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.DescendantMergeIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" />
      </containers>
      <file name="5307bac0-167b-6abd-ff61-d8987a66cad9" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DescendantMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Boolean)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
        <parameter name="orSelf">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" ref="false" />
      </containers>
      <file name="560d8e2a-ba9b-194f-92c9-c493f32fb830" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DescendantMergeIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" ref="false" />
      </containers>
      <file name="1151bf4a-0559-6147-11f5-50eb325ef336" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DescendantMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DescendantMergeIterator" ref="false" />
      </containers>
      <file name="3dd1c548-a67b-e838-9ef9-b1fc62639f1f" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.DifferenceIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.DifferenceIterator" />
      <apidata name="DifferenceIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="54bcd516-daf8-8ec3-8002-0af41aeabdaf" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.DifferenceIterator">
      <topicdata name="DifferenceIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.DifferenceIterator" />
      <apidata name="DifferenceIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DifferenceIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="P:System.Xml.Xsl.Runtime.DifferenceIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.DifferenceIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DifferenceIterator" />
      </containers>
      <file name="d4bd6363-2c58-8727-9e7a-4f6574def48a" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.DifferenceIterator">
      <topicdata name="DifferenceIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.DifferenceIterator" />
      <apidata name="DifferenceIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DifferenceIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.DifferenceIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DifferenceIterator" />
      </containers>
      <file name="752e2f87-c146-dbeb-7c83-7e3a2844b339" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.DifferenceIterator">
      <topicdata name="DifferenceIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.DifferenceIterator" />
      <apidata name="DifferenceIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.DifferenceIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DifferenceIterator" />
      </containers>
      <file name="e810e15b-de72-1228-f154-07fc04a86256" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DifferenceIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DifferenceIterator" ref="false" />
      </containers>
      <file name="0990badd-7af9-93df-38cc-acf0eb1c1bff" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DifferenceIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DifferenceIterator" ref="false" />
      </containers>
      <file name="80e55539-2a43-c816-9144-6a6d96188a8c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DifferenceIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nestedNavigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DifferenceIterator" ref="false" />
      </containers>
      <file name="a7b66f98-b21b-7dbc-4676-73caec11e9a0" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.DodSequenceMerge">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.DodSequenceMerge" />
      <apidata name="DodSequenceMerge" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4459f749-9cb1-811f-19fd-3ca9fb50f465" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.DodSequenceMerge">
      <topicdata name="DodSequenceMerge" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.DodSequenceMerge" />
      <apidata name="DodSequenceMerge" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DodSequenceMerge.AddSequence(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})" />
        <element api="M:System.Xml.Xsl.Runtime.DodSequenceMerge.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.DodSequenceMerge.MergeSequences" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DodSequenceMerge" />
      </containers>
      <file name="820c1149-8e9b-b1e8-cf55-5ce0cd06ca67" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.DodSequenceMerge">
      <topicdata name="DodSequenceMerge" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.DodSequenceMerge" />
      <apidata name="DodSequenceMerge" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DodSequenceMerge.AddSequence(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})" />
        <element api="M:System.Xml.Xsl.Runtime.DodSequenceMerge.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.DodSequenceMerge.MergeSequences" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DodSequenceMerge" />
      </containers>
      <file name="67ae1a88-fce4-523d-1db0-7e6d30c8f120" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DodSequenceMerge.AddSequence(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
      <topicdata group="api" />
      <apidata name="AddSequence" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sequence">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DodSequenceMerge" ref="false" />
      </containers>
      <file name="f3ad333b-b881-a268-0bf9-afbde23cffd6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DodSequenceMerge.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DodSequenceMerge" ref="false" />
      </containers>
      <file name="ac47f9bc-111b-5ec8-ac97-720c3b7b2877" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DodSequenceMerge.MergeSequences">
      <topicdata group="api" />
      <apidata name="MergeSequences" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DodSequenceMerge" ref="false" />
      </containers>
      <file name="ffb7e315-dbae-58c9-df45-f3c8de8a3fcd" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.DoubleAggregator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.DoubleAggregator" />
      <apidata name="DoubleAggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a068bdde-fe15-1975-18d1-e7cfe52c50ad" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.DoubleAggregator">
      <topicdata name="DoubleAggregator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.DoubleAggregator" />
      <apidata name="DoubleAggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DoubleAggregator.Average(System.Double)" />
        <element api="P:System.Xml.Xsl.Runtime.DoubleAggregator.AverageResult" />
        <element api="M:System.Xml.Xsl.Runtime.DoubleAggregator.Create" />
        <element api="P:System.Xml.Xsl.Runtime.DoubleAggregator.IsEmpty" />
        <element api="M:System.Xml.Xsl.Runtime.DoubleAggregator.Maximum(System.Double)" />
        <element api="P:System.Xml.Xsl.Runtime.DoubleAggregator.MaximumResult" />
        <element api="M:System.Xml.Xsl.Runtime.DoubleAggregator.Minimum(System.Double)" />
        <element api="P:System.Xml.Xsl.Runtime.DoubleAggregator.MinimumResult" />
        <element api="M:System.Xml.Xsl.Runtime.DoubleAggregator.Sum(System.Double)" />
        <element api="P:System.Xml.Xsl.Runtime.DoubleAggregator.SumResult" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" />
      </containers>
      <file name="b3a65be0-fa88-dfdc-3bc9-8a89e226f5ae" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.DoubleAggregator">
      <topicdata name="DoubleAggregator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.DoubleAggregator" />
      <apidata name="DoubleAggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.DoubleAggregator.Average(System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.DoubleAggregator.Create" />
        <element api="M:System.Xml.Xsl.Runtime.DoubleAggregator.Maximum(System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.DoubleAggregator.Minimum(System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.DoubleAggregator.Sum(System.Double)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" />
      </containers>
      <file name="3a82b463-1111-5af4-1c5e-2bbd6f6e6483" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.DoubleAggregator">
      <topicdata name="DoubleAggregator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.DoubleAggregator" />
      <apidata name="DoubleAggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.DoubleAggregator.AverageResult" />
        <element api="P:System.Xml.Xsl.Runtime.DoubleAggregator.IsEmpty" />
        <element api="P:System.Xml.Xsl.Runtime.DoubleAggregator.MaximumResult" />
        <element api="P:System.Xml.Xsl.Runtime.DoubleAggregator.MinimumResult" />
        <element api="P:System.Xml.Xsl.Runtime.DoubleAggregator.SumResult" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" />
      </containers>
      <file name="862a48c2-208d-5464-3e19-e2f257de7b28" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DoubleAggregator.Average(System.Double)">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" ref="false" />
      </containers>
      <file name="d1fe6b9a-451d-4511-42b7-1580b33b511c" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DoubleAggregator.AverageResult">
      <topicdata group="api" />
      <apidata name="AverageResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AverageResult" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" ref="false" />
      </containers>
      <file name="41b45862-d1c5-35c0-fd8a-9e4520e757ce" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DoubleAggregator.Create">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" ref="false" />
      </containers>
      <file name="54b5b83b-2f31-a7f3-9030-efb0d3208d58" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DoubleAggregator.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" ref="false" />
      </containers>
      <file name="bfd57439-8577-6997-dad3-5b2d9a561116" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DoubleAggregator.Maximum(System.Double)">
      <topicdata group="api" />
      <apidata name="Maximum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" ref="false" />
      </containers>
      <file name="6a36708a-8a9d-1394-d7f6-eac9569b3628" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DoubleAggregator.MaximumResult">
      <topicdata group="api" />
      <apidata name="MaximumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaximumResult" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" ref="false" />
      </containers>
      <file name="2da0e0ef-2a5e-7126-b6a3-83803b9c5b40" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DoubleAggregator.Minimum(System.Double)">
      <topicdata group="api" />
      <apidata name="Minimum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" ref="false" />
      </containers>
      <file name="ca85f03e-c7b4-a110-be3b-80ef6ba637f4" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DoubleAggregator.MinimumResult">
      <topicdata group="api" />
      <apidata name="MinimumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinimumResult" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" ref="false" />
      </containers>
      <file name="864132e4-eecb-d52e-a127-3de783fe1366" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.DoubleAggregator.Sum(System.Double)">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" ref="false" />
      </containers>
      <file name="d1a62722-15e1-9e51-b4d1-8abf8e228858" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.DoubleAggregator.SumResult">
      <topicdata group="api" />
      <apidata name="SumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SumResult" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.DoubleAggregator" ref="false" />
      </containers>
      <file name="534e7a2d-f937-6e37-3035-c70c23e2fd0f" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.ElementContentIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.ElementContentIterator" />
      <apidata name="ElementContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3787bd4b-9ef1-bba8-881b-a40481839411" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.ElementContentIterator">
      <topicdata name="ElementContentIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.ElementContentIterator" />
      <apidata name="ElementContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.ElementContentIterator.Create(System.Xml.XPath.XPathNavigator,System.String,System.String)" />
        <element api="P:System.Xml.Xsl.Runtime.ElementContentIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.ElementContentIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ElementContentIterator" />
      </containers>
      <file name="543511a6-bb66-2d4f-ff7f-96d7a6ff9910" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.ElementContentIterator">
      <topicdata name="ElementContentIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.ElementContentIterator" />
      <apidata name="ElementContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.ElementContentIterator.Create(System.Xml.XPath.XPathNavigator,System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.ElementContentIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ElementContentIterator" />
      </containers>
      <file name="faaee474-b862-cf03-2bc9-5a89a3a4f881" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.ElementContentIterator">
      <topicdata name="ElementContentIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.ElementContentIterator" />
      <apidata name="ElementContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.ElementContentIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ElementContentIterator" />
      </containers>
      <file name="a5cfbc7e-3c48-9e70-c2bc-6da0eb61d128" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.ElementContentIterator.Create(System.Xml.XPath.XPathNavigator,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ElementContentIterator" ref="false" />
      </containers>
      <file name="a46133ba-24e3-5bad-c661-d1d5cf078598" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.ElementContentIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ElementContentIterator" ref="false" />
      </containers>
      <file name="780f2fc2-d241-c87b-a51a-2f8497d215b4" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.ElementContentIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ElementContentIterator" ref="false" />
      </containers>
      <file name="54db0f60-c18c-2d94-695e-dfff1a7f2a5c" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" />
      <apidata name="FollowingSiblingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="03c418f9-3f26-e9e1-bddf-8e56496bf7fb" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.FollowingSiblingIterator">
      <topicdata name="FollowingSiblingIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" />
      <apidata name="FollowingSiblingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.FollowingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.FollowingSiblingIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.FollowingSiblingIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" />
      </containers>
      <file name="bf8dfb9f-4624-18e7-88a5-b726525d79b6" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.FollowingSiblingIterator">
      <topicdata name="FollowingSiblingIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" />
      <apidata name="FollowingSiblingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.FollowingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.FollowingSiblingIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" />
      </containers>
      <file name="79fdf100-79e4-55c6-e0d3-67b02833fe30" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.FollowingSiblingIterator">
      <topicdata name="FollowingSiblingIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" />
      <apidata name="FollowingSiblingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.FollowingSiblingIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" />
      </containers>
      <file name="18f60080-16b9-1c1c-8a8b-fee9ae45493a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.FollowingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" ref="false" />
      </containers>
      <file name="d61448a5-cd75-fa35-3a99-6a2ca66bd923" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.FollowingSiblingIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" ref="false" />
      </containers>
      <file name="28730620-4710-2d2a-52fd-7f5840f60da0" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.FollowingSiblingIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingIterator" ref="false" />
      </containers>
      <file name="242dd488-5533-8c57-8a32-47906dc1534f" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" />
      <apidata name="FollowingSiblingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="a5799c27-a3ad-9c90-5a98-ade5cbf076bd" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator">
      <topicdata name="FollowingSiblingMergeIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" />
      <apidata name="FollowingSiblingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" />
      </containers>
      <file name="d0488446-6a00-f554-9252-0fc0d57fc56b" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator">
      <topicdata name="FollowingSiblingMergeIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" />
      <apidata name="FollowingSiblingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" />
      </containers>
      <file name="c8edc743-7f11-a696-ca0b-af5bfe56755d" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator">
      <topicdata name="FollowingSiblingMergeIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" />
      <apidata name="FollowingSiblingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" />
      </containers>
      <file name="1e6977dd-43b2-1afc-6970-94c2684b85e0" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" ref="false" />
      </containers>
      <file name="1a87305b-e91b-399a-3128-35022635be1a" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" ref="false" />
      </containers>
      <file name="958d69f5-2290-238c-b739-2a666bd35da2" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.FollowingSiblingMergeIterator" ref="false" />
      </containers>
      <file name="19dcf020-4a20-8c9c-49a4-dd06ce2d7cf8" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.IdIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.IdIterator" />
      <apidata name="IdIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e8ae0590-986f-a977-a96f-a460584d1070" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.IdIterator">
      <topicdata name="IdIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.IdIterator" />
      <apidata name="IdIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.IdIterator.Create(System.Xml.XPath.XPathNavigator,System.String)" />
        <element api="P:System.Xml.Xsl.Runtime.IdIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.IdIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IdIterator" />
      </containers>
      <file name="c5b508c0-dda5-9c2b-fbcf-1a926f228675" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.IdIterator">
      <topicdata name="IdIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.IdIterator" />
      <apidata name="IdIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.IdIterator.Create(System.Xml.XPath.XPathNavigator,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.IdIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IdIterator" />
      </containers>
      <file name="ca42f7c3-3025-b9e2-db1b-7a86681ca31b" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.IdIterator">
      <topicdata name="IdIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.IdIterator" />
      <apidata name="IdIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.IdIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IdIterator" />
      </containers>
      <file name="abb622f5-da03-4d66-57be-a66fa476c52c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.IdIterator.Create(System.Xml.XPath.XPathNavigator,System.String)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IdIterator" ref="false" />
      </containers>
      <file name="e46bbf16-c2bf-a846-14c4-363f9712af65" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.IdIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IdIterator" ref="false" />
      </containers>
      <file name="b0a4fb79-13d0-5eac-d913-2637235de877" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.IdIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IdIterator" ref="false" />
      </containers>
      <file name="7d79c825-9e3f-1c9c-6d18-cb120ce1c436" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.Int32Aggregator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.Int32Aggregator" />
      <apidata name="Int32Aggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="5f9398bb-4e17-0da8-7681-79b1b8c636f8" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.Int32Aggregator">
      <topicdata name="Int32Aggregator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.Int32Aggregator" />
      <apidata name="Int32Aggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.Int32Aggregator.Average(System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.Int32Aggregator.AverageResult" />
        <element api="M:System.Xml.Xsl.Runtime.Int32Aggregator.Create" />
        <element api="P:System.Xml.Xsl.Runtime.Int32Aggregator.IsEmpty" />
        <element api="M:System.Xml.Xsl.Runtime.Int32Aggregator.Maximum(System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.Int32Aggregator.MaximumResult" />
        <element api="M:System.Xml.Xsl.Runtime.Int32Aggregator.Minimum(System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.Int32Aggregator.MinimumResult" />
        <element api="M:System.Xml.Xsl.Runtime.Int32Aggregator.Sum(System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.Int32Aggregator.SumResult" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" />
      </containers>
      <file name="c58e8379-a53b-8be8-0cfd-cb830fdf9e16" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.Int32Aggregator">
      <topicdata name="Int32Aggregator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.Int32Aggregator" />
      <apidata name="Int32Aggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.Int32Aggregator.Average(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.Int32Aggregator.Create" />
        <element api="M:System.Xml.Xsl.Runtime.Int32Aggregator.Maximum(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.Int32Aggregator.Minimum(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.Int32Aggregator.Sum(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" />
      </containers>
      <file name="e85a58c6-bc6a-9730-b2ff-1d1652f46a3e" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.Int32Aggregator">
      <topicdata name="Int32Aggregator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.Int32Aggregator" />
      <apidata name="Int32Aggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.Int32Aggregator.AverageResult" />
        <element api="P:System.Xml.Xsl.Runtime.Int32Aggregator.IsEmpty" />
        <element api="P:System.Xml.Xsl.Runtime.Int32Aggregator.MaximumResult" />
        <element api="P:System.Xml.Xsl.Runtime.Int32Aggregator.MinimumResult" />
        <element api="P:System.Xml.Xsl.Runtime.Int32Aggregator.SumResult" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" />
      </containers>
      <file name="7e8b6d5a-02e2-c9a3-c33c-0e516c75ca29" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.Int32Aggregator.Average(System.Int32)">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" ref="false" />
      </containers>
      <file name="5414ad6b-fe46-4079-7d26-de4068d507c6" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.Int32Aggregator.AverageResult">
      <topicdata group="api" />
      <apidata name="AverageResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AverageResult" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" ref="false" />
      </containers>
      <file name="ee8f3ec1-ec35-6671-1206-6e0ee11d20c8" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.Int32Aggregator.Create">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" ref="false" />
      </containers>
      <file name="4ea25157-deca-6d2d-1f2d-d6c26ce95069" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.Int32Aggregator.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" ref="false" />
      </containers>
      <file name="1788c9f9-429d-7df2-f10d-4147c0cdf2ed" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.Int32Aggregator.Maximum(System.Int32)">
      <topicdata group="api" />
      <apidata name="Maximum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" ref="false" />
      </containers>
      <file name="983c3bb7-dcfa-27b8-80f2-8d621ea88955" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.Int32Aggregator.MaximumResult">
      <topicdata group="api" />
      <apidata name="MaximumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaximumResult" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" ref="false" />
      </containers>
      <file name="23bd897b-a08c-985f-964f-035162865819" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.Int32Aggregator.Minimum(System.Int32)">
      <topicdata group="api" />
      <apidata name="Minimum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" ref="false" />
      </containers>
      <file name="a174016b-9fc0-6408-88ab-32fe748808e1" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.Int32Aggregator.MinimumResult">
      <topicdata group="api" />
      <apidata name="MinimumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinimumResult" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" ref="false" />
      </containers>
      <file name="5c20715d-8e19-839e-c9fa-d3d02cbe4fda" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.Int32Aggregator.Sum(System.Int32)">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" ref="false" />
      </containers>
      <file name="5a192a94-7c1c-6efd-4379-f8ac3c727e58" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.Int32Aggregator.SumResult">
      <topicdata group="api" />
      <apidata name="SumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SumResult" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int32Aggregator" ref="false" />
      </containers>
      <file name="c72c9b9e-bc29-b41a-664b-8d46e8a6dd1b" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.Int64Aggregator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.Int64Aggregator" />
      <apidata name="Int64Aggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="631540a5-5dde-a26b-39de-58ae4ef46067" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.Int64Aggregator">
      <topicdata name="Int64Aggregator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.Int64Aggregator" />
      <apidata name="Int64Aggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.Int64Aggregator.Average(System.Int64)" />
        <element api="P:System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult" />
        <element api="M:System.Xml.Xsl.Runtime.Int64Aggregator.Create" />
        <element api="P:System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty" />
        <element api="M:System.Xml.Xsl.Runtime.Int64Aggregator.Maximum(System.Int64)" />
        <element api="P:System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult" />
        <element api="M:System.Xml.Xsl.Runtime.Int64Aggregator.Minimum(System.Int64)" />
        <element api="P:System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult" />
        <element api="M:System.Xml.Xsl.Runtime.Int64Aggregator.Sum(System.Int64)" />
        <element api="P:System.Xml.Xsl.Runtime.Int64Aggregator.SumResult" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" />
      </containers>
      <file name="993be5f4-cf92-3c44-2181-341072edca7c" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.Int64Aggregator">
      <topicdata name="Int64Aggregator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.Int64Aggregator" />
      <apidata name="Int64Aggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.Int64Aggregator.Average(System.Int64)" />
        <element api="M:System.Xml.Xsl.Runtime.Int64Aggregator.Create" />
        <element api="M:System.Xml.Xsl.Runtime.Int64Aggregator.Maximum(System.Int64)" />
        <element api="M:System.Xml.Xsl.Runtime.Int64Aggregator.Minimum(System.Int64)" />
        <element api="M:System.Xml.Xsl.Runtime.Int64Aggregator.Sum(System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" />
      </containers>
      <file name="f5b11050-7e58-b4ee-75e0-f109be943afb" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.Int64Aggregator">
      <topicdata name="Int64Aggregator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.Int64Aggregator" />
      <apidata name="Int64Aggregator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult" />
        <element api="P:System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty" />
        <element api="P:System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult" />
        <element api="P:System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult" />
        <element api="P:System.Xml.Xsl.Runtime.Int64Aggregator.SumResult" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" />
      </containers>
      <file name="8af3cd77-6695-1f56-913d-d6cb834abfa6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.Int64Aggregator.Average(System.Int64)">
      <topicdata group="api" />
      <apidata name="Average" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" ref="false" />
      </containers>
      <file name="f3b5533e-26b8-8f82-f973-08d8bb208921" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult">
      <topicdata group="api" />
      <apidata name="AverageResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AverageResult" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" ref="false" />
      </containers>
      <file name="60a5b92a-1433-cbab-f383-74afbc5ffc25" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.Int64Aggregator.Create">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" ref="false" />
      </containers>
      <file name="9f78a998-b813-2f3d-213e-b59ab3cf1ba6" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty">
      <topicdata group="api" />
      <apidata name="IsEmpty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEmpty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" ref="false" />
      </containers>
      <file name="91bbea3e-0e39-b8a2-2fd3-26c73e2ad726" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.Int64Aggregator.Maximum(System.Int64)">
      <topicdata group="api" />
      <apidata name="Maximum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" ref="false" />
      </containers>
      <file name="4077f299-e069-725b-00c5-1d5d0747c6fe" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult">
      <topicdata group="api" />
      <apidata name="MaximumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MaximumResult" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" ref="false" />
      </containers>
      <file name="ab8c3609-7d94-7e53-0038-4dccf4385794" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.Int64Aggregator.Minimum(System.Int64)">
      <topicdata group="api" />
      <apidata name="Minimum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" ref="false" />
      </containers>
      <file name="586a1e62-f585-ad74-2535-06405eb545d3" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult">
      <topicdata group="api" />
      <apidata name="MinimumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinimumResult" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" ref="false" />
      </containers>
      <file name="e0f9693c-1530-b5b8-8bbd-b5f74359e880" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.Int64Aggregator.Sum(System.Int64)">
      <topicdata group="api" />
      <apidata name="Sum" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" ref="false" />
      </containers>
      <file name="feeed637-6de6-c14e-ce31-dd82537ff74d" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.Int64Aggregator.SumResult">
      <topicdata group="api" />
      <apidata name="SumResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SumResult" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.Int64Aggregator" ref="false" />
      </containers>
      <file name="ba3ed3e9-fbb7-9fb8-8ed6-a9854988bc4b" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.IntersectIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.IntersectIterator" />
      <apidata name="IntersectIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0f40fd6c-20b5-dd8c-a64b-0fc0b463c984" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.IntersectIterator">
      <topicdata name="IntersectIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.IntersectIterator" />
      <apidata name="IntersectIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.IntersectIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="P:System.Xml.Xsl.Runtime.IntersectIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.IntersectIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IntersectIterator" />
      </containers>
      <file name="790c2d8d-eafd-4079-28ad-8b70e94413f8" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.IntersectIterator">
      <topicdata name="IntersectIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.IntersectIterator" />
      <apidata name="IntersectIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.IntersectIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.IntersectIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IntersectIterator" />
      </containers>
      <file name="7b49683a-3561-bdfc-0968-6f81e4a890bb" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.IntersectIterator">
      <topicdata name="IntersectIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.IntersectIterator" />
      <apidata name="IntersectIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.IntersectIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IntersectIterator" />
      </containers>
      <file name="0eae3ae9-a778-e024-f41f-c16e1c421d57" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.IntersectIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IntersectIterator" ref="false" />
      </containers>
      <file name="8b3c460a-2f58-fcb7-8769-f70928216f90" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.IntersectIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IntersectIterator" ref="false" />
      </containers>
      <file name="19980cec-6dc9-2910-4856-9b072ccb7602" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.IntersectIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nestedNavigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IntersectIterator" ref="false" />
      </containers>
      <file name="6e992364-e858-e08e-c261-422e6e1f4c55" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.IteratorResult">
      <topicdata group="api" />
      <apidata name="IteratorResult" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Xml.Xsl.Runtime.IteratorResult.NoMoreNodes" />
        <element api="F:System.Xml.Xsl.Runtime.IteratorResult.NeedInputNode" />
        <element api="F:System.Xml.Xsl.Runtime.IteratorResult.HaveCurrentNode" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="2af91d11-1fea-0dbc-972f-aba4f4f7a49c" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.IteratorResult.HaveCurrentNode">
      <topicdata group="api" notopic="" />
      <apidata name="HaveCurrentNode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </containers>
      <file name="e7c99250-de62-4fae-aeaa-264049bf7b93" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.IteratorResult.NeedInputNode">
      <topicdata group="api" notopic="" />
      <apidata name="NeedInputNode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </containers>
      <file name="bf78efa8-8f45-5383-312a-4966f263178b" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.IteratorResult.NoMoreNodes">
      <topicdata group="api" notopic="" />
      <apidata name="NoMoreNodes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </containers>
      <file name="520dc535-048c-c3eb-49ae-bbbcac8118d0" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.NamespaceIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.NamespaceIterator" />
      <apidata name="NamespaceIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="713eabcd-6436-3e5e-5742-71b9010d21c8" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.NamespaceIterator">
      <topicdata name="NamespaceIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.NamespaceIterator" />
      <apidata name="NamespaceIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.NamespaceIterator.Create(System.Xml.XPath.XPathNavigator)" />
        <element api="P:System.Xml.Xsl.Runtime.NamespaceIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.NamespaceIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NamespaceIterator" />
      </containers>
      <file name="6f8b0ffb-173c-8839-d718-0c6c2281db19" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.NamespaceIterator">
      <topicdata name="NamespaceIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.NamespaceIterator" />
      <apidata name="NamespaceIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.NamespaceIterator.Create(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.NamespaceIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NamespaceIterator" />
      </containers>
      <file name="1889a486-7025-08f8-6df1-c6d45e7ac620" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.NamespaceIterator">
      <topicdata name="NamespaceIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.NamespaceIterator" />
      <apidata name="NamespaceIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.NamespaceIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NamespaceIterator" />
      </containers>
      <file name="9d438ba8-8f4f-6946-1f6b-d2927be0df2e" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.NamespaceIterator.Create(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NamespaceIterator" ref="false" />
      </containers>
      <file name="1d369308-c642-c615-8a4a-97e4343ea057" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.NamespaceIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NamespaceIterator" ref="false" />
      </containers>
      <file name="27a61302-36f7-183e-e572-171099769138" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.NamespaceIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NamespaceIterator" ref="false" />
      </containers>
      <file name="23238fa3-3681-d9d5-0e12-148ecc8d089c" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.NodeKindContentIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.NodeKindContentIterator" />
      <apidata name="NodeKindContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="0436b884-73a9-56f9-db73-d0d2db122fea" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.NodeKindContentIterator">
      <topicdata name="NodeKindContentIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" />
      <apidata name="NodeKindContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.NodeKindContentIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNodeType)" />
        <element api="P:System.Xml.Xsl.Runtime.NodeKindContentIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.NodeKindContentIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" />
      </containers>
      <file name="eb08aa31-c3df-6aab-bdda-75caa57f9994" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.NodeKindContentIterator">
      <topicdata name="NodeKindContentIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" />
      <apidata name="NodeKindContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.NodeKindContentIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNodeType)" />
        <element api="M:System.Xml.Xsl.Runtime.NodeKindContentIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" />
      </containers>
      <file name="c6bec90e-cbea-a79c-8287-b0ae73754192" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.NodeKindContentIterator">
      <topicdata name="NodeKindContentIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" />
      <apidata name="NodeKindContentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.NodeKindContentIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" />
      </containers>
      <file name="62fe1e77-eb17-54e7-079a-3342ae59f729" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.NodeKindContentIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNodeType)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="nodeType">
          <type api="T:System.Xml.XPath.XPathNodeType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" ref="false" />
      </containers>
      <file name="4ea0d64a-3854-2507-5779-684d055cd221" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.NodeKindContentIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" ref="false" />
      </containers>
      <file name="6c428179-c6ed-f8b2-308d-38a43fc5c27c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.NodeKindContentIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeKindContentIterator" ref="false" />
      </containers>
      <file name="421cdd0b-6b3f-a35c-10f3-2a370cf666fa" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.NodeRangeIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.NodeRangeIterator" />
      <apidata name="NodeRangeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="455b0f75-2054-f846-47f4-f9a6e76f2231" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.NodeRangeIterator">
      <topicdata name="NodeRangeIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />
      <apidata name="NodeRangeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.NodeRangeIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Xml.XPath.XPathNavigator)" />
        <element api="P:System.Xml.Xsl.Runtime.NodeRangeIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />
      </containers>
      <file name="dc2669f9-d4df-e0ac-e075-081726228294" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.NodeRangeIterator">
      <topicdata name="NodeRangeIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />
      <apidata name="NodeRangeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.NodeRangeIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />
      </containers>
      <file name="c6119f6b-2148-2f58-9aad-9903efe89084" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.NodeRangeIterator">
      <topicdata name="NodeRangeIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />
      <apidata name="NodeRangeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.NodeRangeIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeRangeIterator" />
      </containers>
      <file name="e254c785-0e24-545a-453d-97a4a9ff5ef8" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.NodeRangeIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter,System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="start">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
        <parameter name="end">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeRangeIterator" ref="false" />
      </containers>
      <file name="6d8d41f5-ecf8-8224-2884-4be0b86d95f2" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.NodeRangeIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeRangeIterator" ref="false" />
      </containers>
      <file name="80b0f8c8-f6a5-6e98-5b14-0788002916cb" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.NodeRangeIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.NodeRangeIterator" ref="false" />
      </containers>
      <file name="c6ed60a9-0943-c421-ce72-e02167d64ad6" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.ParentIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.ParentIterator" />
      <apidata name="ParentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="d8387ed5-64c2-f9e1-90c6-25ab177b514e" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.ParentIterator">
      <topicdata name="ParentIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.ParentIterator" />
      <apidata name="ParentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.ParentIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.ParentIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.ParentIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ParentIterator" />
      </containers>
      <file name="9cb06e32-ffb4-c10e-1684-dad96b3e6e18" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.ParentIterator">
      <topicdata name="ParentIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.ParentIterator" />
      <apidata name="ParentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.ParentIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.ParentIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ParentIterator" />
      </containers>
      <file name="e2e4027d-ff04-2016-75ec-a7bad8db213a" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.ParentIterator">
      <topicdata name="ParentIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.ParentIterator" />
      <apidata name="ParentIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.ParentIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ParentIterator" />
      </containers>
      <file name="68553301-c3a7-ffcd-5cb8-d55bddb32a24" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.ParentIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ParentIterator" ref="false" />
      </containers>
      <file name="52f7664f-bfd8-d3b5-6c2f-c06efc762877" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.ParentIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ParentIterator" ref="false" />
      </containers>
      <file name="08cc5844-5f18-acb9-183b-8c55d13779fb" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.ParentIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.ParentIterator" ref="false" />
      </containers>
      <file name="6febd6a0-b81d-2be9-66e6-b5129ce149a4" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.PrecedingIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.PrecedingIterator" />
      <apidata name="PrecedingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e78e511d-08a8-662a-b84d-f6afa94cdd53" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.PrecedingIterator">
      <topicdata name="PrecedingIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.PrecedingIterator" />
      <apidata name="PrecedingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.PrecedingIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingIterator" />
      </containers>
      <file name="7f48ba27-13de-7456-4e94-3e12e885e05a" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.PrecedingIterator">
      <topicdata name="PrecedingIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.PrecedingIterator" />
      <apidata name="PrecedingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingIterator" />
      </containers>
      <file name="41e605f4-4a05-3ad8-28e5-3d0abc5ba1f9" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.PrecedingIterator">
      <topicdata name="PrecedingIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.PrecedingIterator" />
      <apidata name="PrecedingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.PrecedingIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingIterator" />
      </containers>
      <file name="b1f6c273-b877-6668-8433-c584564d4ef5" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.PrecedingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingIterator" ref="false" />
      </containers>
      <file name="35ae9e71-68d0-e479-ccc1-eabc5cb88867" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.PrecedingIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingIterator" ref="false" />
      </containers>
      <file name="d976c3da-a859-3047-6027-b0a47ddfa40e" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.PrecedingIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingIterator" ref="false" />
      </containers>
      <file name="11276745-cfe2-76c8-8b67-63e2edc38fb3" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" />
      <apidata name="PrecedingSiblingDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="061905cd-24a2-0fee-e952-d18c965cfe50" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator">
      <topicdata name="PrecedingSiblingDocOrderIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" />
      <apidata name="PrecedingSiblingDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" />
      </containers>
      <file name="da61226e-3874-52d8-4225-e8f86d89c232" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator">
      <topicdata name="PrecedingSiblingDocOrderIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" />
      <apidata name="PrecedingSiblingDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" />
      </containers>
      <file name="2c0441ac-54ad-90f1-18b4-3d427ac6a444" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator">
      <topicdata name="PrecedingSiblingDocOrderIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" />
      <apidata name="PrecedingSiblingDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" />
      </containers>
      <file name="d1523489-e123-43b8-57f6-c5ebd6d0ba50" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" ref="false" />
      </containers>
      <file name="9299d235-d6e7-50d1-b3b3-99e8e8396fab" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" ref="false" />
      </containers>
      <file name="e7815ab8-8324-6bfb-2a11-79d24e8bba73" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingDocOrderIterator" ref="false" />
      </containers>
      <file name="feae64da-a994-e59c-8815-88ec3fafe9f0" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" />
      <apidata name="PrecedingSiblingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="784f2952-a6a1-e438-75f1-fdbd53a97e46" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator">
      <topicdata name="PrecedingSiblingIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" />
      <apidata name="PrecedingSiblingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" />
      </containers>
      <file name="b5ba35a2-a089-14d6-a0fc-3450e5a9169c" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator">
      <topicdata name="PrecedingSiblingIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" />
      <apidata name="PrecedingSiblingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" />
      </containers>
      <file name="3d82f5ca-2ae5-f02b-b1bc-f3b5c48ec59f" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator">
      <topicdata name="PrecedingSiblingIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" />
      <apidata name="PrecedingSiblingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" />
      </containers>
      <file name="abec659b-78e9-d53e-9325-922b0c1529e9" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" ref="false" />
      </containers>
      <file name="2ceb4d15-44a6-7c86-1fa9-f237d909a124" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" ref="false" />
      </containers>
      <file name="1c0467a3-d78a-6bdb-9b15-0783d3c98874" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.PrecedingSiblingIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.PrecedingSiblingIterator" ref="false" />
      </containers>
      <file name="ef9d3feb-56f5-a799-a16d-678d71129238" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.SetIteratorResult">
      <topicdata group="api" />
      <apidata name="SetIteratorResult" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:System.Xml.Xsl.Runtime.SetIteratorResult.NoMoreNodes" />
        <element api="F:System.Xml.Xsl.Runtime.SetIteratorResult.InitRightIterator" />
        <element api="F:System.Xml.Xsl.Runtime.SetIteratorResult.NeedLeftNode" />
        <element api="F:System.Xml.Xsl.Runtime.SetIteratorResult.NeedRightNode" />
        <element api="F:System.Xml.Xsl.Runtime.SetIteratorResult.HaveCurrentNode" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="648fd8ee-4c12-089d-de0a-2eb6d9f21095" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.SetIteratorResult.HaveCurrentNode">
      <topicdata group="api" notopic="" />
      <apidata name="HaveCurrentNode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </containers>
      <file name="9a58400d-c467-a13b-179e-3a6ad31cb8ed" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.SetIteratorResult.InitRightIterator">
      <topicdata group="api" notopic="" />
      <apidata name="InitRightIterator" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </containers>
      <file name="7b3c8cc3-5df5-503e-23d4-91766a31c77f" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.SetIteratorResult.NeedLeftNode">
      <topicdata group="api" notopic="" />
      <apidata name="NeedLeftNode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </containers>
      <file name="666bd4af-fd49-0cde-c9a2-da9a1fc68534" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.SetIteratorResult.NeedRightNode">
      <topicdata group="api" notopic="" />
      <apidata name="NeedRightNode" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </containers>
      <file name="80e32d69-3cc9-5fbf-8dd1-26671a8187eb" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.SetIteratorResult.NoMoreNodes">
      <topicdata group="api" notopic="" />
      <apidata name="NoMoreNodes" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </containers>
      <file name="ef72a168-3f70-aad9-500b-6776c863d693" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.StringConcat">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.StringConcat" />
      <apidata name="StringConcat" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="3d7ce790-c640-2ad5-cc6c-9b338d132008" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.StringConcat">
      <topicdata name="StringConcat" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.StringConcat" />
      <apidata name="StringConcat" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.StringConcat.Clear" />
        <element api="M:System.Xml.Xsl.Runtime.StringConcat.Concat(System.String)" />
        <element api="P:System.Xml.Xsl.Runtime.StringConcat.Delimiter" />
        <element api="M:System.Xml.Xsl.Runtime.StringConcat.GetResult" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.StringConcat" />
      </containers>
      <file name="21db1a5c-f374-3bac-b006-bbd1a80acd4c" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.StringConcat">
      <topicdata name="StringConcat" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.StringConcat" />
      <apidata name="StringConcat" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.StringConcat.Clear" />
        <element api="M:System.Xml.Xsl.Runtime.StringConcat.Concat(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.StringConcat.GetResult" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.StringConcat" />
      </containers>
      <file name="76b3b7a3-ea8c-949e-f7f3-47adea2aaff8" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.StringConcat">
      <topicdata name="StringConcat" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.StringConcat" />
      <apidata name="StringConcat" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.StringConcat.Delimiter" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.StringConcat" />
      </containers>
      <file name="76e5eba9-7657-36e9-45bd-f3a3f97e5603" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.StringConcat.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.StringConcat" ref="false" />
      </containers>
      <file name="2f2e8398-0151-2b88-3081-480a6d627aca" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.StringConcat.Concat(System.String)">
      <topicdata group="api" />
      <apidata name="Concat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.StringConcat" ref="false" />
      </containers>
      <file name="5293ef79-9dbb-b53e-a2da-7e07f5e54857" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.StringConcat.Delimiter">
      <topicdata group="api" />
      <apidata name="Delimiter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Delimiter" />
      <setter name="set_Delimiter" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.StringConcat" ref="false" />
      </containers>
      <file name="bdeae6fe-c39a-e3c0-3ab2-33e6e3f89f97" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.StringConcat.GetResult">
      <topicdata group="api" />
      <apidata name="GetResult" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.StringConcat" ref="false" />
      </containers>
      <file name="d543425f-bae8-e461-6ebd-b0475ef2fee6" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.UnionIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.UnionIterator" />
      <apidata name="UnionIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="77240e6d-22b4-d14b-afe9-cac6d8582cce" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.UnionIterator">
      <topicdata name="UnionIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.UnionIterator" />
      <apidata name="UnionIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.UnionIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="P:System.Xml.Xsl.Runtime.UnionIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.UnionIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.UnionIterator" />
      </containers>
      <file name="b81d46cc-d0f0-6877-6849-254c364717dc" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.UnionIterator">
      <topicdata name="UnionIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.UnionIterator" />
      <apidata name="UnionIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.UnionIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.UnionIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.UnionIterator" />
      </containers>
      <file name="5e658b84-6e8f-3f7b-44a3-dd9645bd3dd8" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.UnionIterator">
      <topicdata name="UnionIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.UnionIterator" />
      <apidata name="UnionIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.UnionIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.UnionIterator" />
      </containers>
      <file name="067e8436-6e58-2fa3-81ba-df045c0223bb" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.UnionIterator.Create(System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.UnionIterator" ref="false" />
      </containers>
      <file name="680e673d-8c29-e1d8-dc43-5048ec7bbf6d" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.UnionIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.UnionIterator" ref="false" />
      </containers>
      <file name="7e686ea1-48b0-63ab-08f5-6d91a1d7c335" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.UnionIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nestedNavigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.SetIteratorResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.UnionIterator" ref="false" />
      </containers>
      <file name="44044787-9e58-c691-5e1e-8041a0405306" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlCollation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlCollation" />
      <apidata name="XmlCollation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f01b717b-d55a-5108-a3e0-cbfc34d58371" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlCollation">
      <topicdata name="XmlCollation" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlCollation" />
      <apidata name="XmlCollation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlCollation.Equals(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlCollation.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlCollation" />
      </containers>
      <file name="46185b91-8e98-905a-9479-4f5bd845bb6f" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlCollation">
      <topicdata name="XmlCollation" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlCollation" />
      <apidata name="XmlCollation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlCollation.Equals(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlCollation.GetHashCode" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlCollation" />
      </containers>
      <file name="3815572d-1237-0a6e-47be-e66da7f67810" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlCollation.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
      </containers>
      <file name="5ec226c4-1791-cae8-a855-a3af286a3fd1" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlCollation.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
      </containers>
      <file name="7f243251-776f-667d-719c-06125dd73212" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlILIndex">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlILIndex" />
      <apidata name="XmlILIndex" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="cb5f8125-c592-48e5-0a3d-bb735502821d" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlILIndex">
      <topicdata name="XmlILIndex" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlILIndex" />
      <apidata name="XmlILIndex" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILIndex.Add(System.String,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILIndex.Lookup(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILIndex" />
      </containers>
      <file name="01829f71-7a71-6a50-80c5-7a579348baf8" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlILIndex">
      <topicdata name="XmlILIndex" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlILIndex" />
      <apidata name="XmlILIndex" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILIndex.Add(System.String,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILIndex.Lookup(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILIndex" />
      </containers>
      <file name="7809341d-6e88-f93f-d678-16f72da5ab12" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILIndex.Add(System.String,System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILIndex" ref="true" />
      </containers>
      <file name="aa104607-371b-dc78-5641-840d63b91d85" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILIndex.Lookup(System.String)">
      <topicdata group="api" />
      <apidata name="Lookup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="key">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILIndex" ref="true" />
      </containers>
      <file name="e216afcf-7e9c-0c1a-74b8-6175a2d10392" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlILStorageConverter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlILStorageConverter" />
      <apidata name="XmlILStorageConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f9b249b9-96be-7e96-c6f7-9b5f3279a631" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlILStorageConverter">
      <topicdata name="XmlILStorageConverter" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" />
      <apidata name="XmlILStorageConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.BooleanToAtomicValue(System.Boolean,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.BytesToAtomicValue(System.Byte[],System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DateTimeToAtomicValue(System.DateTime,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DecimalToAtomicValue(System.Decimal,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DoubleToAtomicValue(System.Double,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.Int32ToAtomicValue(System.Int32,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.Int64ToAtomicValue(System.Int64,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.ItemsToNavigators(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.NavigatorsToItems(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.SingleToAtomicValue(System.Single,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.StringToAtomicValue(System.String,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.TimeSpanToAtomicValue(System.TimeSpan,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.XmlQualifiedNameToAtomicValue(System.Xml.XmlQualifiedName,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" />
      </containers>
      <file name="2bed8c8e-10a7-9388-6b85-95bc7b11b954" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlILStorageConverter">
      <topicdata name="XmlILStorageConverter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" />
      <apidata name="XmlILStorageConverter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.BooleanToAtomicValue(System.Boolean,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.BytesToAtomicValue(System.Byte[],System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DateTimeToAtomicValue(System.DateTime,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DecimalToAtomicValue(System.Decimal,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DoubleToAtomicValue(System.Double,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.Int32ToAtomicValue(System.Int32,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.Int64ToAtomicValue(System.Int64,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.ItemsToNavigators(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.NavigatorsToItems(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.SingleToAtomicValue(System.Single,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.StringToAtomicValue(System.String,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.TimeSpanToAtomicValue(System.TimeSpan,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.XmlQualifiedNameToAtomicValue(System.Xml.XmlQualifiedName,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" />
      </containers>
      <file name="4c11e240-423d-1c5f-3234-494da6e01fd4" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.BooleanToAtomicValue(System.Boolean,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="BooleanToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="ce937cbd-28be-d5cb-cd13-44da7ec07532" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.BytesToAtomicValue(System.Byte[],System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="BytesToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="cff575ae-2b34-8b31-2aa0-c33c9d6127fc" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DateTimeToAtomicValue(System.DateTime,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="DateTimeToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="997ba493-00e5-798f-ca7b-01232a910bcf" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DecimalToAtomicValue(System.Decimal,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="DecimalToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="66837627-398e-b65c-e125-a96ad848a6a5" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.DoubleToAtomicValue(System.Double,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="DoubleToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="2d323a2b-f49e-08bd-26ce-f4ff4fe8b017" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.Int32ToAtomicValue(System.Int32,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="Int32ToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="be2d52f8-ff80-8c74-eb04-129c8ab8b6da" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.Int64ToAtomicValue(System.Int64,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="Int64ToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="e860edd2-9a86-acd8-c02b-5a4ed75f95a4" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.ItemsToNavigators(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="ItemsToNavigators" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listItems">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="d153bf3f-2456-539d-ad03-d1654d6bb740" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.NavigatorsToItems(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
      <topicdata group="api" />
      <apidata name="NavigatorsToItems" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listNavigators">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="39772a85-608d-1079-a4e8-3deb71b8cdef" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.SingleToAtomicValue(System.Single,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="SingleToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="c280d634-0e92-d924-34e4-dc3549b1bce8" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.StringToAtomicValue(System.String,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="StringToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="c7f11bfb-e9e6-e5da-77fb-af6bf497602b" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.TimeSpanToAtomicValue(System.TimeSpan,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="TimeSpanToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="0bb773fa-7e8f-a6f3-168d-ff17d98d26bb" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlILStorageConverter.XmlQualifiedNameToAtomicValue(System.Xml.XmlQualifiedName,System.Int32,System.Xml.Xsl.Runtime.XmlQueryRuntime)">
      <topicdata group="api" />
      <apidata name="XmlQualifiedNameToAtomicValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="runtime">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlAtomicValue" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlILStorageConverter" ref="true" />
      </containers>
      <file name="cc9b24f8-77e8-6d78-0d01-010c07ece807" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />
      <apidata name="XmlNavigatorFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6228694e-df4a-f391-5940-e1e1d4883e5f" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlNavigatorFilter">
      <topicdata name="XmlNavigatorFilter" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />
      <apidata name="XmlNavigatorFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.#ctor" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.IsFiltered(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToContent(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowing(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowingSibling(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToNextContent(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToPreviousSibling(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />
      </containers>
      <file name="048c1112-02fe-2dbf-3ceb-4738337f34ff" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlNavigatorFilter">
      <topicdata name="XmlNavigatorFilter" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />
      <apidata name="XmlNavigatorFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.IsFiltered(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToContent(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowing(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowingSibling(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToNextContent(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToPreviousSibling(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" />
      </containers>
      <file name="af1be497-7d15-9801-fe56-ca027f29bb56" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
      </containers>
      <file name="c072ca7d-a45c-7a58-90af-00181b2d7447" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.IsFiltered(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="IsFiltered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
      </containers>
      <file name="e0c227d4-e245-bf70-66c4-802b8a289743" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToContent(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveToContent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
      </containers>
      <file name="59fa1915-cdac-e808-68df-ecc4349be783" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowing(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveToFollowing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="navigatorEnd">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
      </containers>
      <file name="6d1e48fa-acc1-9df5-08aa-7218a1b41bc0" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToFollowingSibling(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveToFollowingSibling" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
      </containers>
      <file name="5cf2aabc-0620-142d-63f2-221e4ccac0a8" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToNextContent(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveToNextContent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
      </containers>
      <file name="23209ef8-b3d4-b19a-01c7-c7de6d2a3514" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlNavigatorFilter.MoveToPreviousSibling(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveToPreviousSibling" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
      </containers>
      <file name="757de26e-3a95-28b3-f24f-2d69fc0e16da" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlQueryContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryContext" />
      <apidata name="XmlQueryContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="518eff80-102b-1470-33f4-fcf5d7eb3311" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryContext">
      <topicdata name="XmlQueryContext" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryContext" />
      <apidata name="XmlQueryContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryContext.DefaultDataSource" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryContext.DefaultNameTable" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetDataSource(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetLateBoundObject(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetParameter(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.InvokeXsltLateBoundFunction(System.String,System.String,System.Collections.Generic.IList{System.Xml.XPath.XPathItem}[])" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.LateBoundFunctionExists(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.OnXsltMessageEncountered(System.String)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryContext.QueryNameTable" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" />
      </containers>
      <file name="16271273-a0c5-fa27-9a8f-ff5a6a69d6a1" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlQueryContext">
      <topicdata name="XmlQueryContext" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryContext" />
      <apidata name="XmlQueryContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetDataSource(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetLateBoundObject(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetParameter(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.InvokeXsltLateBoundFunction(System.String,System.String,System.Collections.Generic.IList{System.Xml.XPath.XPathItem}[])" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.LateBoundFunctionExists(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryContext.OnXsltMessageEncountered(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" />
      </containers>
      <file name="99c5381d-3f27-0570-1ed0-4e4eb13574f5" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XmlQueryContext">
      <topicdata name="XmlQueryContext" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryContext" />
      <apidata name="XmlQueryContext" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryContext.DefaultDataSource" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryContext.DefaultNameTable" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryContext.QueryNameTable" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" />
      </containers>
      <file name="fdec740c-0eed-7a4f-7ddb-5370ba349d4a" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryContext.DefaultDataSource">
      <topicdata group="api" />
      <apidata name="DefaultDataSource" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultDataSource" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" ref="true" />
      </containers>
      <file name="0cd085be-e6a6-b160-2ba9-d61d8e8babab" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryContext.DefaultNameTable">
      <topicdata group="api" />
      <apidata name="DefaultNameTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DefaultNameTable" />
      <returns>
        <type api="T:System.Xml.XmlNameTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" ref="true" />
      </containers>
      <file name="b81083f3-0beb-7a6f-fd16-d3a93ef71191" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetDataSource(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetDataSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="uriRelative">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="uriBase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" ref="true" />
      </containers>
      <file name="4d35f95d-db0a-c5cc-44e9-4a0080680b35" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetLateBoundObject(System.String)">
      <topicdata group="api" />
      <apidata name="GetLateBoundObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="namespaceUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" ref="true" />
      </containers>
      <file name="1279687a-b34d-bf4c-885d-76dc3f30bf9e" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryContext.GetParameter(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="GetParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" ref="true" />
      </containers>
      <file name="63f62ae4-618a-c1dc-fef8-26b8bba9fb35" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryContext.InvokeXsltLateBoundFunction(System.String,System.String,System.Collections.Generic.IList{System.Xml.XPath.XPathItem}[])">
      <topicdata group="api" />
      <apidata name="InvokeXsltLateBoundFunction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.IList`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" ref="true" />
      </containers>
      <file name="f370efc8-759f-0bc6-0de3-b00042f567e7" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryContext.LateBoundFunctionExists(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="LateBoundFunctionExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" ref="true" />
      </containers>
      <file name="5ddef163-533a-f233-93bf-6dde23caa714" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryContext.OnXsltMessageEncountered(System.String)">
      <topicdata group="api" />
      <apidata name="OnXsltMessageEncountered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" ref="true" />
      </containers>
      <file name="41b92390-8cef-bf7d-3b2e-affb6a570aba" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryContext.QueryNameTable">
      <topicdata group="api" />
      <apidata name="QueryNameTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_QueryNameTable" />
      <returns>
        <type api="T:System.Xml.XmlNameTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" ref="true" />
      </containers>
      <file name="3ab37592-d5b5-a515-08cb-00533e4d8056" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      <apidata name="XmlQueryItemSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="65d8b5f0-0fae-7725-0b02-542ff9ec6dcf" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryItemSequence">
      <topicdata name="XmlQueryItemSequence" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      <apidata name="XmlQueryItemSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor(System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.AddClone(System.Xml.XPath.XPathItem)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence,System.Xml.XPath.XPathItem)" />
        </element>
        <element api="F:System.Xml.Xsl.Runtime.XmlQueryItemSequence.Empty" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      </containers>
      <file name="5605c7a4-98fc-ec15-e502-c597abd337d0" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlQueryItemSequence">
      <topicdata name="XmlQueryItemSequence" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      <apidata name="XmlQueryItemSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.AddClone(System.Xml.XPath.XPathItem)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence,System.Xml.XPath.XPathItem)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      </containers>
      <file name="3c1e4322-9c76-87b1-33c5-051afd65ca25" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XmlQueryItemSequence">
      <topicdata name="XmlQueryItemSequence" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      <apidata name="XmlQueryItemSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      </containers>
      <file name="7a456cb8-cbf9-2c54-ab4c-f76c9a52ee8e" />
    </api>
    <api id="Fields.T:System.Xml.Xsl.Runtime.XmlQueryItemSequence">
      <topicdata name="XmlQueryItemSequence" group="list" subgroup="Fields" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      <apidata name="XmlQueryItemSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor" />
      <elements>
        <element api="F:System.Xml.Xsl.Runtime.XmlQueryItemSequence.Empty" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      </containers>
      <file name="e82f009f-bc74-f2a5-f17b-238180e1a639" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor(System.Xml.XPath.XPathItem)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </containers>
      <file name="847cb621-1832-1857-0643-2c42bd2cf286" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse">
      <topicdata name="CreateOrReuse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" />
      <apidata name="CreateOrReuse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence,System.Xml.XPath.XPathItem)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </containers>
      <file name="43c17a9e-8749-5d34-d5be-46c81fe9b5e0" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </containers>
      <file name="eea7b8c4-ecaa-5f89-590e-21386ceb55b5" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </containers>
      <file name="a771761b-3644-ca73-7934-54e276d0ca34" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor(System.Xml.XPath.XPathItem)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryItemSequence.#ctor" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </containers>
      <file name="149a81b5-f9f2-df4f-8d04-6deb1d5a225d" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.AddClone(System.Xml.XPath.XPathItem)">
      <topicdata group="api" />
      <apidata name="AddClone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </containers>
      <file name="6003bdd6-fbff-44ba-d0bb-977244c73e64" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence)">
      <topicdata group="api" />
      <apidata name="CreateOrReuse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seq">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </containers>
      <file name="052e095d-bada-c1a8-39b7-47e070537b98" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryItemSequence,System.Xml.XPath.XPathItem)">
      <topicdata group="api" />
      <apidata name="CreateOrReuse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryItemSequence.CreateOrReuse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seq">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
        </parameter>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </containers>
      <file name="8e06e37d-4d8e-fa59-8d6b-2d6a087669f2" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.XmlQueryItemSequence.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
      </containers>
      <file name="fcdce57c-ae2f-4ef9-57b9-528005834732" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="XmlQueryNodeSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="de91c566-7433-a300-c53d-7d6b884dd840" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence">
      <topicdata name="XmlQueryNodeSequence" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="XmlQueryNodeSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator[],System.Int32)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone(System.Xml.XPath.XPathNavigator)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct(System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator})" />
        <element api="F:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.Empty" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.IsDocOrderDistinct" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add">
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Contains(System.Xml.XPath.XPathItem)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#CopyTo(System.Xml.XPath.XPathItem[],System.Int32)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly">
          <element api="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly" />
          <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove">
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable{System#Xml#XPath#XPathItem}#GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#IndexOf(System.Xml.XPath.XPathItem)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert(System.Int32,System.Xml.XPath.XPathItem)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
        </element>
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Item(System.Int32)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt(System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      </containers>
      <file name="85756ed5-9e33-bba6-5220-5d9c3b14a00c" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence">
      <topicdata name="XmlQueryNodeSequence" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="XmlQueryNodeSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Xml.XPath.XPathItem" ref="true" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Xml.XPath.XPathItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone(System.Xml.XPath.XPathNavigator)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct(System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator})" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add">
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Contains(System.Xml.XPath.XPathItem)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#CopyTo(System.Xml.XPath.XPathItem[],System.Int32)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove">
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable{System#Xml#XPath#XPathItem}#GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#IndexOf(System.Xml.XPath.XPathItem)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert(System.Int32,System.Xml.XPath.XPathItem)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt(System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      </containers>
      <file name="ec1329ad-11f5-2f85-f3e6-18b378cab8c0" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence">
      <topicdata name="XmlQueryNodeSequence" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="XmlQueryNodeSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.IsDocOrderDistinct" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly">
          <element api="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly" />
          <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        </element>
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Item(System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      </containers>
      <file name="5ab64782-fac4-e66c-d2a4-2729799c6438" />
    </api>
    <api id="Fields.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence">
      <topicdata name="XmlQueryNodeSequence" group="list" subgroup="Fields" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="XmlQueryNodeSequence" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
      <elements>
        <element api="F:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.Empty" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      </containers>
      <file name="5937b5e9-0480-333a-d71e-b40f2d7ee4a9" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="cec79b6b-711b-ab25-2aca-ee429e4b3f90" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse">
      <topicdata name="CreateOrReuse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="CreateOrReuse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="3f419013-197b-ec96-b8cf-10d21dbd23e5" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add(System.Xml.XPath.XPathItem)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="96e786da-1450-fb72-8bcc-d73ea26e7bfc" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear">
      <topicdata name="Clear" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="Clear" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="ac155b89-0f2b-a573-9bd9-1517aac14908" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly">
      <topicdata name="IsReadOnly" group="list" subgroup="overload" memberSubgroup="property" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="370cd3af-6c40-7923-3e4a-49786afd9dfa" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove(System.Xml.XPath.XPathItem)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="fbe5ef8b-4bba-e60d-2d4a-47c10e8fc66f" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert">
      <topicdata name="Insert" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="Insert" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert(System.Int32,System.Xml.XPath.XPathItem)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="0e85bf29-66aa-85e8-333e-45e87c0cbb29" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt">
      <topicdata name="RemoveAt" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="48372cb9-ed39-830b-ef1e-3d2686867a58" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="8b1a02f3-c032-ce30-4d48-6bbbc54276b0" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="89b87249-d8a8-ef93-e5c2-3c34e11d70de" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="e7680edb-c983-abb9-f367-9acfb3e31e20" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="985095b9-b5a4-f1a9-e56e-263857cf6c26" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor(System.Xml.XPath.XPathNavigator[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.#ctor" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="size">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="0c9e37de-99e8-03be-24af-7c91170a5d5a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.AddClone(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="AddClone" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="1d09de01-b13f-854d-fd7b-cc44a502fa49" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence)">
      <topicdata group="api" />
      <apidata name="CreateOrReuse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seq">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="09d1976f-209a-6772-4db4-c8dc66ceb34c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQueryNodeSequence,System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="CreateOrReuse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.CreateOrReuse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seq">
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
        </parameter>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="32697cd0-30e7-cab6-7f6b-1ab6b8298eeb" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.DocOrderDistinct(System.Collections.Generic.IComparer{System.Xml.XPath.XPathNavigator})">
      <topicdata group="api" />
      <apidata name="DocOrderDistinct" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IComparer`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="778d7e81-2d85-2289-63f3-adacffa59156" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="b203c74c-7d8c-6534-614a-741a7ea00564" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.IsDocOrderDistinct">
      <topicdata group="api" />
      <apidata name="IsDocOrderDistinct" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsDocOrderDistinct" />
      <setter name="set_IsDocOrderDistinct" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="5523a95d-df03-8531-ebb7-29ba1ac29bd7" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add(System.Xml.XPath.XPathItem)">
      <topicdata group="api" eiiName="ICollection.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Add" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="00a61472-5361-2161-6051-e6fb31cc3056" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear">
      <topicdata group="api" eiiName="ICollection.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Clear" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="064464fd-539c-b87b-4b35-47bf6685beeb" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Contains(System.Xml.XPath.XPathItem)">
      <topicdata group="api" eiiName="ICollection.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="539a40c7-2536-bed4-088c-392f9eec4cdd" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#CopyTo(System.Xml.XPath.XPathItem[],System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="29739b67-114c-5f34-b93a-3af7ddef313c" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly">
      <topicdata group="api" eiiName="ICollection.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#IsReadOnly" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;System.Xml.XPath.XPathItem&gt;.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="f3202162-482e-4972-a312-846cf1fa02d3" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove(System.Xml.XPath.XPathItem)">
      <topicdata group="api" eiiName="ICollection.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#ICollection{System#Xml#XPath#XPathItem}#Remove" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="57c1efca-9aa7-48dd-1bd1-7ebd8dad00b9" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IEnumerable{System#Xml#XPath#XPathItem}#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="f01a2eaa-bed2-c39a-e169-2bc7c9582ec2" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#IndexOf(System.Xml.XPath.XPathItem)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="65e55927-7ef1-2cfc-8815-0ffa362a6593" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert(System.Int32,System.Xml.XPath.XPathItem)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Insert" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="503220c0-a923-a2b5-41be-054e9e7eb779" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt;.Item" />
      <setter name="set_System.Collections.Generic.IList&lt;System.Xml.XPath.XPathItem&gt;.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XPath.XPathItem" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="484c420b-800a-b492-7293-332a8995e16b" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryNodeSequence.System#Collections#Generic#IList{System#Xml#XPath#XPathItem}#RemoveAt" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
      </containers>
      <file name="d917d7b3-ffe9-1450-9f2f-b290e5c14b06" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlQueryOutput">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="XmlQueryOutput" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.XmlWriter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="8531572b-c117-600d-893a-079362749c46" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput">
      <topicdata name="XmlQueryOutput" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="XmlQueryOutput" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.XmlWriter.Dispose" />
        <element api="M:System.Xml.XmlWriter.FlushAsync" />
        <element api="P:System.Xml.XmlWriter.Settings" />
        <element api="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteAttributeString">
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
        <element api="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteElementString">
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteName(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNode">
          <element api="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNodeAsync">
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRawAsync">
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttribute">
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttribute(System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocumentAsync">
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElement">
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElement(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteValue">
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.String)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.Close" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EndCopy(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EndTree" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.Flush" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.LookupPrefix(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartCopy(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartElementContentUnchecked" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartTree(System.Xml.XPath.XPathNodeType)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCData(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCharEntity(System.Char)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteChars(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteComment(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCommentString(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteDocType(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndAttribute" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndAttributeUnchecked" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndComment" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndDocument" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElement" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndNamespace" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndProcessingInstruction" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndRoot" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEntityRef(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteFullEndElement" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteItem(System.Xml.XPath.XPathItem)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceDeclaration(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceDeclarationUnchecked(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceString(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteProcessingInstruction(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteProcessingInstructionString(System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRawUnchecked(System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeLocalName(System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartComment" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument(System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementLocalName(System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartNamespace(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartProcessingInstruction(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartRoot" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteState" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteString(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStringUnchecked(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteSurrogateCharEntity(System.Char,System.Char)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteWhitespace(System.String)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryOutput.XmlLang" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryOutput.XmlSpace" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.XsltCopyOf(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      </containers>
      <file name="35771d4b-88af-9aeb-3a88-b53315d1b85e" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlQueryOutput">
      <topicdata name="XmlQueryOutput" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="XmlQueryOutput" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.XmlWriter.Dispose" />
        <element api="M:System.Xml.XmlWriter.FlushAsync" />
        <element api="M:System.Xml.XmlWriter.WriteAttributes(System.Xml.XmlReader,System.Boolean)" />
        <element api="M:System.Xml.XmlWriter.WriteAttributesAsync(System.Xml.XmlReader,System.Boolean)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteAttributeString">
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteAttributeString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteAttributeStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteBase64Async(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHex(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteBinHexAsync(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCDataAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteCharEntityAsync(System.Char)" />
        <element api="M:System.Xml.XmlWriter.WriteCharsAsync(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.XmlWriter.WriteCommentAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteDocTypeAsync(System.String,System.String,System.String,System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteElementString">
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteElementString(System.String,System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteElementStringAsync(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteEndDocumentAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteEntityRefAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteFullEndElementAsync" />
        <element api="M:System.Xml.XmlWriter.WriteName(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNameAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmToken(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteNmTokenAsync(System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNode">
          <element api="M:System.Xml.XmlWriter.WriteNode(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNode(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNodeAsync">
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XmlReader,System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteNodeAsync(System.Xml.XPath.XPathNavigator,System.Boolean)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteProcessingInstructionAsync(System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteQualifiedName(System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteQualifiedNameAsync(System.String,System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRawAsync">
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteRawAsync(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttribute">
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttribute(System.String,System.String,System.String)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocumentAsync">
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync" />
          <element api="M:System.Xml.XmlWriter.WriteStartDocumentAsync(System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElement">
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
          <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElement(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteStartElementAsync(System.String,System.String,System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStringAsync(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteSurrogateCharEntityAsync(System.Char,System.Char)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteValue">
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Boolean)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTime)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.DateTimeOffset)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Decimal)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Double)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int32)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Int64)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Object)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.Single)" />
          <element api="M:System.Xml.XmlWriter.WriteValue(System.String)" />
        </element>
        <element api="M:System.Xml.XmlWriter.WriteWhitespaceAsync(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.Close" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EndCopy(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EndTree" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.Flush" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.LookupPrefix(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartCopy(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartElementContentUnchecked" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartTree(System.Xml.XPath.XPathNodeType)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteBase64(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCData(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCharEntity(System.Char)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteChars(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteComment(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCommentString(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteDocType(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndAttribute" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndAttributeUnchecked" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndComment" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndDocument" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElement" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndNamespace" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndProcessingInstruction" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndRoot" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEntityRef(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteFullEndElement" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteItem(System.Xml.XPath.XPathItem)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceDeclaration(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceDeclarationUnchecked(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceString(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteProcessingInstruction(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteProcessingInstructionString(System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.Char[],System.Int32,System.Int32)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRawUnchecked(System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeLocalName(System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartComment" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument(System.Boolean)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XmlQualifiedName)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementLocalName(System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String,System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartNamespace(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartProcessingInstruction(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartRoot" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteString(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStringUnchecked(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteSurrogateCharEntity(System.Char,System.Char)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteWhitespace(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.XsltCopyOf(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      </containers>
      <file name="1a7b5c5b-e4c0-b4f9-c1a8-eafd32a73861" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XmlQueryOutput">
      <topicdata name="XmlQueryOutput" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="XmlQueryOutput" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.XmlWriter.Settings" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteState" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryOutput.XmlLang" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryOutput.XmlSpace" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      </containers>
      <file name="42041782-d810-078b-91eb-46425ccf3e80" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttribute">
      <topicdata name="WriteStartAttribute" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="WriteStartAttribute" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttribute(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="966df74f-d7a8-8000-087d-d9afc82177c0" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElement">
      <topicdata name="WriteStartElement" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String)" />
        <element api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElement(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="b01b5d06-11ec-ed08-358c-304a213dc53e" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked">
      <topicdata name="WriteEndElementUnchecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="WriteEndElementUnchecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="1a0f02d5-29c9-aae2-7f1e-5fec5f49b641" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw">
      <topicdata name="WriteRaw" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="WriteRaw" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.Char[],System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="e16499dc-8234-5d7b-057c-2b58b69eec80" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed">
      <topicdata name="WriteStartAttributeComputed" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="WriteStartAttributeComputed" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="03ee8304-00d2-f82f-4b1a-8cbe5602124f" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked">
      <topicdata name="WriteStartAttributeUnchecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="WriteStartAttributeUnchecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="c57307ce-6ac4-c1f5-aeda-c9c523e3b7a0" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument">
      <topicdata name="WriteStartDocument" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="WriteStartDocument" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="683e9b5d-85f3-d9a8-d9c4-2ec47228155e" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed">
      <topicdata name="WriteStartElementComputed" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="WriteStartElementComputed" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="df44d545-3d54-2fb0-2558-4f702d27c74a" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked">
      <topicdata name="WriteStartElementUnchecked" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryOutput" />
      <apidata name="WriteStartElementUnchecked" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="ba10bf08-8cb6-8ae7-b48d-ae60c56fd62d" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.Close">
      <topicdata group="api" />
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.Close">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="bd0f9302-2e09-5d04-8496-06b4fde22aaf" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EndCopy(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="EndCopy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="956dc843-ea35-6100-d827-33fd6336c6b2" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.EndTree">
      <topicdata group="api" />
      <apidata name="EndTree" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="d1ff2ba7-768f-2773-b20d-d02215710691" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.Flush">
      <topicdata group="api" />
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.Flush">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="bef0f216-02ad-cfb3-75d0-5ddd8c24fea1" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.LookupPrefix(System.String)">
      <topicdata group="api" />
      <apidata name="LookupPrefix" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.LookupPrefix(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="41a57394-ecde-3dbf-849c-a1f19a74b1ee" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartCopy(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="StartCopy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="8485390f-fbb3-b5b4-d38d-61086c35413b" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartElementContentUnchecked">
      <topicdata group="api" />
      <apidata name="StartElementContentUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="9d4e078c-7e48-464d-80f4-2ccf231ccc07" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.StartTree(System.Xml.XPath.XPathNodeType)">
      <topicdata group="api" />
      <apidata name="StartTree" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rootType">
          <type api="T:System.Xml.XPath.XPathNodeType" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="2ca83db8-e492-5632-316a-1342fac2f96e" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteBase64(System.Byte[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteBase64" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteBase64(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="66df0eda-95d8-ec22-525b-35bc24538544" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCData(System.String)">
      <topicdata group="api" />
      <apidata name="WriteCData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteCData(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="394b65be-24bf-bbe2-b1f3-f376e1e51131" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCharEntity(System.Char)">
      <topicdata group="api" />
      <apidata name="WriteCharEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteCharEntity(System.Char)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ch">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="697e9b6a-b219-fa39-3446-2f1f9e0d9fb5" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteChars(System.Char[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteChars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteChars(System.Char[],System.Int32,System.Int32)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="7f37e5cc-6630-d79c-1ea5-2811fff62f99" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteComment(System.String)">
      <topicdata group="api" />
      <apidata name="WriteComment" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteComment(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="d47c9777-227b-5bd4-92b1-d3012a11c968" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteCommentString(System.String)">
      <topicdata group="api" />
      <apidata name="WriteCommentString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="24a8ed46-9f70-5801-dd6e-1043af32f5e2" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteDocType(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteDocType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteDocType(System.String,System.String,System.String,System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="pubid">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sysid">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="subset">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="de8d65fd-f5c5-0e0b-097e-aa16ad3841e4" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndAttribute">
      <topicdata group="api" />
      <apidata name="WriteEndAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteEndAttribute">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="f646399e-3f60-c1b7-2f99-0d3cda14ad08" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndAttributeUnchecked">
      <topicdata group="api" />
      <apidata name="WriteEndAttributeUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="ea5a7466-2a68-1264-8e75-3ba7a689f3bc" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndComment">
      <topicdata group="api" />
      <apidata name="WriteEndComment" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="aa945f4e-84e1-7c28-d731-5d25b16362d4" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndDocument">
      <topicdata group="api" />
      <apidata name="WriteEndDocument" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteEndDocument">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="31cd2696-03f2-2bee-60f3-eb6e488bdbf8" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElement">
      <topicdata group="api" />
      <apidata name="WriteEndElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteEndElement">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="bc690ddb-948d-46ed-9865-7ff396c598e1" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String)">
      <topicdata group="api" />
      <apidata name="WriteEndElementUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="c66c82c7-c654-46fe-9079-7c19a2fdaaef" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteEndElementUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndElementUnchecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="037137a5-f71e-c9af-f899-acfdfa1054dc" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndNamespace">
      <topicdata group="api" />
      <apidata name="WriteEndNamespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="bc4c3d2a-872b-4851-16f5-659b3d7a776e" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndProcessingInstruction">
      <topicdata group="api" />
      <apidata name="WriteEndProcessingInstruction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="02ce6b32-874d-9930-0f86-293d616ec882" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEndRoot">
      <topicdata group="api" />
      <apidata name="WriteEndRoot" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="8fd39eae-ee25-6d22-5092-6b032784b53f" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteEntityRef(System.String)">
      <topicdata group="api" />
      <apidata name="WriteEntityRef" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteEntityRef(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="66f998e3-0f7a-a117-2210-6f5084050b70" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteFullEndElement">
      <topicdata group="api" />
      <apidata name="WriteFullEndElement" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteFullEndElement">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="6ec1ba4a-e8cc-6409-53ae-539c17c6dc69" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteItem(System.Xml.XPath.XPathItem)">
      <topicdata group="api" />
      <apidata name="WriteItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="4b6322c0-6d79-a2c8-1146-2fdd93dbb097" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceDeclaration(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteNamespaceDeclaration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="057b30a5-890c-c3f0-3ac9-efd0243b4cd8" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceDeclarationUnchecked(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteNamespaceDeclarationUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="22bc650c-0829-c69d-9cf1-c2e6411a0cf5" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteNamespaceString(System.String)">
      <topicdata group="api" />
      <apidata name="WriteNamespaceString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="6206bb12-1962-e1d1-3b42-932b00bd6c86" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteProcessingInstruction(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteProcessingInstruction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteProcessingInstruction(System.String,System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="3edcce1f-69aa-d7a1-b5c4-0d9296efd447" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteProcessingInstructionString(System.String)">
      <topicdata group="api" />
      <apidata name="WriteProcessingInstructionString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="e46c6e2f-c658-7034-32b6-45ed14eb93c6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.Char[],System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteRaw" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteRaw(System.Char[],System.Int32,System.Int32)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="b883cc16-e881-d89b-ddad-d211714fd06a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw(System.String)">
      <topicdata group="api" />
      <apidata name="WriteRaw" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRaw" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteRaw(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="10e063a5-d1eb-bbb0-843f-87737b1cf25e" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteRawUnchecked(System.String)">
      <topicdata group="api" />
      <apidata name="WriteRawUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="e78cba3e-8556-fe10-e59f-7196aca139cd" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttribute(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartAttribute" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttribute" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteStartAttribute(System.String,System.String,System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="e20a17e0-1e87-e79c-1d9f-dc7658115ea3" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteStartAttributeComputed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tagName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="prefixMappingsIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="4791f161-10c1-a09c-45b6-b26dc1d2db24" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartAttributeComputed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tagName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="cd1ca2ea-458f-2b84-dd4a-1a72fd05edd2" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteStartAttributeComputed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="aa098f70-cf5d-5407-85a2-3555f9e16f7c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="WriteStartAttributeComputed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeComputed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="160c8ae7-1ff6-ee35-f4c1-1bde3e55264a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeLocalName(System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartAttributeLocalName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="f9c795fc-fc59-8dc0-9dc3-30c780b5d742" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartAttributeUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="39f483b1-ea5b-56f8-4175-f7b7f4ca5181" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartAttributeUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartAttributeUnchecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="9178659a-f647-a105-5821-6040a526d454" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartComment">
      <topicdata group="api" />
      <apidata name="WriteStartComment" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="b138ce24-5735-e445-88bd-cff5aa91fb81" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument">
      <topicdata group="api" />
      <apidata name="WriteStartDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteStartDocument">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="d768335f-df40-c8b0-1f08-2a91e3ef037d" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument(System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteStartDocument" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartDocument" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteStartDocument(System.Boolean)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="standalone">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="b4483186-7daa-9170-a851-e6f9c10ede4c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElement(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartElement" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElement" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteStartElement(System.String,System.String,System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="c2f6b549-765b-0fd2-4dd2-d17d9255f5a0" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="WriteStartElementComputed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tagName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="prefixMappingsIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="d82b7553-97d9-8917-1544-cb733dd051ce" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartElementComputed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tagName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="013a2133-9f4b-e153-bb23-b9d5e848029a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="WriteStartElementComputed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="4450e91e-7978-12e3-b1b5-ed6ff7840cec" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="WriteStartElementComputed" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementComputed" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="34a13923-3e51-8869-f490-ff8b25403520" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementLocalName(System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartElementLocalName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="cbdec166-c802-a383-4605-b629dd580f52" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartElementUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="979748e8-c977-d006-04c1-5f2a8055140b" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartElementUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartElementUnchecked" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="04f74cc8-0086-7149-f471-71db0751eccf" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartNamespace(System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartNamespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="ab18987c-da72-0fb8-1062-2d4b52cb1e3a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartProcessingInstruction(System.String)">
      <topicdata group="api" />
      <apidata name="WriteStartProcessingInstruction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="235669a2-eeb9-bea8-201e-2874d0654805" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStartRoot">
      <topicdata group="api" />
      <apidata name="WriteStartRoot" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="85ff3124-4f5d-c906-6887-9803ab8f6928" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteState">
      <topicdata group="api" />
      <apidata name="WriteState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlWriter.WriteState">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_WriteState" />
      <returns>
        <type api="T:System.Xml.WriteState" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="5b230cd1-3b12-3e3f-bed2-a30817a99925" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteString(System.String)">
      <topicdata group="api" />
      <apidata name="WriteString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteString(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="cc57b659-eb99-3dba-6d54-7b82e7ca1241" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteStringUnchecked(System.String)">
      <topicdata group="api" />
      <apidata name="WriteStringUnchecked" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="8e8af7a5-dfd6-664b-8861-7769ee28822d" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteSurrogateCharEntity(System.Char,System.Char)">
      <topicdata group="api" />
      <apidata name="WriteSurrogateCharEntity" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteSurrogateCharEntity(System.Char,System.Char)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="lowChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
        <parameter name="highChar">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="a0a30534-d05c-3a5a-b18b-b7bf995baac6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.WriteWhitespace(System.String)">
      <topicdata group="api" />
      <apidata name="WriteWhitespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.XmlWriter.WriteWhitespace(System.String)">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="ws">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="501639d8-71c6-4416-d980-75a7de6acc9e" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryOutput.XmlLang">
      <topicdata group="api" />
      <apidata name="XmlLang" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlWriter.XmlLang">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_XmlLang" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="27ff6ea4-a388-0603-da50-a30f3323c6d8" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryOutput.XmlSpace">
      <topicdata group="api" />
      <apidata name="XmlSpace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.XmlWriter.XmlSpace">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_XmlSpace" />
      <returns>
        <type api="T:System.Xml.XmlSpace" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="b6e24934-6f02-56ad-9b95-29accf858225" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryOutput.XsltCopyOf(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="XsltCopyOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </containers>
      <file name="9b8aad01-84ea-e9f1-ca0a-f0fa5a0dfc75" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlQueryRuntime">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
      <apidata name="XmlQueryRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ac2a4438-0e97-f793-5eb0-c1de262761c3" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryRuntime">
      <topicdata name="XmlQueryRuntime" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
      <apidata name="XmlQueryRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.AddNewIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltArgument(System.Int32,System.Object,System.Type)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltResult(System.Int32,System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ComparePosition(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.CreateCollation(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetGlobalNames" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetGlobalValue(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetXsltValue(System.Collections.IList)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugSetGlobalValue(System.String,System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DocOrderDistinct(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EarlyBoundFunctionExists(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndRtfConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndSequenceConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.ExternalContext" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.FindIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex@)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GenerateId(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetAtomizedName(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetCollation(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetEarlyBoundObject(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetGlobalValue(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetNameFilter(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetTypeFilter(System.Xml.XPath.XPathNodeType)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsGlobalComputed(System.Int32)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Xml.Schema.XmlTypeCode)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Xml.Schema.XmlTypeCode)" />
        </element>
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.NameTable" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.OnCurrentNodeChanged(System.Xml.XPath.XPathNavigator)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.Output" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SendMessage(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SetGlobalValue(System.Int32,System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.StartRtfConstruction(System.String,System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.StartSequenceConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.TextRtfConstruction(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ThrowException(System.String)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.XsltFunctions" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
      </containers>
      <file name="8ec128a6-4ec2-fc95-a8e1-944a72c565d9" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlQueryRuntime">
      <topicdata name="XmlQueryRuntime" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
      <apidata name="XmlQueryRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.AddNewIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltArgument(System.Int32,System.Object,System.Type)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltResult(System.Int32,System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ComparePosition(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.CreateCollation(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetGlobalNames" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetGlobalValue(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetXsltValue(System.Collections.IList)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugSetGlobalValue(System.String,System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DocOrderDistinct(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EarlyBoundFunctionExists(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndRtfConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndSequenceConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.FindIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex@)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GenerateId(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetAtomizedName(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetCollation(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetEarlyBoundObject(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetGlobalValue(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetNameFilter(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetTypeFilter(System.Xml.XPath.XPathNodeType)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsGlobalComputed(System.Int32)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Int32,System.Int32)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Xml.Schema.XmlTypeCode)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Xml.Schema.XmlTypeCode)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.OnCurrentNodeChanged(System.Xml.XPath.XPathNavigator)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName">
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SendMessage(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SetGlobalValue(System.Int32,System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.StartRtfConstruction(System.String,System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.StartSequenceConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.TextRtfConstruction(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ThrowException(System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
      </containers>
      <file name="81526d7c-f50c-1c7e-ec6c-33651ff6a1fb" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XmlQueryRuntime">
      <topicdata name="XmlQueryRuntime" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
      <apidata name="XmlQueryRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.ExternalContext" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.NameTable" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.Output" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.XsltFunctions" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
      </containers>
      <file name="42d73512-80cb-a5cf-1a0a-936d164ed58c" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual">
      <topicdata name="IsQNameEqual" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
      <apidata name="IsQNameEqual" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Int32,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="8f273d5a-5af5-3604-1522-45a7bb372c48" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType">
      <topicdata name="MatchesXmlType" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
      <apidata name="MatchesXmlType" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Xml.Schema.XmlTypeCode)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Xml.Schema.XmlTypeCode)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="cee66817-5140-8da7-1ae8-24b27b2cafbe" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName">
      <topicdata name="ParseTagName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQueryRuntime" />
      <apidata name="ParseTagName" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="f9725b75-4a0a-1ec5-9aa6-cce8bf0c5fe3" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.AddNewIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex)">
      <topicdata group="api" />
      <apidata name="AddNewIndex" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="indexId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Xml.Xsl.Runtime.XmlILIndex" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="f0388278-7b7e-27cd-0e7a-23be9dccd850" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltArgument(System.Int32,System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ChangeTypeXsltArgument" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="indexType">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="3b56d4c8-833a-ba69-94ba-1e2ab6f6bc21" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ChangeTypeXsltResult(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="ChangeTypeXsltResult" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="indexType">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="3842e7dc-2a1c-c897-02d2-e0594ec4ab78" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ComparePosition(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="ComparePosition" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigatorThis">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="navigatorThat">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="c650c54e-75ca-0a67-a97e-7e762735b587" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.CreateCollation(System.String)">
      <topicdata group="api" />
      <apidata name="CreateCollation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collation">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="1c03794d-f67d-c04c-3a10-14efbbb44187" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetGlobalNames">
      <topicdata group="api" />
      <apidata name="DebugGetGlobalNames" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="b0361f4d-de46-7189-b120-cc0dd79237e9" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetGlobalValue(System.String)">
      <topicdata group="api" />
      <apidata name="DebugGetGlobalValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IList" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="73f30291-51c5-abf0-bbe3-2ad57895699c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugGetXsltValue(System.Collections.IList)">
      <topicdata group="api" />
      <apidata name="DebugGetXsltValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seq">
          <type api="T:System.Collections.IList" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="473d49f7-5171-2fab-9e60-8e56105b83df" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DebugSetGlobalValue(System.String,System.Object)">
      <topicdata group="api" />
      <apidata name="DebugSetGlobalValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="2c7aa821-24f6-41b6-a060-4572feea9bb1" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.DocOrderDistinct(System.Collections.Generic.IList{System.Xml.XPath.XPathNavigator})">
      <topicdata group="api" />
      <apidata name="DocOrderDistinct" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seq">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="01e58e54-b6cd-ba55-5e43-1f2d75a977c6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EarlyBoundFunctionExists(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="EarlyBoundFunctionExists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaceUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="11bf62d9-6660-9fc8-1a75-a02278c49b69" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndRtfConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)">
      <topicdata group="api" />
      <apidata name="EndRtfConstruction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="output" out="true">
          <referenceTo>
            <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="96fb85d2-8387-555a-23f2-301fbf417163" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.EndSequenceConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)">
      <topicdata group="api" />
      <apidata name="EndSequenceConstruction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="output" out="true">
          <referenceTo>
            <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="a95b210c-f286-a5cc-d162-294fe371409f" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.ExternalContext">
      <topicdata group="api" />
      <apidata name="ExternalContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExternalContext" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="94483694-9ee6-fa6a-1518-9212300fa243" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.FindIndex(System.Xml.XPath.XPathNavigator,System.Int32,System.Xml.Xsl.Runtime.XmlILIndex@)">
      <topicdata group="api" />
      <apidata name="FindIndex" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="indexId">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="index" out="true">
          <referenceTo>
            <type api="T:System.Xml.Xsl.Runtime.XmlILIndex" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="fa002962-9f4b-25ff-b251-3eb06617ff88" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GenerateId(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="GenerateId" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="adfeb781-4456-fe05-21aa-9e10f19273e8" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetAtomizedName(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetAtomizedName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="a33dd30c-2cd0-46da-f115-32e9e153bece" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetCollation(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetCollation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="81ea8def-6e6e-fb6d-442b-70d8d54290a5" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetEarlyBoundObject(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetEarlyBoundObject" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="12f1cd0e-11e4-cb58-5ea6-6c6baa928ce4" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetGlobalValue(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetGlobalValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="e827a609-1f46-24c5-5fdf-12dda16347c3" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetNameFilter(System.Int32)">
      <topicdata group="api" />
      <apidata name="GetNameFilter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="f4f9be47-7402-8949-3056-b45c7223d39f" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.GetTypeFilter(System.Xml.XPath.XPathNodeType)">
      <topicdata group="api" />
      <apidata name="GetTypeFilter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nodeType">
          <type api="T:System.Xml.XPath.XPathNodeType" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="fd4cc494-6a26-44af-e320-3109498885f8" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsGlobalComputed(System.Int32)">
      <topicdata group="api" />
      <apidata name="IsGlobalComputed" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="36890f53-d484-2fab-2936-124b7a5ff927" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Int32,System.Int32)">
      <topicdata group="api" />
      <apidata name="IsQNameEqual" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="indexLocalName">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="indexNamespaceUri">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="32ba532a-8d58-0ac1-965d-aa31cf896f06" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="IsQNameEqual" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.IsQNameEqual" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="n1">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="n2">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="f6c7a703-bb33-4c83-319f-d367ffff35a6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Int32)">
      <topicdata group="api" />
      <apidata name="MatchesXmlType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seq">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="indexType">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="5ace1d3b-0164-263b-ff19-fdd3128deb3f" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Xml.Schema.XmlTypeCode)">
      <topicdata group="api" />
      <apidata name="MatchesXmlType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seq">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="code">
          <type api="T:System.Xml.Schema.XmlTypeCode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="17356659-404c-511d-eb95-29044c209b9c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Int32)">
      <topicdata group="api" />
      <apidata name="MatchesXmlType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
        <parameter name="indexType">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="6147f42f-ddf7-9ec5-98fd-e90963f1299d" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType(System.Xml.XPath.XPathItem,System.Xml.Schema.XmlTypeCode)">
      <topicdata group="api" />
      <apidata name="MatchesXmlType" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.MatchesXmlType" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Xml.Schema.XmlTypeCode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="54e718c1-1f59-78da-ee9b-13d687b7bb0d" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.NameTable">
      <topicdata group="api" />
      <apidata name="NameTable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_NameTable" />
      <returns>
        <type api="T:System.Xml.XmlNameTable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="ba2a0717-12d1-1612-1dcb-c4bbc8d0b302" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.OnCurrentNodeChanged(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="OnCurrentNodeChanged" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="currentNode">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="bf5d9dd0-530e-b836-5dee-ad1526d2bc51" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.Output">
      <topicdata group="api" />
      <apidata name="Output" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Output" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="a51fd372-3bf4-e2dd-2fb6-656f1ac2da56" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.Int32)">
      <topicdata group="api" />
      <apidata name="ParseTagName" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tagName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="indexPrefixMappings">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="5937079e-8b23-0664-b05b-dfa1f3974672" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ParseTagName" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.Xml.Xsl.Runtime.XmlQueryRuntime.ParseTagName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tagName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlQualifiedName" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="a449f73c-0540-aca2-f461-b8cc245fc077" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SendMessage(System.String)">
      <topicdata group="api" />
      <apidata name="SendMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="d4560a75-dbdb-4c78-146f-8ee518d0200f" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.SetGlobalValue(System.Int32,System.Object)">
      <topicdata group="api" />
      <apidata name="SetGlobalValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="df7425e5-09f2-70c6-957c-15f562eb78d2" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.StartRtfConstruction(System.String,System.Xml.Xsl.Runtime.XmlQueryOutput@)">
      <topicdata group="api" />
      <apidata name="StartRtfConstruction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="baseUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="output" out="true">
          <referenceTo>
            <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="1832fe22-3e76-e08b-418a-da25d0a18fe5" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.StartSequenceConstruction(System.Xml.Xsl.Runtime.XmlQueryOutput@)">
      <topicdata group="api" />
      <apidata name="StartSequenceConstruction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="output" out="true">
          <referenceTo>
            <type api="T:System.Xml.Xsl.Runtime.XmlQueryOutput" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="4c64b83c-5887-a8da-7bc0-b048472d1a9a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.TextRtfConstruction(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="TextRtfConstruction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="baseUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="90552e3e-7ee7-40a3-a505-6757cdb5790f" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQueryRuntime.ThrowException(System.String)">
      <topicdata group="api" />
      <apidata name="ThrowException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="00bdf830-7cf1-93bd-1557-1b8101c28652" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQueryRuntime.XsltFunctions">
      <topicdata group="api" />
      <apidata name="XsltFunctions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XsltFunctions" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQueryRuntime" ref="true" />
      </containers>
      <file name="3b690362-9952-4e96-73c5-bb6d47dd83be" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      <apidata name="XmlQuerySequence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryItemSequence" ref="true" />
          <type api="T:System.Xml.Xsl.Runtime.XmlQueryNodeSequence" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="6a123273-6f62-61be-e7c7-8894bcf5c632" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlQuerySequence`1">
      <topicdata name="XmlQuerySequence" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      <apidata name="XmlQuerySequence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor">
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0[],System.Int32)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse">
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0})" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0},`0)" />
        </element>
        <element api="F:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Empty" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.OnItemsChanged" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      </containers>
      <file name="530efa10-e867-c59b-0d00-7f479e7e530c" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlQuerySequence`1">
      <topicdata name="XmlQuerySequence" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      <apidata name="XmlQuerySequence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <arrayOf rank="1">
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="value">
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse">
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0})" />
          <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0},`0)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.OnItemsChanged" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      </containers>
      <file name="bdec2900-de95-4496-c2c2-5826b276d4cc" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XmlQuerySequence`1">
      <topicdata name="XmlQuerySequence" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      <apidata name="XmlQuerySequence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      </containers>
      <file name="2d74fde9-d496-e76d-0d7e-cc1e15d1a00c" />
    </api>
    <api id="Fields.T:System.Xml.Xsl.Runtime.XmlQuerySequence`1">
      <topicdata name="XmlQuerySequence" group="list" subgroup="Fields" typeTopicId="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      <apidata name="XmlQuerySequence" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="F:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Empty" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      </containers>
      <file name="4381d798-3d17-49be-ebad-aa32e2770c75" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0[],System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="1c2bfb5c-57ae-7e5e-9337-710f2d69132f" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse">
      <topicdata name="CreateOrReuse" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      <apidata name="CreateOrReuse" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0})" />
        <element api="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0},`0)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="80c12883-9e09-94b2-5d7c-ee3b4b89f716" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="ef9ea840-ef13-1c24-dd28-ef2f174e9507" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="3d4844ae-798f-23a0-8c20-056728e99cae" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="d04be341-7089-4b06-f0fb-12bc02673c56" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor(`0[],System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.#ctor" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </arrayOf>
        </parameter>
        <parameter name="size">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="879acbfb-827e-92ba-428c-c7a4afcc48db" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Add(`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="097d604f-6236-e8d0-bc9d-bf9190c36b79" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="7a6a4eba-1ac1-987f-27a9-0308c6112c2b" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Contains(`0)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="03d6cfae-108e-18b5-aff5-8023537154c7" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CopyTo(`0[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="0e74151c-0600-72bb-2e17-cfd77212b030" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
        <member api="P:System.Collections.ICollection.Count">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="4250295d-ab8f-5ba8-b500-484a29be5a3e" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0})">
      <topicdata group="api" />
      <apidata name="CreateOrReuse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seq">
          <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="219ad2f4-44bb-36c1-8808-09fc45f0683d" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse(System.Xml.Xsl.Runtime.XmlQuerySequence{`0},`0)">
      <topicdata group="api" />
      <apidata name="CreateOrReuse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XmlQuerySequence`1.CreateOrReuse" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="seq">
          <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </parameter>
        <parameter name="item">
          <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="c000d6b0-52e2-d7a7-87f8-e158fe8ee666" />
    </api>
    <api id="F:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Empty">
      <topicdata group="api" />
      <apidata name="Empty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="2766a6ae-1ee6-9634-9f1e-1886548b1cbf" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="08f145f3-c76e-d3e2-0a1b-434aeda7468a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.IndexOf(`0)">
      <topicdata group="api" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.IndexOf(`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="840909f7-2f7e-27b3-e767-e3222781895d" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.Item(System.Int32)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IList`1.Item(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="66a3c30a-5cb5-5605-7e09-0b3c3febcfac" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.OnItemsChanged">
      <topicdata group="api" />
      <apidata name="OnItemsChanged" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="e58daffd-28f2-bdf6-57f0-a44380dce629" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.SortByKeys(System.Array)">
      <topicdata group="api" />
      <apidata name="SortByKeys" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="keys">
          <type api="T:System.Array" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="2be57d72-e6cf-644d-de02-8a7c63a1f3fb" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Add(`0)">
      <topicdata group="api" eiiName="ICollection.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="4fe83f76-5d24-8a1d-3c79-26786366f974" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Clear">
      <topicdata group="api" eiiName="ICollection.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="7c8680bc-6f2a-0cb0-a9af-b52160e3a395" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#IsReadOnly">
      <topicdata group="api" eiiName="ICollection.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="280d4720-8929-704f-4359-e6caf2a0f869" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#ICollection{T}#Remove(`0)">
      <topicdata group="api" eiiName="ICollection.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="c4bd7acd-bfa3-abc9-23a4-69d18ca7e917" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="5aa05855-d089-c4dc-e487-516b84990931" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="a6b81d26-771e-10b9-f862-16cdf72bee71" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
      <topicdata group="api" eiiName="ICollection.CopyTo" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <type api="T:System.Array" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="3774e3dc-aa03-f845-5b9f-f2f4d1e1b2de" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#IsSynchronized">
      <topicdata group="api" eiiName="ICollection.IsSynchronized" />
      <apidata name="IsSynchronized" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.IsSynchronized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.IsSynchronized">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="feb62f39-6b73-7795-729b-978f16828c2d" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#ICollection#SyncRoot">
      <topicdata group="api" eiiName="ICollection.SyncRoot" />
      <apidata name="SyncRoot" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.ICollection.SyncRoot" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.ICollection.SyncRoot">
          <type api="T:System.Collections.ICollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="bd83fa97-5071-a769-2956-d1a0fd0f009a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="c2273684-90c6-60a6-1589-94e9d3a9c027" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Add(System.Object)">
      <topicdata group="api" eiiName="IList.Add" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Add(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="89555ba7-cba8-d98c-febb-8cd5765146dd" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Clear">
      <topicdata group="api" eiiName="IList.Clear" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.IList.Clear">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="31bebc48-fccb-4132-e6da-a868994dcb3e" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Contains(System.Object)">
      <topicdata group="api" eiiName="IList.Contains" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.Contains(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="b0071ad9-ef66-0612-a597-477deff42321" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IndexOf(System.Object)">
      <topicdata group="api" eiiName="IList.IndexOf" />
      <apidata name="IndexOf" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.IList.IndexOf(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="a7bb1172-89b6-6a08-1f86-c6bb8a14cded" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Insert(System.Int32,System.Object)">
      <topicdata group="api" eiiName="IList.Insert" />
      <apidata name="Insert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Insert(System.Int32,System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="c2659d13-2f52-3e9c-a376-0a25e86a1908" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsFixedSize">
      <topicdata group="api" eiiName="IList.IsFixedSize" />
      <apidata name="IsFixedSize" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsFixedSize" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsFixedSize">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="f7a49b1c-633b-165c-11db-2500606e73c7" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#IsReadOnly">
      <topicdata group="api" eiiName="IList.IsReadOnly" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" />
      <getter name="get_System.Collections.IList.IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.IsReadOnly">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="b1816969-7c5a-1a5f-80b5-78c033aeb6a5" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Item(System.Int32)">
      <topicdata group="api" eiiName="IList.Item" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_System.Collections.IList.Item" />
      <setter name="set_System.Collections.IList.Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Collections.IList.Item(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="2dfaf4f3-688c-3394-4b06-26b6b1498270" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#Remove(System.Object)">
      <topicdata group="api" eiiName="IList.Remove" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.Remove(System.Object)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="674c44b4-a54c-b4a8-82a6-b0431c1f77a9" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlQuerySequence`1.System#Collections#IList#RemoveAt(System.Int32)">
      <topicdata group="api" eiiName="IList.RemoveAt" />
      <apidata name="RemoveAt" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.IList.RemoveAt(System.Int32)">
          <type api="T:System.Collections.IList" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlQuerySequence`1" ref="true" />
      </containers>
      <file name="5cea076f-cd35-073c-02c9-130f5ba9a9b0" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" />
      <apidata name="XmlSortKeyAccumulator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="696e8401-6b9d-6a89-3fbc-935346d47524" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator">
      <topicdata name="XmlSortKeyAccumulator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" />
      <apidata name="XmlSortKeyAccumulator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDateTimeSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.DateTime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDecimalSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Decimal)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDoubleSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddEmptySortKey(System.Xml.Xsl.Runtime.XmlCollation)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddIntegerSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Int64)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddIntSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddStringSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.Create" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.FinishSortKeys" />
        <element api="P:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.Keys" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" />
      </containers>
      <file name="39372e3b-24ad-7914-2ada-c097c195a340" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator">
      <topicdata name="XmlSortKeyAccumulator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" />
      <apidata name="XmlSortKeyAccumulator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDateTimeSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.DateTime)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDecimalSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Decimal)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDoubleSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddEmptySortKey(System.Xml.Xsl.Runtime.XmlCollation)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddIntegerSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Int64)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddIntSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddStringSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.Create" />
        <element api="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.FinishSortKeys" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" />
      </containers>
      <file name="210ce15f-5b56-718a-3092-15f13cc484ec" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator">
      <topicdata name="XmlSortKeyAccumulator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" />
      <apidata name="XmlSortKeyAccumulator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.Keys" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" />
      </containers>
      <file name="8d1eed60-10b3-994a-5341-f4e47a3acf64" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDateTimeSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.DateTime)">
      <topicdata group="api" />
      <apidata name="AddDateTimeSortKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collation">
          <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" ref="false" />
      </containers>
      <file name="7fe1dcb1-90ac-d780-0336-4c53f3ec285c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDecimalSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Decimal)">
      <topicdata group="api" />
      <apidata name="AddDecimalSortKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collation">
          <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" ref="false" />
      </containers>
      <file name="9bd6383c-9c79-959e-6c9b-bf766a9a8e6c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddDoubleSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Double)">
      <topicdata group="api" />
      <apidata name="AddDoubleSortKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collation">
          <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" ref="false" />
      </containers>
      <file name="d1f85329-4519-51df-cc5b-b589915a2404" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddEmptySortKey(System.Xml.Xsl.Runtime.XmlCollation)">
      <topicdata group="api" />
      <apidata name="AddEmptySortKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collation">
          <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" ref="false" />
      </containers>
      <file name="eaeb3b9e-7451-bf7c-5e1f-d372b22a1341" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddIntegerSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Int64)">
      <topicdata group="api" />
      <apidata name="AddIntegerSortKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collation">
          <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" ref="false" />
      </containers>
      <file name="7b2238d9-4646-537b-40c6-3f5c03d110fc" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddIntSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.Int32)">
      <topicdata group="api" />
      <apidata name="AddIntSortKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collation">
          <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" ref="false" />
      </containers>
      <file name="95c7595f-c446-fbe7-bfe9-baabf0a85f36" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.AddStringSortKey(System.Xml.Xsl.Runtime.XmlCollation,System.String)">
      <topicdata group="api" />
      <apidata name="AddStringSortKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="collation">
          <type api="T:System.Xml.Xsl.Runtime.XmlCollation" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" ref="false" />
      </containers>
      <file name="f39f2866-107e-c044-c729-6ddf9bbcd770" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.Create">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" ref="false" />
      </containers>
      <file name="2d40053f-9406-ab3e-290b-694acde23a15" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.FinishSortKeys">
      <topicdata group="api" />
      <apidata name="FinishSortKeys" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" ref="false" />
      </containers>
      <file name="eb07bd8b-2a30-03fb-28f9-de45c228c61c" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Array" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XmlSortKeyAccumulator" ref="false" />
      </containers>
      <file name="caf0d73e-128b-d390-1d6e-896159a39b71" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XPathFollowingIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XPathFollowingIterator" />
      <apidata name="XPathFollowingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="e2daff4c-f667-004c-fa79-0402c9361230" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XPathFollowingIterator">
      <topicdata name="XPathFollowingIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" />
      <apidata name="XPathFollowingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XPathFollowingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.XPathFollowingIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.XPathFollowingIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" />
      </containers>
      <file name="5b7310da-b529-e9bb-1afa-c4d326edafe2" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XPathFollowingIterator">
      <topicdata name="XPathFollowingIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" />
      <apidata name="XPathFollowingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XPathFollowingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.XPathFollowingIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" />
      </containers>
      <file name="98ea5896-9536-c900-c0e1-09aa9af8a1fa" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XPathFollowingIterator">
      <topicdata name="XPathFollowingIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" />
      <apidata name="XPathFollowingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XPathFollowingIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" />
      </containers>
      <file name="91780945-f46a-4404-4c68-977eeeea2257" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XPathFollowingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" ref="false" />
      </containers>
      <file name="984f2834-414b-618d-7e3c-bf40d21e22ca" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XPathFollowingIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" ref="false" />
      </containers>
      <file name="ce797b53-ca83-de17-b822-f4cbe6f7c690" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XPathFollowingIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingIterator" ref="false" />
      </containers>
      <file name="ab4540c1-528e-0e24-913c-17373c3392cc" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" />
      <apidata name="XPathFollowingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="7d5b2875-16f5-b8b1-625c-184651e68461" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator">
      <topicdata name="XPathFollowingMergeIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" />
      <apidata name="XPathFollowingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" />
      </containers>
      <file name="526eb9b4-b628-9492-414c-57120d083e67" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator">
      <topicdata name="XPathFollowingMergeIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" />
      <apidata name="XPathFollowingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" />
      </containers>
      <file name="78165cc4-8b8d-3233-0fe0-ddb766bcab78" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator">
      <topicdata name="XPathFollowingMergeIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" />
      <apidata name="XPathFollowingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" />
      </containers>
      <file name="1257aedf-71c1-a4e9-11dc-05ce6c477874" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" ref="false" />
      </containers>
      <file name="e9b04ff4-9ed7-a327-6c61-c8331a40fc3d" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" ref="false" />
      </containers>
      <file name="0f891733-36b4-c9d0-49fd-6e042be35f2b" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathFollowingMergeIterator" ref="false" />
      </containers>
      <file name="978b94c3-d9cd-3d9d-41e0-8fda02e68c7d" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" />
      <apidata name="XPathPrecedingDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="5c9f1ce7-4c75-1dbe-f4c1-988dc52f0e6e" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator">
      <topicdata name="XPathPrecedingDocOrderIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" />
      <apidata name="XPathPrecedingDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" />
      </containers>
      <file name="8a91a702-9ee9-6e54-5b20-aa15d5a780ea" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator">
      <topicdata name="XPathPrecedingDocOrderIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" />
      <apidata name="XPathPrecedingDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" />
      </containers>
      <file name="342a9e02-156d-fd38-dcc0-5d3c478483e8" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator">
      <topicdata name="XPathPrecedingDocOrderIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" />
      <apidata name="XPathPrecedingDocOrderIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" />
      </containers>
      <file name="48c3f575-a921-ce68-7f2b-fcddccfd0f7c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" ref="false" />
      </containers>
      <file name="a5297946-bc5f-7867-dd61-51231fe1db09" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" ref="false" />
      </containers>
      <file name="fb33f3fc-6c53-1112-3d7c-0e1cb96c38b7" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingDocOrderIterator" ref="false" />
      </containers>
      <file name="47ac15d4-7f6d-b6cc-9ca1-662272e940a0" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" />
      <apidata name="XPathPrecedingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="752791de-507d-1ce8-2793-9fd79e2d4f87" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XPathPrecedingIterator">
      <topicdata name="XPathPrecedingIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" />
      <apidata name="XPathPrecedingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.XPathPrecedingIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" />
      </containers>
      <file name="780b213a-1ce9-8e93-f244-fc20dca74aa0" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XPathPrecedingIterator">
      <topicdata name="XPathPrecedingIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" />
      <apidata name="XPathPrecedingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingIterator.MoveNext" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" />
      </containers>
      <file name="27137965-5313-7696-be5f-0a600bda4b30" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XPathPrecedingIterator">
      <topicdata name="XPathPrecedingIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" />
      <apidata name="XPathPrecedingIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XPathPrecedingIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" />
      </containers>
      <file name="5b5ea042-eda1-b4ea-dc40-4b317f34fa6a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XPathPrecedingIterator.Create(System.Xml.XPath.XPathNavigator,System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" ref="false" />
      </containers>
      <file name="ec362385-0d61-a210-2f47-1cc349a88970" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XPathPrecedingIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" ref="false" />
      </containers>
      <file name="06b8461c-c65b-b009-b099-0dbca7575a2c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XPathPrecedingIterator.MoveNext">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingIterator" ref="false" />
      </containers>
      <file name="d2496342-9b77-ab47-9b84-a3d0b9c42485" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" />
      <apidata name="XPathPrecedingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="2a6b8b33-867f-2b5c-3048-4f12e2399dc2" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator">
      <topicdata name="XPathPrecedingMergeIterator" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" />
      <apidata name="XPathPrecedingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="P:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.Current" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" />
      </containers>
      <file name="be735015-6398-8a82-717f-dae6edb4492e" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator">
      <topicdata name="XPathPrecedingMergeIterator" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" />
      <apidata name="XPathPrecedingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="M:System.Object.GetType" />
        <element api="M:System.ValueType.Equals(System.Object)" />
        <element api="M:System.ValueType.GetHashCode" />
        <element api="M:System.ValueType.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)" />
        <element api="M:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" />
      </containers>
      <file name="43718590-0ce1-2d5b-aa63-e536ec25427b" />
    </api>
    <api id="Properties.T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator">
      <topicdata name="XPathPrecedingMergeIterator" group="list" subgroup="Properties" typeTopicId="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" />
      <apidata name="XPathPrecedingMergeIterator" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" noSettableProperties="true" />
      <elements>
        <element api="P:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.Current" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" />
      </containers>
      <file name="0a1a8d4d-15bd-dd4e-2d66-0e1d1218ed41" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.Create(System.Xml.Xsl.Runtime.XmlNavigatorFilter)">
      <topicdata group="api" />
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.Xml.Xsl.Runtime.XmlNavigatorFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" ref="false" />
      </containers>
      <file name="131f43fa-9520-ca6e-449a-385baf0cb94e" />
    </api>
    <api id="P:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.Current">
      <topicdata group="api" />
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" ref="false" />
      </containers>
      <file name="925b50eb-bf0b-5f6a-5eb9-dd07addf55bf" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator.MoveNext(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MoveNext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.Runtime.IteratorResult" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XPathPrecedingMergeIterator" ref="false" />
      </containers>
      <file name="bbf37dd4-be60-bee9-d912-533846d4f371" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XsltConvert">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XsltConvert" />
      <apidata name="XsltConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="4808010c-ea7d-e024-dcf2-eeea2d75b605" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XsltConvert">
      <topicdata name="XsltConvert" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XsltConvert" />
      <apidata name="XsltConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.EnsureNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean">
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDateTime(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDecimal(System.Double)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToDouble">
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Decimal)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Int64)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToInt(System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToLong(System.Double)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToNode">
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet">
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToString">
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.DateTime)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Double)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Xml.XPath.XPathItem)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" />
      </containers>
      <file name="5d360e1e-bc57-f58b-be9e-9880e09533f0" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XsltConvert">
      <topicdata name="XsltConvert" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XsltConvert" />
      <apidata name="XsltConvert" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.EnsureNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean">
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDateTime(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDecimal(System.Double)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToDouble">
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Decimal)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Int32)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Int64)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.String)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToInt(System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToLong(System.Double)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToNode">
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet">
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Xml.XPath.XPathItem)" />
        </element>
        <element api="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToString">
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.DateTime)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Double)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
          <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Xml.XPath.XPathItem)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" />
      </containers>
      <file name="b0ad4ce0-5311-ac07-c32e-9fe7495129b4" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean">
      <topicdata name="ToBoolean" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XsltConvert" />
      <apidata name="ToBoolean" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Xml.XPath.XPathItem)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="d00649fe-032c-af09-fcf9-27814a9e2593" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToDouble">
      <topicdata name="ToDouble" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XsltConvert" />
      <apidata name="ToDouble" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Decimal)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Int32)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Int64)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Xml.XPath.XPathItem)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="0b66886e-b80d-5eba-c70d-2395c4e5edd6" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToNode">
      <topicdata name="ToNode" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XsltConvert" />
      <apidata name="ToNode" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Xml.XPath.XPathItem)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="ada75a39-dd9a-bf6e-23a1-9553871df638" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet">
      <topicdata name="ToNodeSet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XsltConvert" />
      <apidata name="ToNodeSet" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Xml.XPath.XPathItem)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="08041cd0-18e9-2d83-a30a-543682bd0a76" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XsltConvert" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.DateTime)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Xml.XPath.XPathItem)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="7bcd3dd2-1052-1b46-43ff-b07837a5a4d8" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.EnsureNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="EnsureNodeSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listItems">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="af6a0812-5763-70ea-07f3-0f64253c4098" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="ToBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listItems">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="faa8ccdb-cbea-8657-5a7b-9f0d66eb771f" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean(System.Xml.XPath.XPathItem)">
      <topicdata group="api" />
      <apidata name="ToBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToBoolean" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="6a33e31e-6534-b7f1-9c1e-4c1721cf0c9a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToDateTime(System.String)">
      <topicdata group="api" />
      <apidata name="ToDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="352c484c-0ac0-76a4-3db0-d811f9a14024" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToDecimal(System.Double)">
      <topicdata group="api" />
      <apidata name="ToDecimal" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="2c7c5e2b-dd56-b66b-f743-08f7f242fc68" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToDouble" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listItems">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="0afaf012-1ef8-3a2d-d537-56ad11cf48af" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Decimal)">
      <topicdata group="api" />
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToDouble" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="c569cb71-802e-7cbd-c93a-1be51e61b696" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Int32)">
      <topicdata group="api" />
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToDouble" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="8c7c692c-01fb-3f02-4f8e-61a5505dbf93" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Int64)">
      <topicdata group="api" />
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToDouble" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="e3e0faf8-a02f-259d-fe0b-5d50f90bc52f" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.String)">
      <topicdata group="api" />
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToDouble" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="64c27580-c7e2-5b86-3fcc-a0e759d53cca" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToDouble(System.Xml.XPath.XPathItem)">
      <topicdata group="api" />
      <apidata name="ToDouble" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToDouble" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="a04c78cf-9242-9b49-9ae3-a19779d642b1" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToInt(System.Double)">
      <topicdata group="api" />
      <apidata name="ToInt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="5fb1cea5-e510-f26b-f0ea-7f125a63b03f" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToLong(System.Double)">
      <topicdata group="api" />
      <apidata name="ToLong" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="15f79af8-9658-712f-5c58-71819ca07461" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="ToNode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToNode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listItems">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="77e53237-4d9f-74e4-898f-96059e9afade" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToNode(System.Xml.XPath.XPathItem)">
      <topicdata group="api" />
      <apidata name="ToNode" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToNode" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="acaeaf41-1c32-d864-d2f2-d45c2054df7c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="ToNodeSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listItems">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="b5e3dcb6-5a32-61e3-a727-bb8c803622d0" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet(System.Xml.XPath.XPathItem)">
      <topicdata group="api" />
      <apidata name="ToNodeSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToNodeSet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="11493e44-14b6-dd90-aed1-144825196490" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="listItems">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="7b5cc868-b1df-08a3-55f1-4bfdace995e0" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.DateTime)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="2cbabeff-e72c-1d82-e0b6-47e4e37d3f15" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Double)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="78660123-310b-e5eb-9a94-f4b8591ef93d" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltConvert.ToString(System.Xml.XPath.XPathItem)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltConvert.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltConvert" ref="true" />
      </containers>
      <file name="48ffa0e2-2371-429d-f81c-142aec46796b" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XsltFunctions">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XsltFunctions" />
      <apidata name="XsltFunctions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="c8a35b61-0573-84ee-a3a0-61fb4c9cd76c" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XsltFunctions">
      <topicdata name="XsltFunctions" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XsltFunctions" />
      <apidata name="XsltFunctions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.BaseUri(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Contains(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.EXslObjectType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Lang(System.String,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSFormatDateTime(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSLocalName(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSNamespaceUri(System.String,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSNumber(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSStringCompare(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSUtc(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.NormalizeSpace(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.OuterXml(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Round(System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.StartsWith(System.String,System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XsltFunctions.Substring">
          <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double,System.Double)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.SubstringAfter(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.SubstringBefore(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.SystemProperty(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Translate(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" />
      </containers>
      <file name="8530870a-0e0c-34fd-8131-e9ed0808240d" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XsltFunctions">
      <topicdata name="XsltFunctions" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XsltFunctions" />
      <apidata name="XsltFunctions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.BaseUri(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Contains(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.EXslObjectType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Lang(System.String,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSFormatDateTime(System.String,System.String,System.String,System.Boolean)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSLocalName(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSNamespaceUri(System.String,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSNumber(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSStringCompare(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.MSUtc(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.NormalizeSpace(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.OuterXml(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Round(System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.StartsWith(System.String,System.String)" />
        <element api="Overload:System.Xml.Xsl.Runtime.XsltFunctions.Substring">
          <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double)" />
          <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double,System.Double)" />
        </element>
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.SubstringAfter(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.SubstringBefore(System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.SystemProperty(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Translate(System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" />
      </containers>
      <file name="f19a61bd-130e-bb0e-f4bf-9d1e832477d0" />
    </api>
    <api id="Overload:System.Xml.Xsl.Runtime.XsltFunctions.Substring">
      <topicdata name="Substring" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XsltFunctions" />
      <apidata name="Substring" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double,System.Double)" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="f28c5ee9-02c5-c0ba-d794-4c065b1ff2ec" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.BaseUri(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="BaseUri" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="8647e8d7-3cde-bb61-1e3d-70e226b3405b" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.Contains(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="s2">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="7105bdd2-9e61-1b2f-878f-7231e04e1b59" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.EXslObjectType(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="EXslObjectType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="96b6c3bd-8458-b4e9-4f21-354d69ab43f6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.Lang(System.String,System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="Lang" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="14b9acef-2115-27cc-d5dc-c8d86f451d2a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.MSFormatDateTime(System.String,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="MSFormatDateTime" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lang">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isDate">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="cead7f0d-e23a-ee6d-2655-ddcef0b27385" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.MSLocalName(System.String)">
      <topicdata group="api" />
      <apidata name="MSLocalName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="8c266c67-8636-1d62-8501-1a0fdcde222c" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.MSNamespaceUri(System.String,System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="MSNamespaceUri" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="currentNode">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="46305d4d-1b35-8a19-49f8-81d156ddf7f9" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.MSNumber(System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="MSNumber" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="8e65b779-a83a-34a3-96cd-e5eac89047bd" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.MSStringCompare(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="MSStringCompare" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="s2">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lang">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="options">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="cf0d10eb-53bb-e3cf-f8ff-2ca67efdb0c2" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.MSUtc(System.String)">
      <topicdata group="api" />
      <apidata name="MSUtc" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dateTime">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="d53c352a-a2b2-3076-2cc4-084a4a0935a3" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.NormalizeSpace(System.String)">
      <topicdata group="api" />
      <apidata name="NormalizeSpace" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="232c588c-e328-9a61-296f-d1de430051ce" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.OuterXml(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="OuterXml" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="86d009a6-45c5-ffa6-7dd5-f5f83d5f0ff4" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.Round(System.Double)">
      <topicdata group="api" />
      <apidata name="Round" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="48ac937e-47fa-3abc-ab3d-46aeefbe4b5b" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.StartsWith(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="StartsWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="s2">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="f5bd0b5c-6d93-6490-e588-20abc043a854" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double)">
      <topicdata group="api" />
      <apidata name="Substring" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltFunctions.Substring" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="da573e82-8f00-cf8e-21a2-ce36441cbb72" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.Substring(System.String,System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="Substring" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:System.Xml.Xsl.Runtime.XsltFunctions.Substring" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="startIndex">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="98c8f9ed-42f0-3654-b1c3-ad7c3cd729ca" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.SubstringAfter(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SubstringAfter" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="s2">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="47d3c181-b2d6-d14b-0201-62164074cac2" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.SubstringBefore(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="SubstringBefore" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="s1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="s2">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="e15dcb64-895e-a089-4e90-fbba1a6fbd21" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.SystemProperty(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="SystemProperty" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XPath.XPathItem" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="3893eca5-edce-90b0-9588-73d80189e18a" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltFunctions.Translate(System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="Translate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mapString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="transString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltFunctions" ref="true" />
      </containers>
      <file name="141af125-0fc4-4e61-29b7-e981dfc32dfd" />
    </api>
    <api id="T:System.Xml.Xsl.Runtime.XsltLibrary">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.Xml.Xsl.Runtime.XsltLibrary" />
      <apidata name="XsltLibrary" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="8103bc4f-adae-acd6-ae38-8f47514406e5" />
    </api>
    <api id="AllMembers.T:System.Xml.Xsl.Runtime.XsltLibrary">
      <topicdata name="XsltLibrary" group="list" subgroup="members" typeTopicId="T:System.Xml.Xsl.Runtime.XsltLibrary" />
      <apidata name="XsltLibrary" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.CheckScriptNamespace(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.ElementAvailable(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.EqualityOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatMessage(System.String,System.Collections.Generic.IList{System.String})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberDynamic(System.Double,System.String,System.Xml.XmlQualifiedName,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberStatic(System.Double,System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.FunctionAvailable(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.IsSameNodeSort(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.LangToLcid(System.String,System.Boolean)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.NumberFormat(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.String,System.Double,System.String,System.String,System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormat(System.Xml.XmlQualifiedName,System.String,System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormatter(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.RelationalOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" />
      </containers>
      <file name="e7b09fe1-6ecf-c8a4-7301-57ef48846509" />
    </api>
    <api id="Methods.T:System.Xml.Xsl.Runtime.XsltLibrary">
      <topicdata name="XsltLibrary" group="list" subgroup="Methods" typeTopicId="T:System.Xml.Xsl.Runtime.XsltLibrary" />
      <apidata name="XsltLibrary" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.CheckScriptNamespace(System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.ElementAvailable(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.EqualityOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatMessage(System.String,System.Collections.Generic.IList{System.String})" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberDynamic(System.Double,System.String,System.Xml.XmlQualifiedName,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberStatic(System.Double,System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.FunctionAvailable(System.Xml.XmlQualifiedName)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.IsSameNodeSort(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.LangToLcid(System.String,System.Boolean)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.NumberFormat(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.String,System.Double,System.String,System.String,System.Double)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormat(System.Xml.XmlQualifiedName,System.String,System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormatter(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.Xsl.Runtime.XsltLibrary.RelationalOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})" />
      </elements>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" />
      </containers>
      <file name="dc6adba8-2a16-5ee0-877d-ac9f36d6c604" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.CheckScriptNamespace(System.String)">
      <topicdata group="api" />
      <apidata name="CheckScriptNamespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nsUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="ea4ad78d-41fd-3aa9-ea0e-e761e78d2793" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.ElementAvailable(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="ElementAvailable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="27a932ce-7ce9-cf84-6c98-4aada3ee43af" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.EqualityOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="EqualityOperator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="opCode">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="right">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="faf50398-67b3-777a-c80b-12fe70ff9f71" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatMessage(System.String,System.Collections.Generic.IList{System.String})">
      <topicdata group="api" />
      <apidata name="FormatMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="res">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="279bc3be-61d2-d934-fb44-6e5c624187a7" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberDynamic(System.Double,System.String,System.Xml.XmlQualifiedName,System.String)">
      <topicdata group="api" />
      <apidata name="FormatNumberDynamic" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="formatPicture">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="decimalFormatName">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="errorMessageName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="da52386f-da71-1a7b-f55b-ef9838351152" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.FormatNumberStatic(System.Double,System.Double)">
      <topicdata group="api" />
      <apidata name="FormatNumberStatic" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="decimalFormatterIndex">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="aeb3530c-89f6-b234-7595-765ff39a27a6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.FunctionAvailable(System.Xml.XmlQualifiedName)">
      <topicdata group="api" />
      <apidata name="FunctionAvailable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="c2f91d80-f488-fee2-85f1-14fe6814249f" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.IsSameNodeSort(System.Xml.XPath.XPathNavigator,System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="IsSameNodeSort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="nav1">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="nav2">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="7e8eb57b-ba5c-e826-67fb-b11494d9c037" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.LangToLcid(System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="LangToLcid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="lang">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="forwardCompatibility">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="69916479-3204-6572-52a7-740f86f9296e" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.NumberFormat(System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.String,System.Double,System.String,System.String,System.Double)">
      <topicdata group="api" />
      <apidata name="NumberFormat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="formatString">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lang">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="letterValue">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="groupingSeparator">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="groupingSize">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="23894f7b-44b6-c663-e8f0-81bdb0c5c2b6" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormat(System.Xml.XmlQualifiedName,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RegisterDecimalFormat" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.Xml.XmlQualifiedName" ref="true" />
        </parameter>
        <parameter name="infinitySymbol">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nanSymbol">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="characters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="66f7c7e4-7a3c-0373-e5cb-4d98064b2b75" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.RegisterDecimalFormatter(System.String,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name="RegisterDecimalFormatter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="formatPicture">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="infinitySymbol">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nanSymbol">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="characters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="d99a4de8-eb49-bcba-b4a9-0c0dab6b87f3" />
    </api>
    <api id="M:System.Xml.Xsl.Runtime.XsltLibrary.RelationalOperator(System.Double,System.Collections.Generic.IList{System.Xml.XPath.XPathItem},System.Collections.Generic.IList{System.Xml.XPath.XPathItem})">
      <topicdata group="api" />
      <apidata name="RelationalOperator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="opCode">
          <type api="T:System.Double" ref="false" />
        </parameter>
        <parameter name="left">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="right">
          <type api="T:System.Collections.Generic.IList`1" ref="true">
            <specialization>
              <type api="T:System.Xml.XPath.XPathItem" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.Data.SqlXml" module="System.Data.SqlXml" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.Xml.Xsl.Runtime" />
        <type api="T:System.Xml.Xsl.Runtime.XsltLibrary" ref="true" />
      </containers>
      <file name="b8f762f9-4e08-52b2-dd2f-8933a6c33820" />
    </api>
  </apis>
</reflection>