<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="System.ServiceModel">
      <assemblydata version="4.0.0.0" culture="" key="00000000000000000400000000000000" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\EcmaPublicKey.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c800000140100000602000000240000525341310008000001000100613399aff18ef1a2c2514a273a42d9042b72321f1757102df9ebada69923e2738406c21e5b801552ab8d200a65a235e001ac9adc25f2d811eb09496a4c6a59d4619589c69f5baf0c4179a47311d92555cd006acc8b5959f2bd6e10e360c34537a1d266da8085856583c85d81da7f3ec01ed9564c58d93d713cd0172c8e23a10f0239b80c96b07736f5d8b022542a4e74251a5f432824318b3539a5a087f8e53d2f135f9ca47f3bb2e10aff0af0849504fb7cea3ff192dc8de0edad64c68efde34c56d302ad55fd6e80f302d5efcdeae953658d3452561b5f36c542efdbdd9f888538d374cef106acf7d93a4445c3c73cd911f0571aaf3d54da12b11ddec375b3</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>a5a866e1ee186f807668209f3b11236ace5e21f117803a3143abb126dd035d7d2f876b6938aaf2ee3414d5420d753621400db44a49c486ce134300a2106adb6bdb433590fef8ad5c43cba82290dc49530effd86523d9483c00f458af46890036b0e2c61d077d7fbac467a506eba29e467a87198b053c749aa2a4d2840c784e6d</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.WorkflowServices">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.WorkflowServices.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.ServiceModel.Routing">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Routing.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="System.ServiceModel.Web">
      <assemblydata version="4.0.0.0" culture="" key="0024000004800000940000000602000000240000525341310004000001000100B5FC90E7027F67871E773A8FDE8938C81DD402BA65B9201D60593E96C492651E889CC13F1415EBB53FAC1131AE0BD333C5EE6021672D9718EA31A8AEBD0DA0072F25D87DBA6FC90FFD598ED4DA35E44C398C454307E8E33B8426143DAEC9F596836F97C8F74750E5975C64E2189F45DEF46B2A2B1247ADC3652BF5C308055DA9" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Security.AllowPartiallyTrustedCallersAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Web.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Web.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>System.ServiceModel.Web.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® .NET Framework</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation.  All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.6.81.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\35MSSharedLib1024.snk</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblySignatureKeyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>002400000c80000014010000060200000024000052534131000800000100010085aad0bef0688d1b994a0d78e1fd29fc24ac34ed3d3ac3fb9b3d0c48386ba834aa880035060a8848b2d8adf58e670ed20914be3681a891c9c8c01eef2ab22872547c39be00af0e6c72485d7cfd1a51df8947d36ceba9989106b58abe79e6a3e71a01ed6bdc867012883e0b1a4d35b1b5eeed6df21e401bb0c22f2246ccb69979dc9e61eef262832ed0f2064853725a75485fa8a3efb7e027319c86dec03dc3b1bca2b5081bab52a627b9917450dfad534799e1c7af58683bdfa135f1518ff1ea60e90d7b993a6c87fd3dd93408e35d1296f9a7f9a97c5db56c0f3cc25ad11e9777f94d138b3cea53b9a8331c2e6dcb8d2ea94e18bf1163ff112a22dbd92d429a</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>8913ef869646d14971df222c210018ab394cfe63f8eb9b4d894c0dda7368cfb69df15d049b347f8a8b9205cdcc3d6bd6690f0bd24b3da3179feb8c03f410703027c7844ff654997e38015dfc97222c15061af2a1d3fe91775b9dd4b8ede64d3d59816270a9520e393c8e60619b80d40fc1dc4f12b5aa0c2df20d02ea32960851</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:System.ServiceModel.Dispatcher">
      <topicdata group="api" />
      <apidata name="System.ServiceModel.Dispatcher" group="namespace" />
      <elements>
        <element api="T:System.ServiceModel.Dispatcher.ExceptionHandler" />
        <element api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />
        <element api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
        <element api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
        <element api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
        <element api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
        <element api="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" />
        <element api="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" />
        <element api="T:System.ServiceModel.Dispatcher.MessageFilter" />
        <element api="T:System.ServiceModel.Dispatcher.MessageFilterException" />
        <element api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
        <element api="T:System.ServiceModel.Dispatcher.MessageQuery" />
        <element api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
        <element api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
        <element api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
        <element api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
        <element api="T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
        <element api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
        <element api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
        <element api="T:System.ServiceModel.Dispatcher.XPathResult" />
        <element api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
        <element api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
        <element api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" />
        <element api="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
        <element api="T:System.ServiceModel.Dispatcher.DispatchRuntime" />
        <element api="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" />
        <element api="T:System.ServiceModel.Dispatcher.ClientRuntime" />
        <element api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
        <element api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" />
        <element api="T:System.ServiceModel.Dispatcher.DispatchOperation" />
        <element api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
        <element api="T:System.ServiceModel.Dispatcher.FaultContractInfo" />
        <element api="T:System.ServiceModel.Dispatcher.ICallContextInitializer" />
        <element api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
        <element api="T:System.ServiceModel.Dispatcher.IChannelInitializer" />
        <element api="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" />
        <element api="T:System.ServiceModel.Dispatcher.IErrorHandler" />
        <element api="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />
        <element api="T:System.ServiceModel.Dispatcher.IInstanceProvider" />
        <element api="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
        <element api="T:System.ServiceModel.Dispatcher.IParameterInspector" />
        <element api="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />
        <element api="T:System.ServiceModel.Dispatcher.IClientMessageInspector" />
        <element api="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />
        <element api="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" />
        <element api="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />
        <element api="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" />
        <element api="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />
        <element api="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
        <element api="T:System.ServiceModel.Dispatcher.ClientOperationCompatBase" />
        <element api="T:System.ServiceModel.Dispatcher.ClientOperation" />
        <element api="T:System.ServiceModel.Dispatcher.ServiceThrottle" />
        <element api="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" />
        <element api="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" />
        <element api="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />
        <element api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />
        <element api="T:System.ServiceModel.Dispatcher.QueryStringConverter" />
        <element api="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
        <element api="T:System.ServiceModel.Dispatcher.DurableOperationContext" />
      </elements>
      <file name="c35c3ba1-74eb-663a-d32f-f12dc767fa0b" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ActionMessageFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ActionMessageFilter" />
      <apidata name="ActionMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="9f51555e-f2ad-6f72-fc0c-dca87275285d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ActionMessageFilter">
      <topicdata name="ActionMessageFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />
      <apidata name="ActionMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.ActionMessageFilter.#ctor(System.String[])" />
        <element api="P:System.ServiceModel.Dispatcher.ActionMessageFilter.Actions" />
        <element api="M:System.ServiceModel.Dispatcher.ActionMessageFilter.CreateFilterTable``1" />
        <element api="Overload:System.ServiceModel.Dispatcher.ActionMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />
      </containers>
      <file name="37e80072-6fc8-96ea-fa0e-c05d02ce9811" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ActionMessageFilter">
      <topicdata name="ActionMessageFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />
      <apidata name="ActionMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.ActionMessageFilter.CreateFilterTable``1" />
        <element api="Overload:System.ServiceModel.Dispatcher.ActionMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />
      </containers>
      <file name="a5e134c1-0686-a851-0e82-010636c0e296" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.ActionMessageFilter">
      <topicdata name="ActionMessageFilter" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />
      <apidata name="ActionMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.ActionMessageFilter.Actions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" />
      </containers>
      <file name="0ffd5fd9-54c6-3f47-7af6-539ea5da0b68" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.ActionMessageFilter.Match">
      <topicdata name="Match" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ActionMessageFilter" />
      <apidata name="Match" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" ref="true" />
      </containers>
      <file name="26a70d1c-7d00-a783-73b6-c8116f205d0f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ActionMessageFilter.#ctor(System.String[])">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="actions" params="true">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" ref="true" />
      </containers>
      <file name="661e2a4c-a3d3-0d30-f8f2-68f1a2ec849e" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ActionMessageFilter.Actions">
      <topicdata group="api" />
      <apidata name="Actions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Actions" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" ref="true" />
      </containers>
      <file name="31aa8576-014d-3a1e-a189-86c0db52a64b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ActionMessageFilter.CreateFilterTable``1">
      <topicdata group="api" />
      <apidata name="CreateFilterTable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="FilterData" />
      </templates>
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
          <specialization>
            <template name="FilterData" index="0" api="M:System.ServiceModel.Dispatcher.ActionMessageFilter.CreateFilterTable``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" ref="true" />
      </containers>
      <file name="b4e9bb56-8c6b-8c48-235c-c54e952a48c3" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.ActionMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" ref="true" />
      </containers>
      <file name="a4d2f95d-e947-c584-5e0d-54490dc4dd4f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ActionMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.ActionMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" ref="true" />
      </containers>
      <file name="96c9e174-6c16-aab4-0225-52fbe1cc82ab" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ChannelDispatcher">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
      <apidata name="ChannelDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="3d5f2363-4bc6-5467-d0a4-cce7c7569294" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ChannelDispatcher">
      <topicdata name="ChannelDispatcher" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
      <apidata name="ChannelDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)" />
          <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
      </containers>
      <file name="a4e0ae9c-12ff-4f43-4f1c-507fbfbffdf6" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ChannelDispatcher">
      <topicdata name="ChannelDispatcher" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
      <apidata name="ChannelDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
      </containers>
      <file name="34335432-85a1-e2d8-a10c-00f9a9c953d3" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.ChannelDispatcher">
      <topicdata name="ChannelDispatcher" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
      <apidata name="ChannelDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
      </containers>
      <file name="0670bd54-2357-a939-9ad5-ebc56d78ed84" />
    </api>
    <api id="Events.T:System.ServiceModel.Dispatcher.ChannelDispatcher">
      <topicdata name="ChannelDispatcher" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
      <apidata name="ChannelDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
      </containers>
      <file name="5f555647-7481-bdeb-3fec-e346a7d6e6e9" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="c3c279e5-e15b-33c3-9888-da05bd772bfe" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor" />
      <parameters>
        <parameter name="listener">
          <type api="T:System.ServiceModel.Channels.IChannelListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="d40b21bf-d2ba-6523-0034-4b145db27972" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor" />
      <parameters>
        <parameter name="listener">
          <type api="T:System.ServiceModel.Channels.IChannelListener" ref="true" />
        </parameter>
        <parameter name="bindingName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="f7cb4d07-6a0f-b6d6-53e6-fbc53215cd9f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor" />
      <parameters>
        <parameter name="listener">
          <type api="T:System.ServiceModel.Channels.IChannelListener" ref="true" />
        </parameter>
        <parameter name="bindingName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="timeouts">
          <type api="T:System.ServiceModel.IDefaultCommunicationTimeouts" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="31d29fe4-ddf7-d692-f3e6-f8ab793c2f45" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled">
      <topicdata group="api" />
      <apidata name="AsynchronousTransactedAcceptEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AsynchronousTransactedAcceptEnabled" />
      <setter name="set_AsynchronousTransactedAcceptEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="54cef36e-4755-1d2f-a18a-37d95b328958" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="host">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="7f287314-4afa-2d81-ba1d-e66582b4209b" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName">
      <topicdata group="api" />
      <apidata name="BindingName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BindingName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="edb03daa-dd82-7dc7-9bf5-36624be84696" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers">
      <topicdata group="api" />
      <apidata name="ChannelInitializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelInitializers" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IChannelInitializer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="434aea8d-3887-42eb-3d46-a35fd8aba5eb" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput">
      <topicdata group="api" />
      <apidata name="CloseInput" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
          <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="c5d29920-1403-54b7-a416-86dcb9a35692" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout">
      <topicdata group="api" />
      <apidata name="DefaultCloseTimeout" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultCloseTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="ead98f74-1a8c-1ab7-6fc7-bc84014ed8b8" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout">
      <topicdata group="api" />
      <apidata name="DefaultOpenTimeout" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DefaultOpenTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="78c98193-e49b-1786-1726-95c613b70155" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" />
      <apidata name="Detach" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="host">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="2d4332b9-030f-faf8-09a9-ca365a2c9a23" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints">
      <topicdata group="api" />
      <apidata name="Endpoints" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Endpoints" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="0647e326-16f8-a557-7a76-5c964848cf77" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers">
      <topicdata group="api" />
      <apidata name="ErrorHandlers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ErrorHandlers" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IErrorHandler" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="8733fb00-a987-fa4c-e2a1-a1a1f766b6c8" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host">
      <topicdata group="api" />
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Host" />
      <returns>
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="bfdfbbfc-814b-e1c0-2f2c-bc2f9d1c5e04" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults">
      <topicdata group="api" />
      <apidata name="IncludeExceptionDetailInFaults" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IncludeExceptionDetailInFaults" />
      <setter name="set_IncludeExceptionDetailInFaults" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="474aaeeb-9b52-d024-673e-b195bd6531b4" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept">
      <topicdata group="api" />
      <apidata name="IsTransactedAccept" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsTransactedAccept" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="3b077a68-15ab-979f-c693-a2635fcfa9d7" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive">
      <topicdata group="api" />
      <apidata name="IsTransactedReceive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsTransactedReceive" />
      <setter name="set_IsTransactedReceive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="22ecb1e1-da35-37f8-3d03-63d6ae1eeef4" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener">
      <topicdata group="api" />
      <apidata name="Listener" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
          <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Listener" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelListener" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="40def315-c92b-9376-398f-9b2552831c7f" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing">
      <topicdata group="api" />
      <apidata name="ManualAddressing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ManualAddressing" />
      <setter name="set_ManualAddressing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="23c1ceab-417d-2bab-c710-c3ac7b034b6a" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives">
      <topicdata group="api" />
      <apidata name="MaxPendingReceives" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxPendingReceives" />
      <setter name="set_MaxPendingReceives" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="d7e3cdff-e7f8-84fc-818c-53babc5dc083" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize">
      <topicdata group="api" />
      <apidata name="MaxTransactedBatchSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxTransactedBatchSize" />
      <setter name="set_MaxTransactedBatchSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="a4fea8b1-84eb-9169-c23b-29961075f7ee" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion">
      <topicdata group="api" />
      <apidata name="MessageVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageVersion" />
      <setter name="set_MessageVersion" />
      <returns>
        <type api="T:System.ServiceModel.Channels.MessageVersion" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="34bbf433-72df-409a-c29f-3a6b511b4f32" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort">
      <topicdata group="api" />
      <apidata name="OnAbort" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="1f929f84-74b9-e37d-84ee-3bf333277816" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="c3ef9931-0b2e-662f-96e5-bfe54561c66b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="OnBeginOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="42e9aa24-e284-f2b1-60e5-986cb35ac5cc" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="4353af8d-013c-d077-7aec-e115876872c4" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed">
      <topicdata group="api" />
      <apidata name="OnClosed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="02a9426b-0124-7545-98dc-5481df6e530b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndClose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="a89dd7e5-0416-bc7d-87ef-fe6d45ba3004" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="OnEndOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="b2386cf4-8102-cf9b-809f-4f37702d8190" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)">
      <topicdata group="api" />
      <apidata name="OnOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="5be49ae9-31b3-78cf-eacd-837f5b14ea1f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened">
      <topicdata group="api" />
      <apidata name="OnOpened" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="d026bfe1-16be-0d6b-b7d9-56fa008b6edc" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening">
      <topicdata group="api" />
      <apidata name="OnOpening" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="d29f6526-ef2d-de04-8557-d007e0103c33" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled">
      <topicdata group="api" />
      <apidata name="ReceiveContextEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReceiveContextEnabled" />
      <setter name="set_ReceiveContextEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="d2b639a5-175d-ae49-d35c-90dcb0db46e2" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously">
      <topicdata group="api" />
      <apidata name="ReceiveSynchronously" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReceiveSynchronously" />
      <setter name="set_ReceiveSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="0f40e956-a93d-63a0-50ea-be0315a1d13f" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously">
      <topicdata group="api" />
      <apidata name="SendAsynchronously" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SendAsynchronously" />
      <setter name="set_SendAsynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="594e6988-11c6-3271-c44e-782d3053c392" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle">
      <topicdata group="api" />
      <apidata name="ServiceThrottle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceThrottle" />
      <setter name="set_ServiceThrottle" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.ServiceThrottle" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="2c9dc627-2e59-2ef4-6858-574380673fe3" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel">
      <topicdata group="api" />
      <apidata name="TransactionIsolationLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionIsolationLevel" />
      <setter name="set_TransactionIsolationLevel" />
      <returns>
        <type api="T:System.Transactions.IsolationLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="fa766816-e2f4-cf5e-ec95-6b34d68b7d68" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout">
      <topicdata group="api" />
      <apidata name="TransactionTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionTimeout" />
      <setter name="set_TransactionTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </containers>
      <file name="f8546052-5a17-156d-0eaf-d30ca80656a6" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
      <apidata name="ChannelDispatcherBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Channels.CommunicationObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="e19c779f-1520-128d-3b42-982cd207b042" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
      <topicdata name="ChannelDispatcherBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
      <apidata name="ChannelDispatcherBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcherBase.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcherBase.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
      </containers>
      <file name="606dea0e-46ca-ac23-e63a-1c68bd359356" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
      <topicdata name="ChannelDispatcherBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
      <apidata name="ChannelDispatcherBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Abort" />
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcherBase.BeginClose">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcherBase.BeginOpen">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Close">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.Fault" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnAbort" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnClosing" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpened" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.OnOpening" />
        <element api="Overload:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Open">
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open" />
          <element api="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)" />
        </element>
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable" />
        <element api="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
      </containers>
      <file name="8ba882f8-f90f-6111-268f-b45d21668acb" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
      <topicdata name="ChannelDispatcherBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
      <apidata name="ChannelDispatcherBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.State" />
        <element api="P:System.ServiceModel.Channels.CommunicationObject.ThisLock" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
        <element api="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
      </containers>
      <file name="9d86e397-f6dc-8599-b1a0-49d5e1265f27" />
    </api>
    <api id="Events.T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
      <topicdata name="ChannelDispatcherBase" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
      <apidata name="ChannelDispatcherBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closed" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Closing" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Faulted" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opened" />
        <element api="E:System.ServiceModel.Channels.CommunicationObject.Opening" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
      </containers>
      <file name="5b644cab-5957-9092-aec1-8330fc65959c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
      </containers>
      <file name="b335b5c8-86f2-3746-d96c-142070852270" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" />
      <apidata name="Attach" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
      </containers>
      <file name="7e4160be-2d07-e699-cd67-1bf63a38c3c1" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
      <topicdata group="api" />
      <apidata name="CloseInput" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
      </containers>
      <file name="804efcf3-e804-350b-4ac5-8324e1cf0293" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
      <topicdata group="api" />
      <apidata name="Detach" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
      </containers>
      <file name="8cd4d3e1-658e-08bc-ad4a-fd1014b29ec7" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
      <topicdata group="api" />
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Host" />
      <returns>
        <type api="T:System.ServiceModel.ServiceHostBase" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
      </containers>
      <file name="fd23a83d-90fa-e95b-eb3e-c8a3501b9e60" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
      <topicdata group="api" />
      <apidata name="Listener" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Listener" />
      <returns>
        <type api="T:System.ServiceModel.Channels.IChannelListener" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
      </containers>
      <file name="8cea1eb4-56f5-00b4-3c1c-0bac6c14c37f" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" />
      <apidata name="ChannelDispatcherCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="6b1f9f6c-e9ab-17d2-9fe2-1387bed5f095" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection">
      <topicdata name="ChannelDispatcherCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" />
      <apidata name="ChannelDispatcherCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Clear" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Count" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Items" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.ClearItems" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.InsertItem(System.Int32,System.ServiceModel.Dispatcher.ChannelDispatcherBase)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.RemoveItem(System.Int32)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.SetItem(System.Int32,System.ServiceModel.Dispatcher.ChannelDispatcherBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" />
      </containers>
      <file name="f79ddde5-562a-303d-9132-b73e88a2cb71" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection">
      <topicdata name="ChannelDispatcherCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" />
      <apidata name="ChannelDispatcherCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Add(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Clear" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.IndexOf(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.Remove(`0)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.ClearItems" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.InsertItem(System.Int32,System.ServiceModel.Dispatcher.ChannelDispatcherBase)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.RemoveItem(System.Int32)" />
        <element api="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.SetItem(System.Int32,System.ServiceModel.Dispatcher.ChannelDispatcherBase)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" />
      </containers>
      <file name="9138c593-2393-153c-d756-0cb6b64d4a62" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection">
      <topicdata name="ChannelDispatcherCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" />
      <apidata name="ChannelDispatcherCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Count" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Item(System.Int32)" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.Items" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.SyncRoot" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.Generic.SynchronizedCollection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" />
      </containers>
      <file name="830e03e8-2d54-d787-2a42-00ccd033d994" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.ClearItems">
      <topicdata group="api" />
      <apidata name="ClearItems" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Generic.SynchronizedCollection`1.ClearItems">
          <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" ref="true" />
      </containers>
      <file name="977d587a-2145-e970-2ac1-21860d313212" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.InsertItem(System.Int32,System.ServiceModel.Dispatcher.ChannelDispatcherBase)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Generic.SynchronizedCollection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" ref="true" />
      </containers>
      <file name="f6f2e251-8d5c-434e-c296-3e657eeeb139" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.RemoveItem(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Generic.SynchronizedCollection`1.RemoveItem(System.Int32)">
          <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" ref="true" />
      </containers>
      <file name="56a4aff6-140e-c447-4b01-5e3f508a0f9f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ChannelDispatcherCollection.SetItem(System.Int32,System.ServiceModel.Dispatcher.ChannelDispatcherBase)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.Generic.SynchronizedCollection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcherCollection" ref="true" />
      </containers>
      <file name="4bdf4ef1-1464-8858-7174-9ddeffe7f93f" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ClientOperation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ClientOperation" />
      <apidata name="ClientOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.ClientOperationCompatBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="5ef87f6b-a19b-4f9e-caf8-c23ded52c9cc" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ClientOperation">
      <topicdata name="ClientOperation" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ClientOperation" />
      <apidata name="ClientOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.ClientOperation.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.Action" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.Name" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.Parent" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" />
      </containers>
      <file name="a2579d77-d687-54c2-d70f-b26622b85bac" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ClientOperation">
      <topicdata name="ClientOperation" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ClientOperation" />
      <apidata name="ClientOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" />
      </containers>
      <file name="cf959663-514e-b5cd-cc30-7f65eef51930" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.ClientOperation">
      <topicdata name="ClientOperation" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.ClientOperation" />
      <apidata name="ClientOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.Action" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.Name" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.Parent" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" />
      </containers>
      <file name="b49ab183-b189-f957-9488-17792703f5b6" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.ClientOperation.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ClientOperation" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="bc2dfc86-1b5b-4653-6e77-b5c4f561b9c3" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.ClientOperation.#ctor" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="4706245d-def6-0ea5-ec7d-5491b8a7e793" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ClientOperation.#ctor(System.ServiceModel.Dispatcher.ClientRuntime,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.ClientOperation.#ctor" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replyAction">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="2422c805-bfda-59d8-4840-b490773bf614" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="1681bb96-5b5f-af4e-20d2-fc54e94760d7" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.BeginMethod">
      <topicdata group="api" />
      <apidata name="BeginMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BeginMethod" />
      <setter name="set_BeginMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="d528dc3a-48e1-56de-1427-a9b458724a58" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.ClientParameterInspectors">
      <topicdata group="api" />
      <apidata name="ClientParameterInspectors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientParameterInspectors" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IParameterInspector" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="2ceada1d-9416-9804-0bb7-ba8073fc8a77" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.DeserializeReply">
      <topicdata group="api" />
      <apidata name="DeserializeReply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DeserializeReply" />
      <setter name="set_DeserializeReply" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="75ce11cb-673b-0378-7b32-49ce73dd24d4" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.EndMethod">
      <topicdata group="api" />
      <apidata name="EndMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EndMethod" />
      <setter name="set_EndMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="14570814-fc92-2689-2063-72a00bf6a1d2" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.FaultContractInfos">
      <topicdata group="api" />
      <apidata name="FaultContractInfos" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FaultContractInfos" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.FaultContractInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="9ad9d1f4-8b4f-cdd6-3dd2-e163971767b3" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.Formatter">
      <topicdata group="api" />
      <apidata name="Formatter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Formatter" />
      <setter name="set_Formatter" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="934af5df-aa2f-5671-f2bb-46c8f856ea43" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.IsInitiating">
      <topicdata group="api" />
      <apidata name="IsInitiating" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsInitiating" />
      <setter name="set_IsInitiating" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="102fe273-d888-a17d-381a-ac823bfd8804" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.IsOneWay">
      <topicdata group="api" />
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsOneWay" />
      <setter name="set_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="22633972-04e9-ff13-a737-8913496b3dd7" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.IsTerminating">
      <topicdata group="api" />
      <apidata name="IsTerminating" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsTerminating" />
      <setter name="set_IsTerminating" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="107c86c4-471b-726e-b5c5-f3737e847ae3" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="49efcf60-483e-eb7e-4571-287538fba262" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.ParameterInspectors">
      <topicdata group="api" />
      <apidata name="ParameterInspectors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterInspectors" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IParameterInspector" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="537528f6-b455-4727-daad-ed98722507cf" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="c7572cfa-e4c4-8ea9-37d5-20e344e8a14d" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.ReplyAction">
      <topicdata group="api" />
      <apidata name="ReplyAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReplyAction" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="ce27caa8-9342-152a-c367-3fd8d744dcd6" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.SerializeRequest">
      <topicdata group="api" />
      <apidata name="SerializeRequest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SerializeRequest" />
      <setter name="set_SerializeRequest" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="2ee93296-045c-9b60-bd80-2a99c166592f" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.SyncMethod">
      <topicdata group="api" />
      <apidata name="SyncMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SyncMethod" />
      <setter name="set_SyncMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="4ec7b3d0-ee67-8025-5e45-5e0e796a6494" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.TaskMethod">
      <topicdata group="api" />
      <apidata name="TaskMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TaskMethod" />
      <setter name="set_TaskMethod" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="11de696a-ac86-352b-16e8-4471ec698813" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperation.TaskTResult">
      <topicdata group="api" />
      <apidata name="TaskTResult" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TaskTResult" />
      <setter name="set_TaskTResult" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </containers>
      <file name="3bc13107-78c9-8e32-e3a5-a5a7f411ec34" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ClientOperationCompatBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ClientOperationCompatBase" />
      <apidata name="ClientOperationCompatBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="872d2757-2ce2-fb62-6e3c-0e798760bf5c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ClientOperationCompatBase">
      <topicdata name="ClientOperationCompatBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ClientOperationCompatBase" />
      <apidata name="ClientOperationCompatBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Dispatcher.ClientOperationCompatBase.ParameterInspectors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperationCompatBase" />
      </containers>
      <file name="2c04d5eb-d9e0-aba3-7cef-5bcc98c7751f" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ClientOperationCompatBase">
      <topicdata name="ClientOperationCompatBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ClientOperationCompatBase" />
      <apidata name="ClientOperationCompatBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperationCompatBase" />
      </containers>
      <file name="f9ed8fa7-da45-2806-6772-355afb214ef8" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.ClientOperationCompatBase">
      <topicdata name="ClientOperationCompatBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.ClientOperationCompatBase" />
      <apidata name="ClientOperationCompatBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.ClientOperationCompatBase.ParameterInspectors" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperationCompatBase" />
      </containers>
      <file name="d69fac1f-f78e-03cf-446f-e583bef899c2" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientOperationCompatBase.ParameterInspectors">
      <topicdata group="api" />
      <apidata name="ParameterInspectors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterInspectors" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IParameterInspector" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientOperationCompatBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bf77fc31-3e8c-88dc-0d1e-9489a4ca1765" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ClientRuntime">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ClientRuntime" />
      <apidata name="ClientRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="12d5e6e4-5f51-1ed5-7c80-ce2cd5414a66" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ClientRuntime">
      <topicdata name="ClientRuntime" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ClientRuntime" />
      <apidata name="ClientRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageVersionNoneFaultsEnabled" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.Via" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" />
      </containers>
      <file name="2f0235a2-342f-0348-0e94-0223232d8fdf" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ClientRuntime">
      <topicdata name="ClientRuntime" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ClientRuntime" />
      <apidata name="ClientRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" />
      </containers>
      <file name="415bd4ff-7521-b884-bd45-bad5563b9dbe" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.ClientRuntime">
      <topicdata name="ClientRuntime" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.ClientRuntime" />
      <apidata name="ClientRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageVersionNoneFaultsEnabled" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntime.Via" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" />
      </containers>
      <file name="93486724-04cd-b753-10fc-a63723ae213d" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackClientType">
      <topicdata group="api" />
      <apidata name="CallbackClientType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CallbackClientType" />
      <setter name="set_CallbackClientType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="d2ce73ae-262a-73b2-5c06-8327d1817657" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.CallbackDispatchRuntime">
      <topicdata group="api" />
      <apidata name="CallbackDispatchRuntime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CallbackDispatchRuntime" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="6275959b-03ae-d14e-4784-63ebded0e8db" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.ChannelInitializers">
      <topicdata group="api" />
      <apidata name="ChannelInitializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelInitializers" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IChannelInitializer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="a5910fbf-f2cd-294a-8df5-f9fab58ae220" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientMessageInspectors">
      <topicdata group="api" />
      <apidata name="ClientMessageInspectors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientMessageInspectors" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IClientMessageInspector" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="cf443f8b-7807-b34b-2eb4-cb679a9ecee3" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.ClientOperations">
      <topicdata group="api" />
      <apidata name="ClientOperations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientOperations" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="c4c32d05-8095-f7d1-c274-c323040b2f8f" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractClientType">
      <topicdata group="api" />
      <apidata name="ContractClientType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContractClientType" />
      <setter name="set_ContractClientType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="e2028983-cec5-342d-16be-25f2e0ef6dff" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractName">
      <topicdata group="api" />
      <apidata name="ContractName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContractName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="687daa9b-a82e-3a83-c950-dd22ab9fa9fb" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.ContractNamespace">
      <topicdata group="api" />
      <apidata name="ContractNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContractNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="1637f4be-93ef-9114-4fd3-205fa31134e1" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.InteractiveChannelInitializers">
      <topicdata group="api" />
      <apidata name="InteractiveChannelInitializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InteractiveChannelInitializers" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="9b4ec3cc-fbfc-1dad-ac38-b74d07266a60" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing">
      <topicdata group="api" />
      <apidata name="ManualAddressing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ManualAddressing" />
      <setter name="set_ManualAddressing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="1c835f41-86c4-3748-6a07-e18612e223e8" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.MaxFaultSize">
      <topicdata group="api" />
      <apidata name="MaxFaultSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxFaultSize" />
      <setter name="set_MaxFaultSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="d5a5e7fe-fa87-5f74-0368-bfee57a11432" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageInspectors">
      <topicdata group="api" />
      <apidata name="MessageInspectors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageInspectors" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IClientMessageInspector" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ba5e622b-8190-a2c5-4465-653faf24c362" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.MessageVersionNoneFaultsEnabled">
      <topicdata group="api" />
      <apidata name="MessageVersionNoneFaultsEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageVersionNoneFaultsEnabled" />
      <setter name="set_MessageVersionNoneFaultsEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="f26a9f9d-a6f2-f126-9b6b-7c33c1c1e347" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.Operations">
      <topicdata group="api" />
      <apidata name="Operations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Operations" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedKeyedCollection`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1a8ab195-9ffa-b7f8-eca2-6c29685a5db1" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.OperationSelector">
      <topicdata group="api" />
      <apidata name="OperationSelector" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationSelector" />
      <setter name="set_OperationSelector" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IClientOperationSelector" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="e42208c0-5867-891d-5a2c-29b7a3fbc61d" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.UnhandledClientOperation">
      <topicdata group="api" />
      <apidata name="UnhandledClientOperation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UnhandledClientOperation" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="ce69e4c4-0e77-3f26-acd0-2044b38c7dcf" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.ValidateMustUnderstand">
      <topicdata group="api" />
      <apidata name="ValidateMustUnderstand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidateMustUnderstand" />
      <setter name="set_ValidateMustUnderstand" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="238fdd1e-adb9-8460-c637-397ff8a744ea" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntime.Via">
      <topicdata group="api" />
      <apidata name="Via" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Via" />
      <setter name="set_Via" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </containers>
      <file name="cc30c03f-b632-69e1-3447-c160dd8fc351" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" />
      <apidata name="ClientRuntimeCompatBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="85c18167-fe6a-780f-fa24-85be982772bf" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase">
      <topicdata name="ClientRuntimeCompatBase" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" />
      <apidata name="ClientRuntimeCompatBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase.MessageInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase.Operations" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" />
      </containers>
      <file name="e5e597f2-7495-435c-ecb9-10e0fe4ead7c" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase">
      <topicdata name="ClientRuntimeCompatBase" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" />
      <apidata name="ClientRuntimeCompatBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" />
      </containers>
      <file name="9d1081b7-988b-991e-03ff-ab6d0f5638d8" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase">
      <topicdata name="ClientRuntimeCompatBase" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" />
      <apidata name="ClientRuntimeCompatBase" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase.MessageInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase.Operations" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" />
      </containers>
      <file name="3331fab3-7871-affd-eb52-2c73402d7204" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase.MessageInspectors">
      <topicdata group="api" />
      <apidata name="MessageInspectors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageInspectors" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IClientMessageInspector" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f438c88d-34f9-0740-1a17-ef984f985fab" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase.Operations">
      <topicdata group="api" />
      <apidata name="Operations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Operations" />
      <returns>
        <type api="T:System.Collections.ObjectModel.KeyedCollection`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.ServiceModel.Dispatcher.ClientOperation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntimeCompatBase" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.EditorBrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.ComponentModel.EditorBrowsableState" ref="false" />
            <enumValue>
              <field name="Never" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.</value>
          </argument>
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
      </attributes>
      <file name="74049762-d03a-c06a-cfc0-c430688c096b" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.DispatchOperation">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.DispatchOperation" />
      <apidata name="DispatchOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="d70fae7e-1acd-1cfa-0d0f-7bec3d71744c" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.DispatchOperation">
      <topicdata name="DispatchOperation" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.DispatchOperation" />
      <apidata name="DispatchOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.DispatchOperation.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String,System.String)" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Action" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.FaultContractInfos" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Invoker" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.IsInsideTransactedReceiveScope" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.IsTerminating" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Name" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.ReleaseInstanceAfterCall" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.ReleaseInstanceBeforeCall" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.ReplyAction" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.TransactionAutoComplete" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.TransactionRequired" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" />
      </containers>
      <file name="3eaaec02-2f41-e738-1349-96f8f82960e9" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.DispatchOperation">
      <topicdata name="DispatchOperation" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.DispatchOperation" />
      <apidata name="DispatchOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" />
      </containers>
      <file name="a54cb154-7a5e-920e-7f60-9d6007090035" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.DispatchOperation">
      <topicdata name="DispatchOperation" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.DispatchOperation" />
      <apidata name="DispatchOperation" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Action" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.FaultContractInfos" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Invoker" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.IsInsideTransactedReceiveScope" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.IsTerminating" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Name" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.ReleaseInstanceAfterCall" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.ReleaseInstanceBeforeCall" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.ReplyAction" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.TransactionAutoComplete" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchOperation.TransactionRequired" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" />
      </containers>
      <file name="cc3a0aa9-fedf-caad-e2ee-cca371a76c03" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.DispatchOperation.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.DispatchOperation" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="12d95756-fd4c-e69b-5369-69e537f28235" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.DispatchOperation.#ctor" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="6947eb78-fefb-51bd-9d57-6852b440bc77" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.DispatchOperation.#ctor(System.ServiceModel.Dispatcher.DispatchRuntime,System.String,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.DispatchOperation.#ctor" />
      <parameters>
        <parameter name="parent">
          <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="replyAction">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="fd4f04ba-0fef-bdcc-8ab8-480321ff3e04" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="cc3dc0fc-9037-e2ec-d445-1aca8e03dd5f" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.AutoDisposeParameters">
      <topicdata group="api" />
      <apidata name="AutoDisposeParameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoDisposeParameters" />
      <setter name="set_AutoDisposeParameters" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="d1e887ad-4bd5-426c-b5c6-28921f8dcf43" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.CallContextInitializers">
      <topicdata group="api" />
      <apidata name="CallContextInitializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CallContextInitializers" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.ICallContextInitializer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="86b97665-bda7-0786-26dd-e163d2ba488e" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.DeserializeRequest">
      <topicdata group="api" />
      <apidata name="DeserializeRequest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DeserializeRequest" />
      <setter name="set_DeserializeRequest" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="2ca850f3-ac41-7d1b-39d5-968a5f3d952d" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.FaultContractInfos">
      <topicdata group="api" />
      <apidata name="FaultContractInfos" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_FaultContractInfos" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.FaultContractInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="8a581365-0168-1ad1-8060-0dc1cddf2da1" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.Formatter">
      <topicdata group="api" />
      <apidata name="Formatter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Formatter" />
      <setter name="set_Formatter" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="838970f6-1c35-6d03-34d6-261341f331f1" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.Impersonation">
      <topicdata group="api" />
      <apidata name="Impersonation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Impersonation" />
      <setter name="set_Impersonation" />
      <returns>
        <type api="T:System.ServiceModel.ImpersonationOption" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="a3c3872e-436a-4749-ffcd-8df8f1fa60c6" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.Invoker">
      <topicdata group="api" />
      <apidata name="Invoker" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Invoker" />
      <setter name="set_Invoker" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IOperationInvoker" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="0eeeddc9-9a42-7b2c-ca77-427fba301733" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.IsInsideTransactedReceiveScope">
      <topicdata group="api" />
      <apidata name="IsInsideTransactedReceiveScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsInsideTransactedReceiveScope" />
      <setter name="set_IsInsideTransactedReceiveScope" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="24f96405-369e-daf9-b882-9b38479c5395" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.IsOneWay">
      <topicdata group="api" />
      <apidata name="IsOneWay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsOneWay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="72b00d5e-f183-ffa3-5ad6-8b2b3b783762" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.IsTerminating">
      <topicdata group="api" />
      <apidata name="IsTerminating" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsTerminating" />
      <setter name="set_IsTerminating" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="f245200a-6ac1-b257-a0e5-bf89d36cb867" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="d2b80b5c-33a7-7a6f-a2da-dd0693524a07" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.ParameterInspectors">
      <topicdata group="api" />
      <apidata name="ParameterInspectors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ParameterInspectors" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IParameterInspector" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="4a214d23-636b-2c7f-29c6-76f5489745d6" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.Parent">
      <topicdata group="api" />
      <apidata name="Parent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Parent" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="224dce4f-ad86-39a8-ea40-3982a7a1e5ca" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.ReleaseInstanceAfterCall">
      <topicdata group="api" />
      <apidata name="ReleaseInstanceAfterCall" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReleaseInstanceAfterCall" />
      <setter name="set_ReleaseInstanceAfterCall" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="cd775756-4eb1-a1f8-7eb9-13cc0bdbb69a" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.ReleaseInstanceBeforeCall">
      <topicdata group="api" />
      <apidata name="ReleaseInstanceBeforeCall" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReleaseInstanceBeforeCall" />
      <setter name="set_ReleaseInstanceBeforeCall" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="88af81e7-2adb-de27-c1cc-9a800b5abd28" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.ReplyAction">
      <topicdata group="api" />
      <apidata name="ReplyAction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReplyAction" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="f583e0ab-57a2-2545-ed38-2bf556419a3a" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.SerializeReply">
      <topicdata group="api" />
      <apidata name="SerializeReply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SerializeReply" />
      <setter name="set_SerializeReply" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="4c632afc-1952-e371-a843-2916355f15e9" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.TransactionAutoComplete">
      <topicdata group="api" />
      <apidata name="TransactionAutoComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionAutoComplete" />
      <setter name="set_TransactionAutoComplete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="9f44112b-46ba-ade3-da7d-e41da7a90c70" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchOperation.TransactionRequired">
      <topicdata group="api" />
      <apidata name="TransactionRequired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionRequired" />
      <setter name="set_TransactionRequired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </containers>
      <file name="e6114b4e-864f-b2ab-1cba-799502254a17" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.DispatchRuntime" />
      <apidata name="DispatchRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="ef4549c5-84c8-4c90-0479-82d8a7ad7028" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <topicdata name="DispatchRuntime" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.DispatchRuntime" />
      <apidata name="DispatchRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ConcurrencyMode" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.EnsureOrderedDispatch" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateOnSerializingReply" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextProvider" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.PreserveMessage" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.RoleProvider" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthenticationManager" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.SingletonInstanceContext" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.Type" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" />
      </containers>
      <file name="a843de6a-7611-87c5-bb30-acfe7345bd18" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <topicdata name="DispatchRuntime" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.DispatchRuntime" />
      <apidata name="DispatchRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" />
      </containers>
      <file name="53a79bd9-3fb4-d4c4-6e81-2e79c74d7348" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.DispatchRuntime">
      <topicdata name="DispatchRuntime" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.DispatchRuntime" />
      <apidata name="DispatchRuntime" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ConcurrencyMode" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.EnsureOrderedDispatch" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateOnSerializingReply" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextProvider" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.PreserveMessage" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.RoleProvider" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthenticationManager" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.SingletonInstanceContext" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.Type" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation" />
        <element api="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" />
      </containers>
      <file name="3b5ec576-ba62-4d65-b3ad-48aace0fb022" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.AutomaticInputSessionShutdown">
      <topicdata group="api" />
      <apidata name="AutomaticInputSessionShutdown" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutomaticInputSessionShutdown" />
      <setter name="set_AutomaticInputSessionShutdown" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="a692c164-c8cc-f727-5b0c-b7f620fcc3ad" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.CallbackClientRuntime">
      <topicdata group="api" />
      <apidata name="CallbackClientRuntime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CallbackClientRuntime" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.ClientRuntime" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="0ad9a7ad-3987-63cb-833a-1f79947d818e" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.ChannelDispatcher">
      <topicdata group="api" />
      <apidata name="ChannelDispatcher" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelDispatcher" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="0cee6ad4-6807-0f43-35b0-5cb057025eed" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.ConcurrencyMode">
      <topicdata group="api" />
      <apidata name="ConcurrencyMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ConcurrencyMode" />
      <setter name="set_ConcurrencyMode" />
      <returns>
        <type api="T:System.ServiceModel.ConcurrencyMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="a6547aea-de55-8856-4511-153395f3c8fd" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.EndpointDispatcher">
      <topicdata group="api" />
      <apidata name="EndpointDispatcher" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndpointDispatcher" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="ddf4744e-4873-3f1f-5da4-2f53cb640d91" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.EnsureOrderedDispatch">
      <topicdata group="api" />
      <apidata name="EnsureOrderedDispatch" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EnsureOrderedDispatch" />
      <setter name="set_EnsureOrderedDispatch" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="185b7387-20f8-8100-d37b-af89b460399c" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.ExternalAuthorizationPolicies">
      <topicdata group="api" />
      <apidata name="ExternalAuthorizationPolicies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ExternalAuthorizationPolicies" />
      <setter name="set_ExternalAuthorizationPolicies" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:System.IdentityModel.Policy.IAuthorizationPolicy" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="8fbb355f-9028-2089-4be7-9726a9da5013" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.IgnoreTransactionMessageProperty">
      <topicdata group="api" />
      <apidata name="IgnoreTransactionMessageProperty" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IgnoreTransactionMessageProperty" />
      <setter name="set_IgnoreTransactionMessageProperty" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="334d8933-8459-aa13-b204-2b95c1759cfe" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateCallerForAllOperations">
      <topicdata group="api" />
      <apidata name="ImpersonateCallerForAllOperations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ImpersonateCallerForAllOperations" />
      <setter name="set_ImpersonateCallerForAllOperations" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="152c93c9-3ba1-4a47-32d8-aaaa7a262dce" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.ImpersonateOnSerializingReply">
      <topicdata group="api" />
      <apidata name="ImpersonateOnSerializingReply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ImpersonateOnSerializingReply" />
      <setter name="set_ImpersonateOnSerializingReply" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="f8b13a54-e08c-fa6a-71e0-58d8ff92556b" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.InputSessionShutdownHandlers">
      <topicdata group="api" />
      <apidata name="InputSessionShutdownHandlers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InputSessionShutdownHandlers" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="c69a6427-5b3c-d1ed-729b-4b7df9476601" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextInitializers">
      <topicdata group="api" />
      <apidata name="InstanceContextInitializers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceContextInitializers" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="b7b38237-b159-5303-fcf3-640744101fde" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceContextProvider">
      <topicdata group="api" />
      <apidata name="InstanceContextProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceContextProvider" />
      <setter name="set_InstanceContextProvider" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="2202799a-8fc7-b452-797f-7dc903ae8f4c" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.InstanceProvider">
      <topicdata group="api" />
      <apidata name="InstanceProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceProvider" />
      <setter name="set_InstanceProvider" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IInstanceProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="dae7402a-85cf-8396-db2d-c12760f6ca68" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageAuthenticationAuditLevel">
      <topicdata group="api" />
      <apidata name="MessageAuthenticationAuditLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageAuthenticationAuditLevel" />
      <setter name="set_MessageAuthenticationAuditLevel" />
      <returns>
        <type api="T:System.ServiceModel.AuditLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="690685e0-bab1-05be-4c02-2ce09d9be0af" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.MessageInspectors">
      <topicdata group="api" />
      <apidata name="MessageInspectors" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MessageInspectors" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedCollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="86653308-2323-a670-d119-ea644f6b1fea" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.Operations">
      <topicdata group="api" />
      <apidata name="Operations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Operations" />
      <returns>
        <type api="T:System.Collections.Generic.SynchronizedKeyedCollection`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="455777d9-cc70-b5a6-1ee1-861a7da5f6e0" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.OperationSelector">
      <topicdata group="api" />
      <apidata name="OperationSelector" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationSelector" />
      <setter name="set_OperationSelector" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="6c150899-f1a6-8a2b-900d-e66b6cbacbd5" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.PreserveMessage">
      <topicdata group="api" />
      <apidata name="PreserveMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PreserveMessage" />
      <setter name="set_PreserveMessage" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="477dca33-1fdc-e03a-a32d-d1c15584c006" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.PrincipalPermissionMode">
      <topicdata group="api" />
      <apidata name="PrincipalPermissionMode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrincipalPermissionMode" />
      <setter name="set_PrincipalPermissionMode" />
      <returns>
        <type api="T:System.ServiceModel.Description.PrincipalPermissionMode" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="11b941ea-1ad8-5752-8cde-33c39aeab560" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.ReleaseServiceInstanceOnTransactionComplete">
      <topicdata group="api" />
      <apidata name="ReleaseServiceInstanceOnTransactionComplete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReleaseServiceInstanceOnTransactionComplete" />
      <setter name="set_ReleaseServiceInstanceOnTransactionComplete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="f4fe3b37-46dc-2830-75b8-830c96406d5e" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.RoleProvider">
      <topicdata group="api" />
      <apidata name="RoleProvider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RoleProvider" />
      <setter name="set_RoleProvider" />
      <returns>
        <type api="T:System.Web.Security.RoleProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="74c47589-713e-988e-1359-8292811f63fd" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.SecurityAuditLogLocation">
      <topicdata group="api" />
      <apidata name="SecurityAuditLogLocation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SecurityAuditLogLocation" />
      <setter name="set_SecurityAuditLogLocation" />
      <returns>
        <type api="T:System.ServiceModel.AuditLogLocation" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="e320c592-4242-0403-eb5a-e9e081ba968b" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthenticationManager">
      <topicdata group="api" />
      <apidata name="ServiceAuthenticationManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceAuthenticationManager" />
      <setter name="set_ServiceAuthenticationManager" />
      <returns>
        <type api="T:System.ServiceModel.ServiceAuthenticationManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="12002679-4ec0-d09e-dac4-0b741d6c0779" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationAuditLevel">
      <topicdata group="api" />
      <apidata name="ServiceAuthorizationAuditLevel" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceAuthorizationAuditLevel" />
      <setter name="set_ServiceAuthorizationAuditLevel" />
      <returns>
        <type api="T:System.ServiceModel.AuditLevel" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="00fd215e-e380-d467-0e5a-38784df35b8f" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.ServiceAuthorizationManager">
      <topicdata group="api" />
      <apidata name="ServiceAuthorizationManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceAuthorizationManager" />
      <setter name="set_ServiceAuthorizationManager" />
      <returns>
        <type api="T:System.ServiceModel.ServiceAuthorizationManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="0fb5cdba-de99-ce66-247e-08ee3b499341" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.SingletonInstanceContext">
      <topicdata group="api" />
      <apidata name="SingletonInstanceContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SingletonInstanceContext" />
      <setter name="set_SingletonInstanceContext" />
      <returns>
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="d6d2b69c-9dc9-99af-6f1e-64b68c17255b" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.SuppressAuditFailure">
      <topicdata group="api" />
      <apidata name="SuppressAuditFailure" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SuppressAuditFailure" />
      <setter name="set_SuppressAuditFailure" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="20f1434d-f4f6-efd8-d536-88e13470d708" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.SynchronizationContext">
      <topicdata group="api" />
      <apidata name="SynchronizationContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SynchronizationContext" />
      <setter name="set_SynchronizationContext" />
      <returns>
        <type api="T:System.Threading.SynchronizationContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="845c957d-f47f-1576-dd66-6d87ec3a0fb1" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.TransactionAutoCompleteOnSessionClose">
      <topicdata group="api" />
      <apidata name="TransactionAutoCompleteOnSessionClose" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransactionAutoCompleteOnSessionClose" />
      <setter name="set_TransactionAutoCompleteOnSessionClose" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="81eebb84-3cab-0990-054d-56201bd9ad23" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Type" />
      <setter name="set_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="041dae87-96d6-c4a9-208f-7ce20e1478b4" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.UnhandledDispatchOperation">
      <topicdata group="api" />
      <apidata name="UnhandledDispatchOperation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UnhandledDispatchOperation" />
      <setter name="set_UnhandledDispatchOperation" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.DispatchOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="8a3d15e0-e657-f90e-3993-4ef6f38fdeb3" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DispatchRuntime.ValidateMustUnderstand">
      <topicdata group="api" />
      <apidata name="ValidateMustUnderstand" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ValidateMustUnderstand" />
      <setter name="set_ValidateMustUnderstand" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </containers>
      <file name="26d38ff8-b9ab-ee46-3526-ea5790ea5ecb" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.DurableOperationContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.DurableOperationContext" />
      <apidata name="DurableOperationContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*</value>
          </argument>
        </attribute>
      </attributes>
      <file name="c619dc2a-7c34-a7e4-7e59-8d51cccd733e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.DurableOperationContext">
      <topicdata name="DurableOperationContext" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.DurableOperationContext" />
      <apidata name="DurableOperationContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.DurableOperationContext.AbortInstance" />
        <element api="M:System.ServiceModel.Dispatcher.DurableOperationContext.CompleteInstance" />
        <element api="P:System.ServiceModel.Dispatcher.DurableOperationContext.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DurableOperationContext" />
      </containers>
      <file name="2ecbc52c-0f20-3b38-0c1f-57f3a01a73f1" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.DurableOperationContext">
      <topicdata name="DurableOperationContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.DurableOperationContext" />
      <apidata name="DurableOperationContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.DurableOperationContext.AbortInstance" />
        <element api="M:System.ServiceModel.Dispatcher.DurableOperationContext.CompleteInstance" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DurableOperationContext" />
      </containers>
      <file name="a84fd1ac-46c5-0f8c-2da1-d72d11c9104b" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.DurableOperationContext">
      <topicdata name="DurableOperationContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.DurableOperationContext" />
      <apidata name="DurableOperationContext" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.DurableOperationContext.InstanceId" />
      </elements>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DurableOperationContext" />
      </containers>
      <file name="85533d16-7d67-c9b7-2eba-36a60df59d2e" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.DurableOperationContext.AbortInstance">
      <topicdata group="api" />
      <apidata name="AbortInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DurableOperationContext" ref="true" />
      </containers>
      <file name="64003cc7-3fc3-f801-a082-369c5d108f44" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.DurableOperationContext.CompleteInstance">
      <topicdata group="api" />
      <apidata name="CompleteInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DurableOperationContext" ref="true" />
      </containers>
      <file name="679fb2b7-8fbf-d3e4-24cb-057e1f867f7b" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.DurableOperationContext.InstanceId">
      <topicdata group="api" />
      <apidata name="InstanceId" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceId" />
      <returns>
        <type api="T:System.Guid" ref="false" />
      </returns>
      <containers>
        <library assembly="System.WorkflowServices" module="System.WorkflowServices" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.DurableOperationContext" ref="true" />
      </containers>
      <file name="e2f6fba0-64e1-72d8-eaec-bfc043674f00" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
      <apidata name="EndpointAddressMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="2bf1b857-164e-220c-fa62-9686b4400e3e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
      <topicdata name="EndpointAddressMessageFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
      <apidata name="EndpointAddressMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
        <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
        <element api="Overload:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
      </containers>
      <file name="a8869a99-91f4-06f4-665c-291ced3a1421" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
      <topicdata name="EndpointAddressMessageFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
      <apidata name="EndpointAddressMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1" />
        <element api="Overload:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
      </containers>
      <file name="f37a05cb-2001-1f0d-d633-036bca8176af" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
      <topicdata name="EndpointAddressMessageFilter" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
      <apidata name="EndpointAddressMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
      </containers>
      <file name="28dd1b16-36ed-37a7-07a8-feb41092d45c" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="1b87c98d-df2b-574c-d162-e5177cfbb643" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match">
      <topicdata name="Match" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
      <apidata name="Match" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="83d25e17-a37b-9fed-3964-fda298eea4bb" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="0d14da55-326b-5a32-9828-2c740c979bee" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="includeHostNameInComparison">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="d8918fa0-fd55-0a38-29b4-1e17847ff894" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Address" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="cf67ac54-3c13-1486-3da6-31dc4c434aba" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1">
      <topicdata group="api" />
      <apidata name="CreateFilterTable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="FilterData" />
      </templates>
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
          <specialization>
            <template name="FilterData" index="0" api="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="d5732a1b-3373-6584-fce9-ac841f50ef47" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison">
      <topicdata group="api" />
      <apidata name="IncludeHostNameInComparison" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncludeHostNameInComparison" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="9488d9ae-d75e-1ea7-c917-20e6960c2428" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="c329c7a3-ea68-30dc-205c-0f8645362729" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="787f988d-bd5c-cea4-ec96-569732d70fc2" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
      <apidata name="EndpointDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="f93d93aa-faf7-85bb-8749-1f6476d69e20" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <topicdata name="EndpointDispatcher" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
      <apidata name="EndpointDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String,System.Boolean)" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </containers>
      <file name="5cc56a02-648d-ce12-599d-442fc66c0739" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <topicdata name="EndpointDispatcher" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
      <apidata name="EndpointDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </containers>
      <file name="217cca52-50f2-1895-3cc4-0ddd230fa8ea" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.EndpointDispatcher">
      <topicdata name="EndpointDispatcher" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
      <apidata name="EndpointDispatcher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority" />
        <element api="P:System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
      </containers>
      <file name="801d5622-2b59-f876-5c03-a50845c948c8" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.EndpointDispatcher" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="e95b7e62-3df4-72b3-680c-5a9adfb2323c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contractNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="69ab0cff-745a-7778-81d6-7481915b82c8" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor(System.ServiceModel.EndpointAddress,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.EndpointDispatcher.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="contractName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contractNamespace">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isSystemEndpoint">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="6eb2e8f1-8cab-0133-ebfa-ea822a30b25c" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter">
      <topicdata group="api" />
      <apidata name="AddressFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AddressFilter" />
      <setter name="set_AddressFilter" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="6314b129-240b-e51b-d970-8f6184349ed7" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ChannelDispatcher">
      <topicdata group="api" />
      <apidata name="ChannelDispatcher" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelDispatcher" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.ChannelDispatcher" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="6679d939-dc8b-613b-dd4d-91731c459d79" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter">
      <topicdata group="api" />
      <apidata name="ContractFilter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ContractFilter" />
      <setter name="set_ContractFilter" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="df0246af-a165-9eaf-dce7-fa74c1f759cf" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractName">
      <topicdata group="api" />
      <apidata name="ContractName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContractName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="6347a6d9-dfa7-da0b-4659-c3e6fd59f197" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractNamespace">
      <topicdata group="api" />
      <apidata name="ContractNamespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContractNamespace" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="e33b3e8e-d54e-ddce-cd95-b00ae2dcf4e7" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointDispatcher.DispatchRuntime">
      <topicdata group="api" />
      <apidata name="DispatchRuntime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DispatchRuntime" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.DispatchRuntime" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="08baf1a7-a58c-d2ec-c86d-94a5abd2e0b6" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointDispatcher.EndpointAddress">
      <topicdata group="api" />
      <apidata name="EndpointAddress" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndpointAddress" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="9282b8a5-670a-eac8-bb35-4aadf6245db4" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointDispatcher.FilterPriority">
      <topicdata group="api" />
      <apidata name="FilterPriority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FilterPriority" />
      <setter name="set_FilterPriority" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="9d52c058-485e-aca1-8ac3-c2072d2d100e" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.EndpointDispatcher.IsSystemEndpoint">
      <topicdata group="api" />
      <apidata name="IsSystemEndpoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSystemEndpoint" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointDispatcher" ref="true" />
      </containers>
      <file name="b9c68284-f49a-7584-49e0-3e5d1be2ec67" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" />
      <apidata name="EndpointNameMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="61d0dbf9-2e8b-60d9-8f24-f39aa80704b5" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter">
      <topicdata name="EndpointNameMessageFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" />
      <apidata name="EndpointNameMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.#ctor(System.String)" />
        <element api="Overload:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" />
      </containers>
      <file name="83d1db0e-0453-cc5e-244e-66b12e58e665" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter">
      <topicdata name="EndpointNameMessageFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" />
      <apidata name="EndpointNameMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" />
      </containers>
      <file name="e77cc34e-4e77-7a49-0d22-5e9fb3c3c3b6" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match">
      <topicdata name="Match" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" />
      <apidata name="Match" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" ref="true" />
      </containers>
      <file name="17c1e5b0-6185-d0fe-08b7-9d14fb4903db" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="endpointName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" ref="true" />
      </containers>
      <file name="78e63e20-60c3-97bf-54e0-49b37b01a5e6" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" ref="true" />
      </containers>
      <file name="11af91ec-ac15-eb04-cc0b-6fb5b8be1821" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.EndpointNameMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" ref="true" />
      </containers>
      <file name="8acd79df-380a-0c49-2ed0-f530a2436758" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ExceptionHandler">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ExceptionHandler" />
      <apidata name="ExceptionHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="85dd539c-f8ea-6709-21a7-18247ee4505e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ExceptionHandler">
      <topicdata name="ExceptionHandler" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ExceptionHandler" />
      <apidata name="ExceptionHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.ExceptionHandler.#ctor" />
        <element api="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle" />
        <element api="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler" />
        <element api="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)" />
        <element api="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" />
      </containers>
      <file name="a2f77b7a-414a-1943-0407-d150d6454834" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ExceptionHandler">
      <topicdata name="ExceptionHandler" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ExceptionHandler" />
      <apidata name="ExceptionHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" />
      </containers>
      <file name="4af9ab77-8eae-45d8-3eaf-bce8d255bf93" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.ExceptionHandler">
      <topicdata name="ExceptionHandler" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.ExceptionHandler" />
      <apidata name="ExceptionHandler" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle" />
        <element api="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler" />
        <element api="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" />
      </containers>
      <file name="3050d7ce-d3dc-8bc2-c986-85a2b45b77eb" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ExceptionHandler.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" ref="true" />
      </containers>
      <file name="c347734e-2dac-1cd6-120a-23c740787838" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ExceptionHandler.AlwaysHandle">
      <topicdata group="api" />
      <apidata name="AlwaysHandle" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AlwaysHandle" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" ref="true" />
      </containers>
      <file name="e247ba3f-71e5-abad-3d27-b85228f2ed99" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ExceptionHandler.AsynchronousThreadExceptionHandler">
      <topicdata group="api" />
      <apidata name="AsynchronousThreadExceptionHandler" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AsynchronousThreadExceptionHandler" />
      <setter name="set_AsynchronousThreadExceptionHandler" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" ref="true" />
      </containers>
      <file name="ca28eb06-57d1-5d55-93f8-6ee5e6d39b93" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ExceptionHandler.HandleException(System.Exception)">
      <topicdata group="api" />
      <apidata name="HandleException" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" ref="true" />
      </containers>
      <file name="594b2e4d-2e27-6da8-9d3a-5c7b49855db1" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ExceptionHandler.TransportExceptionHandler">
      <topicdata group="api" />
      <apidata name="TransportExceptionHandler" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TransportExceptionHandler" />
      <setter name="set_TransportExceptionHandler" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ExceptionHandler" ref="true" />
      </containers>
      <file name="6bf561cc-418c-b71f-9ad6-8ac03fa52e15" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.FaultContractInfo" />
      <apidata name="FaultContractInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="d7adad7d-a1cb-47d6-c00e-1d62ffa6fa56" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <topicdata name="FaultContractInfo" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.FaultContractInfo" />
      <apidata name="FaultContractInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)" />
        <element api="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action" />
        <element api="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FaultContractInfo" />
      </containers>
      <file name="7c9a96a8-1d0c-1bd1-7c1e-2d17e59a2aad" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <topicdata name="FaultContractInfo" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.FaultContractInfo" />
      <apidata name="FaultContractInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FaultContractInfo" />
      </containers>
      <file name="ad980c00-267b-cb65-756a-48264683a113" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.FaultContractInfo">
      <topicdata name="FaultContractInfo" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.FaultContractInfo" />
      <apidata name="FaultContractInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action" />
        <element api="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FaultContractInfo" />
      </containers>
      <file name="bc0c3f60-0f9b-ef2a-aeb7-2cb6b31e5abf" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.FaultContractInfo.#ctor(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="action">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="detail">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FaultContractInfo" ref="true" />
      </containers>
      <file name="b2b99cd5-95d0-5f25-1846-393df7856489" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.FaultContractInfo.Action">
      <topicdata group="api" />
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Action" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FaultContractInfo" ref="true" />
      </containers>
      <file name="11877f17-ab46-4188-94bf-bf5abbacac97" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.FaultContractInfo.Detail">
      <topicdata group="api" />
      <apidata name="Detail" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Detail" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FaultContractInfo" ref="true" />
      </containers>
      <file name="4a65ce41-fac3-7a89-b83d-cdb4bfb89425" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
      <apidata name="FilterInvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="27e48042-bdda-0520-210e-db02ecb5238f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException">
      <topicdata name="FilterInvalidBodyAccessException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
      <apidata name="FilterInvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
          <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.Filters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
      </containers>
      <file name="d2578207-aca6-617e-034f-635a700ccdb3" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException">
      <topicdata name="FilterInvalidBodyAccessException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
      <apidata name="FilterInvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
      </containers>
      <file name="1836230f-96b8-8904-2d83-ff41addb3596" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException">
      <topicdata name="FilterInvalidBodyAccessException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
      <apidata name="FilterInvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.Filters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
      </containers>
      <file name="35d7cabc-b3d3-7104-64da-7ae3d0533464" />
    </api>
    <api id="Events.T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException">
      <topicdata name="FilterInvalidBodyAccessException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
      <apidata name="FilterInvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
      </containers>
      <file name="3ede0488-f2d2-b56f-a3c3-3991c3c97ce9" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
        <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="70ce9626-a86e-0feb-e1d4-b8d492aa275a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="c82fafe6-4bd3-5b62-aa3d-b555e180b33d" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="63985194-98ce-6cbd-92ef-178feb30f6ca" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="86f08d47-4e1a-3f5a-c706-992860a41a8d" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="filters">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="592501c0-5006-0985-a95a-c7e2f57047da" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="02e0c280-02df-3d72-a765-3595ea387b72" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="filters">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="a36b233c-86b0-44dc-f40d-de2372d22738" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException.Filters">
      <topicdata group="api" />
      <apidata name="Filters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Filters" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="642a79d8-c194-f62b-e237-9198dd12accd" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ICallContextInitializer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ICallContextInitializer" />
      <apidata name="ICallContextInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="e235d613-85e5-aa50-0caf-28e3e20634f8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ICallContextInitializer">
      <topicdata name="ICallContextInitializer" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ICallContextInitializer" />
      <apidata name="ICallContextInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ICallContextInitializer" />
      </containers>
      <file name="c1771ac4-19ee-3d05-860e-c9fa1fbdf662" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ICallContextInitializer">
      <topicdata name="ICallContextInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ICallContextInitializer" />
      <apidata name="ICallContextInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ICallContextInitializer" />
      </containers>
      <file name="7078af70-d696-57f1-ec7e-4cdbf93c9c7a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ICallContextInitializer.AfterInvoke(System.Object)">
      <topicdata group="api" />
      <apidata name="AfterInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="correlationState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ICallContextInitializer" ref="true" />
      </containers>
      <file name="6e32fe83-d5e0-9571-d9a9-04ffe630440e" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.ICallContextInitializer.BeforeInvoke(System.ServiceModel.InstanceContext,System.ServiceModel.IClientChannel,System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="BeforeInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceContext">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ICallContextInitializer" ref="true" />
      </containers>
      <file name="547afcdc-3ad3-ea71-ca59-5b546241cd1b" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IChannelInitializer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IChannelInitializer" />
      <apidata name="IChannelInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="11bfa7a1-c136-6b33-59d2-3ecc3b9483f3" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IChannelInitializer">
      <topicdata name="IChannelInitializer" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IChannelInitializer" />
      <apidata name="IChannelInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IChannelInitializer.Initialize(System.ServiceModel.IClientChannel)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IChannelInitializer" />
      </containers>
      <file name="df8f0e2e-8a5e-83f9-8e6e-1f45b7840d9d" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IChannelInitializer">
      <topicdata name="IChannelInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IChannelInitializer" />
      <apidata name="IChannelInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IChannelInitializer.Initialize(System.ServiceModel.IClientChannel)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IChannelInitializer" />
      </containers>
      <file name="3fdffed3-9ea9-90f0-2a46-51fc823cdb82" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IChannelInitializer.Initialize(System.ServiceModel.IClientChannel)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IChannelInitializer" ref="true" />
      </containers>
      <file name="15575e1e-145f-d969-deb5-6de61ebfb278" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />
      <apidata name="IClientMessageFormatter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="15295579-ad18-9f3d-1c64-85f38375016f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <topicdata name="IClientMessageFormatter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />
      <apidata name="IClientMessageFormatter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])" />
        <element api="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />
      </containers>
      <file name="7714f83a-7395-7b2d-024e-abf4c3376770" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IClientMessageFormatter">
      <topicdata name="IClientMessageFormatter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />
      <apidata name="IClientMessageFormatter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])" />
        <element api="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" />
      </containers>
      <file name="12893f44-5e30-0844-7866-466ebfdbc2ee" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.DeserializeReply(System.ServiceModel.Channels.Message,System.Object[])">
      <topicdata group="api" />
      <apidata name="DeserializeReply" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" ref="true" />
      </containers>
      <file name="74c6a835-c680-1c8e-409f-362c1537cc50" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IClientMessageFormatter.SerializeRequest(System.ServiceModel.Channels.MessageVersion,System.Object[])">
      <topicdata group="api" />
      <apidata name="SerializeRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="messageVersion">
          <type api="T:System.ServiceModel.Channels.MessageVersion" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientMessageFormatter" ref="true" />
      </containers>
      <file name="3d97455d-daf0-815f-651a-fa7757bce4fc" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IClientMessageInspector" />
      <apidata name="IClientMessageInspector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="3ca492b3-f4bb-2870-b35d-871421f12100" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <topicdata name="IClientMessageInspector" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IClientMessageInspector" />
      <apidata name="IClientMessageInspector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientMessageInspector" />
      </containers>
      <file name="6402e380-f53b-22f2-ab90-c0245df09e68" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IClientMessageInspector">
      <topicdata name="IClientMessageInspector" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IClientMessageInspector" />
      <apidata name="IClientMessageInspector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientMessageInspector" />
      </containers>
      <file name="d488a922-df8d-66d8-8a3f-3c94076c13d4" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IClientMessageInspector.AfterReceiveReply(System.ServiceModel.Channels.Message@,System.Object)">
      <topicdata group="api" />
      <apidata name="AfterReceiveReply" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reply">
          <referenceTo>
            <type api="T:System.ServiceModel.Channels.Message" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="correlationState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientMessageInspector" ref="true" />
      </containers>
      <file name="555bc9c5-e717-a27c-2043-5033923d7e9c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IClientMessageInspector.BeforeSendRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel)">
      <topicdata group="api" />
      <apidata name="BeforeSendRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <referenceTo>
            <type api="T:System.ServiceModel.Channels.Message" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientMessageInspector" ref="true" />
      </containers>
      <file name="9a0521a7-127e-1605-6d5a-185917b1cb3a" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IClientOperationSelector" />
      <apidata name="IClientOperationSelector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="45ee05a2-1903-6517-3184-46f69e48df78" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <topicdata name="IClientOperationSelector" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />
      <apidata name="IClientOperationSelector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection" />
        <element api="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />
      </containers>
      <file name="eab0ccc9-7b05-f67b-c567-63d35851d148" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <topicdata name="IClientOperationSelector" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />
      <apidata name="IClientOperationSelector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />
      </containers>
      <file name="3681cc22-4355-3811-6363-bee7ddd68cd0" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.IClientOperationSelector">
      <topicdata name="IClientOperationSelector" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />
      <apidata name="IClientOperationSelector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientOperationSelector" />
      </containers>
      <file name="fe6cd040-20a8-64f3-773b-b44796f95a0a" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.IClientOperationSelector.AreParametersRequiredForSelection">
      <topicdata group="api" />
      <apidata name="AreParametersRequiredForSelection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AreParametersRequiredForSelection" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientOperationSelector" ref="true" />
      </containers>
      <file name="fc678441-8478-cbf6-4750-43c3a2f362b3" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IClientOperationSelector.SelectOperation(System.Reflection.MethodBase,System.Object[])">
      <topicdata group="api" />
      <apidata name="SelectOperation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodBase" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IClientOperationSelector" ref="true" />
      </containers>
      <file name="815528bc-356e-a672-c21a-2e87650254ab" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" />
      <apidata name="IDispatchMessageFormatter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="ee4c41f6-d855-bd55-e69d-9b47ad2c7d0a" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <topicdata name="IDispatchMessageFormatter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" />
      <apidata name="IDispatchMessageFormatter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])" />
        <element api="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" />
      </containers>
      <file name="2d7e95fa-fb9e-33c5-60f3-2f0a50f3c0ef" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter">
      <topicdata name="IDispatchMessageFormatter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" />
      <apidata name="IDispatchMessageFormatter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])" />
        <element api="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" />
      </containers>
      <file name="7cdaa53b-3308-e394-690d-7774f42ee469" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.DeserializeRequest(System.ServiceModel.Channels.Message,System.Object[])">
      <topicdata group="api" />
      <apidata name="DeserializeRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" ref="true" />
      </containers>
      <file name="87f46564-abab-2fab-47a4-28b8cfe1cc35" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IDispatchMessageFormatter.SerializeReply(System.ServiceModel.Channels.MessageVersion,System.Object[],System.Object)">
      <topicdata group="api" />
      <apidata name="SerializeReply" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="messageVersion">
          <type api="T:System.ServiceModel.Channels.MessageVersion" ref="true" />
        </parameter>
        <parameter name="parameters">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="result">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Channels.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchMessageFormatter" ref="true" />
      </containers>
      <file name="0f35d962-f5cd-6dad-65dd-ab6ad265b467" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />
      <apidata name="IDispatchMessageInspector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="0fa43c55-5d1f-e1ff-9779-6a3dbf89d411" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IDispatchMessageInspector">
      <topicdata name="IDispatchMessageInspector" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />
      <apidata name="IDispatchMessageInspector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)" />
        <element api="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />
      </containers>
      <file name="a2d6bff5-2cad-d139-bc55-9560afaadbd5" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IDispatchMessageInspector">
      <topicdata name="IDispatchMessageInspector" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />
      <apidata name="IDispatchMessageInspector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)" />
        <element api="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" />
      </containers>
      <file name="cb5899c2-697a-e27a-ee4e-b8e760d5a5aa" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.AfterReceiveRequest(System.ServiceModel.Channels.Message@,System.ServiceModel.IClientChannel,System.ServiceModel.InstanceContext)">
      <topicdata group="api" />
      <apidata name="AfterReceiveRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <referenceTo>
            <type api="T:System.ServiceModel.Channels.Message" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </parameter>
        <parameter name="instanceContext">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" ref="true" />
      </containers>
      <file name="572d820a-94ce-edcc-33e4-5411f32b6a01" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IDispatchMessageInspector.BeforeSendReply(System.ServiceModel.Channels.Message@,System.Object)">
      <topicdata group="api" />
      <apidata name="BeforeSendReply" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reply">
          <referenceTo>
            <type api="T:System.ServiceModel.Channels.Message" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="correlationState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchMessageInspector" ref="true" />
      </containers>
      <file name="fd5d2097-33a5-9df3-987e-8c8c94305b7e" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" />
      <apidata name="IDispatchOperationSelector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="3fa837ff-3846-ee98-d8d2-1420543316d9" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IDispatchOperationSelector">
      <topicdata name="IDispatchOperationSelector" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" />
      <apidata name="IDispatchOperationSelector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" />
      </containers>
      <file name="c7e2f4f0-f111-6b26-fbb0-c1f88507f5ca" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IDispatchOperationSelector">
      <topicdata name="IDispatchOperationSelector" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" />
      <apidata name="IDispatchOperationSelector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" />
      </containers>
      <file name="e480af33-124c-800d-4551-3db71ec751d8" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)">
      <topicdata group="api" />
      <apidata name="SelectOperation" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <referenceTo>
            <type api="T:System.ServiceModel.Channels.Message" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" ref="true" />
      </containers>
      <file name="6051a06f-87d1-16b2-91e1-d2b171e2b21a" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IErrorHandler">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IErrorHandler" />
      <apidata name="IErrorHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="590fb9eb-a901-581f-7a7e-4fc1a8f15d1e" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IErrorHandler">
      <topicdata name="IErrorHandler" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IErrorHandler" />
      <apidata name="IErrorHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)" />
        <element api="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IErrorHandler" />
      </containers>
      <file name="67b03f2c-4f4d-1bdc-8b71-e3e837a7d23a" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IErrorHandler">
      <topicdata name="IErrorHandler" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IErrorHandler" />
      <apidata name="IErrorHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)" />
        <element api="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IErrorHandler" />
      </containers>
      <file name="7d88e55b-2d75-9952-1bb4-c12f5b5bfa86" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IErrorHandler.HandleError(System.Exception)">
      <topicdata group="api" />
      <apidata name="HandleError" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IErrorHandler" ref="true" />
      </containers>
      <file name="8ac4f3a6-7dff-5acf-df7c-5e58afdeb884" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IErrorHandler.ProvideFault(System.Exception,System.ServiceModel.Channels.MessageVersion,System.ServiceModel.Channels.Message@)">
      <topicdata group="api" />
      <apidata name="ProvideFault" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="version">
          <type api="T:System.ServiceModel.Channels.MessageVersion" ref="true" />
        </parameter>
        <parameter name="fault">
          <referenceTo>
            <type api="T:System.ServiceModel.Channels.Message" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IErrorHandler" ref="true" />
      </containers>
      <file name="af54ebbd-3722-8abe-71f7-b2235329b09b" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IInputSessionShutdown">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />
      <apidata name="IInputSessionShutdown" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="a73d75b5-7918-ffcd-1cff-db75ac490ebd" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IInputSessionShutdown">
      <topicdata name="IInputSessionShutdown" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />
      <apidata name="IInputSessionShutdown" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted(System.ServiceModel.IDuplexContextChannel)" />
        <element api="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving(System.ServiceModel.IDuplexContextChannel)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />
      </containers>
      <file name="db5ad3c8-4e56-519a-2825-0dc5a1bc8098" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IInputSessionShutdown">
      <topicdata name="IInputSessionShutdown" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />
      <apidata name="IInputSessionShutdown" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted(System.ServiceModel.IDuplexContextChannel)" />
        <element api="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving(System.ServiceModel.IDuplexContextChannel)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />
      </containers>
      <file name="880ae149-7967-affe-00a6-d2780d95b80b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted(System.ServiceModel.IDuplexContextChannel)">
      <topicdata group="api" />
      <apidata name="ChannelFaulted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" ref="true" />
      </containers>
      <file name="6b484ced-1361-9fc1-c944-a170d6765628" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving(System.ServiceModel.IDuplexContextChannel)">
      <topicdata group="api" />
      <apidata name="DoneReceiving" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IDuplexContextChannel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" ref="true" />
      </containers>
      <file name="70488839-ad05-49fe-1849-f02cbf93c963" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />
      <apidata name="IInstanceContextInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="445304eb-6767-f1e8-741d-be8bf2ff8151" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IInstanceContextInitializer">
      <topicdata name="IInstanceContextInitializer" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />
      <apidata name="IInstanceContextInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />
      </containers>
      <file name="9de4da65-a498-f43f-5846-1fecf66b2545" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IInstanceContextInitializer">
      <topicdata name="IInstanceContextInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />
      <apidata name="IInstanceContextInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" />
      </containers>
      <file name="ae6430f4-3cdf-ffc0-f6fe-f3e6d4779669" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInstanceContextInitializer.Initialize(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceContext">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceContextInitializer" ref="true" />
      </containers>
      <file name="586e9dbc-c191-1716-9734-4049da1bfad1" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IInstanceContextProvider" />
      <apidata name="IInstanceContextProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="dd48bbc4-004a-a7f2-b26f-940c36beb798" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
      <topicdata name="IInstanceContextProvider" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" />
      <apidata name="IInstanceContextProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
        <element api="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
        <element api="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" />
        <element api="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" />
      </containers>
      <file name="af9823ad-6095-95c8-d23e-f65df585a959" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IInstanceContextProvider">
      <topicdata name="IInstanceContextProvider" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" />
      <apidata name="IInstanceContextProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
        <element api="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)" />
        <element api="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)" />
        <element api="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" />
      </containers>
      <file name="56f345a0-3a25-0b0d-8e58-1ee16e6f99fb" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.GetExistingInstanceContext(System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
      <topicdata group="api" />
      <apidata name="GetExistingInstanceContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.InstanceContext" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" ref="true" />
      </containers>
      <file name="3af0a736-e6b7-03df-67dd-6690b034687f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.InitializeInstanceContext(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message,System.ServiceModel.IContextChannel)">
      <topicdata group="api" />
      <apidata name="InitializeInstanceContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceContext">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IContextChannel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" ref="true" />
      </containers>
      <file name="11a237d9-5b25-733f-decd-5eac7bfd2881" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.IsIdle(System.ServiceModel.InstanceContext)">
      <topicdata group="api" />
      <apidata name="IsIdle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceContext">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" ref="true" />
      </containers>
      <file name="28d574ff-9df7-f99c-554e-1a88653dbe2c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInstanceContextProvider.NotifyIdle(System.ServiceModel.Dispatcher.InstanceContextIdleCallback,System.ServiceModel.InstanceContext)">
      <topicdata group="api" />
      <apidata name="NotifyIdle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback" ref="true" />
        </parameter>
        <parameter name="instanceContext">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceContextProvider" ref="true" />
      </containers>
      <file name="dffd317b-9483-51a0-ff39-da2bbdaf358e" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IInstanceProvider">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IInstanceProvider" />
      <apidata name="IInstanceProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="d65b55f9-0d59-c507-ff6a-02e732cb0f09" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IInstanceProvider">
      <topicdata name="IInstanceProvider" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IInstanceProvider" />
      <apidata name="IInstanceProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance">
          <element api="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)" />
          <element api="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceProvider" />
      </containers>
      <file name="12613c71-cc87-fe46-5c92-2c1dbf273f60" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IInstanceProvider">
      <topicdata name="IInstanceProvider" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IInstanceProvider" />
      <apidata name="IInstanceProvider" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="Overload:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance">
          <element api="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)" />
          <element api="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceProvider" />
      </containers>
      <file name="47f5d5b0-0c3a-4ad8-0580-dda068215e0e" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance">
      <topicdata name="GetInstance" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IInstanceProvider" />
      <apidata name="GetInstance" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)" />
        <element api="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceProvider" ref="true" />
      </containers>
      <file name="8349ca2c-5d0e-fd65-f8c4-4334a5782068" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext)">
      <topicdata group="api" />
      <apidata name="GetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceContext">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceProvider" ref="true" />
      </containers>
      <file name="1888c07b-88ae-3e4f-0310-b3bf0fb8c41b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance(System.ServiceModel.InstanceContext,System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="GetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.IInstanceProvider.GetInstance" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceContext">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceProvider" ref="true" />
      </containers>
      <file name="175fa2b4-dbb6-f5de-2f73-a24f6c53a999" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInstanceProvider.ReleaseInstance(System.ServiceModel.InstanceContext,System.Object)">
      <topicdata group="api" />
      <apidata name="ReleaseInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instanceContext">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInstanceProvider" ref="true" />
      </containers>
      <file name="5f71d9b7-839f-e9ff-153a-14346cfe0514" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
      <apidata name="IInteractiveChannelInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:System.ServiceModel.Security.InfocardInteractiveChannelInitializer" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="3c4dfdf8-8eab-467c-2b83-7cc92c327d74" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
      <topicdata name="IInteractiveChannelInitializer" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
      <apidata name="IInteractiveChannelInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
      </containers>
      <file name="d1a59a29-7a5f-f770-d69e-379baeeb76a7" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer">
      <topicdata name="IInteractiveChannelInitializer" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
      <apidata name="IInteractiveChannelInitializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" />
      </containers>
      <file name="1bf7de4b-0ecb-11be-9228-2d62a99f727a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.BeginDisplayInitializationUI(System.ServiceModel.IClientChannel,System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="BeginDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="channel">
          <type api="T:System.ServiceModel.IClientChannel" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" ref="true" />
      </containers>
      <file name="2f48d55f-0705-b1fd-cd4c-2a79fbd2b056" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer.EndDisplayInitializationUI(System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="EndDisplayInitializationUI" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IInteractiveChannelInitializer" ref="true" />
      </containers>
      <file name="4ffe2b98-6e93-6ef5-75fe-fc80a5c3f194" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      <apidata name="IMessageFilterTable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TFilterData" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </implementors>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="ba5dc58e-ff15-91a3-db1e-be0a0dbb96da" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IMessageFilterTable`1">
      <topicdata name="IMessageFilterTable" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      <apidata name="IMessageFilterTable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TFilterData" />
      </templates>
      <elements>
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.Add">
          <element api="M:System.Collections.Generic.ICollection`1.Add(`0)" />
          <element api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
        </element>
        <element api="M:System.Collections.Generic.ICollection`1.Clear" />
        <element api="M:System.Collections.Generic.ICollection`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.Generic.ICollection`1.Count" />
        <element api="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.Remove">
          <element api="M:System.Collections.Generic.ICollection`1.Remove(`0)" />
          <element api="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
        </element>
        <element api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />
        <element api="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
        <element api="P:System.Collections.Generic.IDictionary`2.Keys" />
        <element api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" />
        <element api="P:System.Collections.Generic.IDictionary`2.Values" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter">
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters">
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue">
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues">
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      </containers>
      <file name="efca50da-427b-672c-f679-633a9902960c" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IMessageFilterTable`1">
      <topicdata name="IMessageFilterTable" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      <apidata name="IMessageFilterTable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TFilterData" />
      </templates>
      <elements>
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.Add">
          <element api="M:System.Collections.Generic.ICollection`1.Add(`0)" />
          <element api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)" />
        </element>
        <element api="M:System.Collections.Generic.ICollection`1.Clear" />
        <element api="M:System.Collections.Generic.ICollection`1.Contains(`0)" />
        <element api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)" />
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.Remove">
          <element api="M:System.Collections.Generic.ICollection`1.Remove(`0)" />
          <element api="M:System.Collections.Generic.IDictionary`2.Remove(`0)" />
        </element>
        <element api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)" />
        <element api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter">
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters">
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue">
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues">
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
          <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      </containers>
      <file name="7918f971-253e-d9e1-9f55-906e17b9f359" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.IMessageFilterTable`1">
      <topicdata name="IMessageFilterTable" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      <apidata name="IMessageFilterTable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <templates>
        <template name="TFilterData" />
      </templates>
      <elements>
        <element api="P:System.Collections.Generic.ICollection`1.Count" />
        <element api="P:System.Collections.Generic.ICollection`1.IsReadOnly" />
        <element api="P:System.Collections.Generic.IDictionary`2.Item(`0)" />
        <element api="P:System.Collections.Generic.IDictionary`2.Keys" />
        <element api="P:System.Collections.Generic.IDictionary`2.Values" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      </containers>
      <file name="8c1ae143-d37d-b041-cd38-8ea034adadab" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter">
      <topicdata name="GetMatchingFilter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
        <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="9ef1c3c1-39dd-5b95-e3bb-908d5250857f" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters">
      <topicdata name="GetMatchingFilters" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="86378654-d802-c09f-277d-401db0e424bd" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue">
      <topicdata name="GetMatchingValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
        <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="1b2cd361-da00-ebbf-3710-af6f591c805d" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues">
      <topicdata name="GetMatchingValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
        <element api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="cb6dbf63-0a4c-f96a-4915-1cc88a613085" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
      <topicdata group="api" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="filter" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="abe44412-dc36-bb3b-42e1-326558c085f4" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
      <topicdata group="api" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="filter" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="eba0de47-0018-4341-9aa0-f7555ff06b71" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="1fd74eea-d03f-e4c0-ed6e-46f4f9a0cbee" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="7c1772aa-11a3-fbd1-a1c0-eaf920b80229" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
      <topicdata group="api" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="7aa52675-8ba5-501e-0b87-b3fc6479234b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
      <topicdata group="api" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="0c5dd543-2e5b-53c0-92f9-912daf82f719" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
      <topicdata group="api" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="1a959c7f-e94e-091c-990e-b18607cdcd7b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
      <topicdata group="api" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true" />
      </containers>
      <file name="1b946ca7-985a-7d15-e84d-3e7ab24782f8" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.InstanceContextIdleCallback">
      <topicdata group="api" />
      <apidata name="InstanceContextIdleCallback" group="type" subgroup="delegate" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="instanceContext">
          <type api="T:System.ServiceModel.InstanceContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="fd1b1bad-432c-2491-80e6-657e974cc4c1" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
      <apidata name="InvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Dispatcher.FilterInvalidBodyAccessException" ref="true" />
          <type api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="3a99f566-0d8b-006f-c222-35fc53d1203d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
      <topicdata name="InvalidBodyAccessException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
      <apidata name="InvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
      </containers>
      <file name="95f2f2fd-9f35-2736-ee18-be6acd06b10b" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
      <topicdata name="InvalidBodyAccessException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
      <apidata name="InvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
      </containers>
      <file name="6d046ad4-3252-f788-e2d9-b52b0a6dd944" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
      <topicdata name="InvalidBodyAccessException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
      <apidata name="InvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
      </containers>
      <file name="73befc18-63a7-f849-5aa5-69bc2dfe9221" />
    </api>
    <api id="Events.T:System.ServiceModel.Dispatcher.InvalidBodyAccessException">
      <topicdata name="InvalidBodyAccessException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
      <apidata name="InvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="true" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
      </containers>
      <file name="cab660f5-b329-65ae-1461-c3206b3e59e4" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" ref="true" />
      </containers>
      <file name="33ca7cc0-c5d0-6d3e-4e49-89162a748da4" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" ref="true" />
      </containers>
      <file name="bca1d2b0-9fe5-4fb6-be8d-55a08627ef94" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" ref="true" />
      </containers>
      <file name="925c5e33-be5b-73c0-e69f-5c81972a0276" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Dispatcher.InvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" ref="true" />
      </containers>
      <file name="076767bd-1104-e19e-d7ae-ae4102b02975" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IOperationInvoker">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IOperationInvoker" />
      <apidata name="IOperationInvoker" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="03056e53-fde9-fd20-90f3-4783af6bd66d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IOperationInvoker">
      <topicdata name="IOperationInvoker" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
      <apidata name="IOperationInvoker" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs" />
        <element api="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />
        <element api="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)" />
        <element api="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
      </containers>
      <file name="e8b09952-5b74-afe8-6594-f14783017cd3" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IOperationInvoker">
      <topicdata name="IOperationInvoker" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
      <apidata name="IOperationInvoker" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs" />
        <element api="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)" />
        <element api="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
      </containers>
      <file name="91dbec8b-fece-9c2b-b76b-a29c0c09f3b5" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.IOperationInvoker">
      <topicdata name="IOperationInvoker" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
      <apidata name="IOperationInvoker" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IOperationInvoker" />
      </containers>
      <file name="1c6c4bfe-1dc4-46ef-0eae-afd59a829605" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IOperationInvoker.AllocateInputs">
      <topicdata group="api" />
      <apidata name="AllocateInputs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IOperationInvoker" ref="true" />
      </containers>
      <file name="f058cc1f-d8cc-11fa-3440-993795d3c352" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IOperationInvoker.Invoke(System.Object,System.Object[],System.Object[]@)">
      <topicdata group="api" />
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="inputs">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="outputs" out="true">
          <referenceTo>
            <arrayOf rank="1">
              <type api="T:System.Object" ref="true" />
            </arrayOf>
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IOperationInvoker" ref="true" />
      </containers>
      <file name="ee267421-0325-c868-d193-23ecd6783f9c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeBegin(System.Object,System.Object[],System.AsyncCallback,System.Object)">
      <topicdata group="api" />
      <apidata name="InvokeBegin" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="inputs">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IOperationInvoker" ref="true" />
      </containers>
      <file name="b930ad19-50a8-67f7-6df9-ab86578bdddb" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IOperationInvoker.InvokeEnd(System.Object,System.Object[]@,System.IAsyncResult)">
      <topicdata group="api" />
      <apidata name="InvokeEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="outputs" out="true">
          <referenceTo>
            <arrayOf rank="1">
              <type api="T:System.Object" ref="true" />
            </arrayOf>
          </referenceTo>
        </parameter>
        <parameter name="result">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IOperationInvoker" ref="true" />
      </containers>
      <file name="4bb50b3d-4509-0031-fff7-607c9ef471b4" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.IOperationInvoker.IsSynchronous">
      <topicdata group="api" />
      <apidata name="IsSynchronous" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsSynchronous" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IOperationInvoker" ref="true" />
      </containers>
      <file name="75cfb828-7e87-c3d4-6c77-25c968ba9a6e" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.IParameterInspector">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.IParameterInspector" />
      <apidata name="IParameterInspector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="e62a77ca-17e5-79ec-ce78-a79911fbdf3f" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.IParameterInspector">
      <topicdata name="IParameterInspector" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.IParameterInspector" />
      <apidata name="IParameterInspector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IParameterInspector" />
      </containers>
      <file name="eb46dea7-b81c-284b-ad9f-b46dcf06bf0e" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.IParameterInspector">
      <topicdata name="IParameterInspector" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.IParameterInspector" />
      <apidata name="IParameterInspector" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IParameterInspector" />
      </containers>
      <file name="d2ed3956-ff38-f518-5fd3-99d8b33c7474" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IParameterInspector.AfterCall(System.String,System.Object[],System.Object,System.Object)">
      <topicdata group="api" />
      <apidata name="AfterCall" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="operationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="outputs">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="returnValue">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="correlationState">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IParameterInspector" ref="true" />
      </containers>
      <file name="1054a600-e913-26bf-def4-addacee6c1da" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.IParameterInspector.BeforeCall(System.String,System.Object[])">
      <topicdata group="api" />
      <apidata name="BeforeCall" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="operationName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inputs">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.IParameterInspector" ref="true" />
      </containers>
      <file name="1a6f69f2-6d74-ca63-f1d9-aa3202857c8e" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
      <apidata name="JsonQueryStringConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.QueryStringConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="b677dea3-aac0-6d40-2af3-811a968fc2e9" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
      <topicdata name="JsonQueryStringConverter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
      <apidata name="JsonQueryStringConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)" />
        <element api="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
        <element api="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
      </containers>
      <file name="24dc8a35-2c40-2572-378e-a8aa603d27ae" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.JsonQueryStringConverter">
      <topicdata name="JsonQueryStringConverter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
      <apidata name="JsonQueryStringConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)" />
        <element api="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
        <element api="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" />
      </containers>
      <file name="53056241-167a-c7c7-b30e-010c50268812" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" ref="true" />
      </containers>
      <file name="038fc811-5cec-503e-dd18-512567384b40" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)">
          <type api="T:System.ServiceModel.Dispatcher.QueryStringConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" ref="true" />
      </containers>
      <file name="61e8da02-80be-71d2-4a3c-cd168d3c726e" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertStringToValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)">
          <type api="T:System.ServiceModel.Dispatcher.QueryStringConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" ref="true" />
      </containers>
      <file name="4e3f4992-1821-3814-332d-24d6f832ce0c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertValueToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)">
          <type api="T:System.ServiceModel.Dispatcher.QueryStringConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" ref="true" />
      </containers>
      <file name="d69bcb52-27bb-837d-debf-bcf6c248e26d" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" />
      <apidata name="MatchAllMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="62e25cd6-eff1-2738-919e-593f2d9e8f9d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.MatchAllMessageFilter">
      <topicdata name="MatchAllMessageFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" />
      <apidata name="MatchAllMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.#ctor" />
        <element api="Overload:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" />
      </containers>
      <file name="8d8443ff-20e9-b034-5ec1-80f2d6206d19" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.MatchAllMessageFilter">
      <topicdata name="MatchAllMessageFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" />
      <apidata name="MatchAllMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" />
      </containers>
      <file name="2f526966-329d-6a80-3e96-f2f5bff9fa17" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match">
      <topicdata name="Match" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" />
      <apidata name="Match" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" ref="true" />
      </containers>
      <file name="4f0d7d21-4acb-bcbf-c9dc-634118809533" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" ref="true" />
      </containers>
      <file name="24b2a54e-429c-ee77-07c2-dd513183b6b6" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" ref="true" />
      </containers>
      <file name="d56d3af1-f2d7-b8a3-9103-5eaa59988474" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MatchAllMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" ref="true" />
      </containers>
      <file name="160aa039-2c80-c2a2-ec51-e2648ad6dc13" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" />
      <apidata name="MatchNoneMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="cdfbe12c-af8e-0fa3-636e-7ebef2611c1d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter">
      <topicdata name="MatchNoneMessageFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" />
      <apidata name="MatchNoneMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.#ctor" />
        <element api="Overload:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" />
      </containers>
      <file name="710838f5-5e37-7b53-2667-1199ba82b3f6" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter">
      <topicdata name="MatchNoneMessageFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" />
      <apidata name="MatchNoneMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" />
      </containers>
      <file name="b832b3dc-be4a-0dfb-978a-1a0f89f58d9d" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match">
      <topicdata name="Match" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" />
      <apidata name="Match" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" ref="true" />
      </containers>
      <file name="d7bc4faa-f664-c1eb-e091-318efbc57315" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" ref="true" />
      </containers>
      <file name="e390af7e-6da6-4d0d-a1a3-110d871f849e" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" ref="true" />
      </containers>
      <file name="5ffd9aae-0202-6533-36fd-329566a24e4a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MatchNoneMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" ref="true" />
      </containers>
      <file name="c1b0dfa5-0aaf-abaa-c266-fc187dbf5228" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.MessageFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilter" />
      <apidata name="MessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.CorrelationActionMessageFilter" ref="true" />
          <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" ref="true" />
          <type api="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" ref="true" />
          <type api="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" ref="true" />
          <type api="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" ref="true" />
          <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" ref="true" />
          <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
          <type api="T:System.ServiceModel.Dispatcher.EndpointNameMessageFilter" ref="true" />
          <type api="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.Serialization.KnownTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.Serialization.KnownTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Dispatcher.ActionMessageFilter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.Serialization.KnownTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Dispatcher.MatchAllMessageFilter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.Serialization.KnownTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.Dispatcher.MatchNoneMessageFilter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="2d4d190d-aad8-e9ce-eea8-a75649e56db8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilter">
      <topicdata name="MessageFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.MessageFilter" />
      <apidata name="MessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" />
      </containers>
      <file name="94b3f29c-77a2-5288-fc8e-831c77e2fa47" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.MessageFilter">
      <topicdata name="MessageFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.MessageFilter" />
      <apidata name="MessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" />
      </containers>
      <file name="6ce153eb-43b1-eb3d-b1b9-2bc841e4a60e" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageFilter.Match">
      <topicdata name="Match" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilter" />
      <apidata name="Match" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
      </containers>
      <file name="4eb1c8b2-7735-261c-0baa-02a2f015ab00" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
      </containers>
      <file name="72c048a7-fb52-ffbb-c622-fc9302a5b1b2" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1">
      <topicdata group="api" />
      <apidata name="CreateFilterTable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <templates>
        <template name="FilterData" />
      </templates>
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
          <specialization>
            <template name="FilterData" index="0" api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
      </containers>
      <file name="8d4fac3e-0abd-b340-89de-2e87b1f1b433" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilter.Match" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
      </containers>
      <file name="23c09c90-c1dd-2b8b-ad76-29007fcfa29f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilter.Match" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
      </containers>
      <file name="2dfd9133-a29d-778f-2cd4-1fc77b8f2613" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.MessageFilterException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterException" />
      <apidata name="MessageFilterException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.CommunicationException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="0f78f31d-3d19-bc09-aa3b-13772ce22da7" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterException">
      <topicdata name="MessageFilterException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.MessageFilterException" />
      <apidata name="MessageFilterException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterException.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterException.Filters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" />
      </containers>
      <file name="d0a21562-6b95-9bbe-c1b2-b12b34c45ac6" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.MessageFilterException">
      <topicdata name="MessageFilterException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.MessageFilterException" />
      <apidata name="MessageFilterException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" />
      </containers>
      <file name="ca7ea70a-913f-c1c0-18a4-662e33d0b744" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.MessageFilterException">
      <topicdata name="MessageFilterException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.MessageFilterException" />
      <apidata name="MessageFilterException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterException.Filters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" />
      </containers>
      <file name="beecc462-76e2-09bb-3f21-1c0e3da37b24" />
    </api>
    <api id="Events.T:System.ServiceModel.Dispatcher.MessageFilterException">
      <topicdata name="MessageFilterException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Dispatcher.MessageFilterException" />
      <apidata name="MessageFilterException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" />
      </containers>
      <file name="e70c9772-00d9-281b-3919-4bfceff2a351" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageFilterException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" ref="true" />
      </containers>
      <file name="45607fd6-96ba-f55f-c205-894ef3312847" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" ref="true" />
      </containers>
      <file name="54c8a6d3-5904-aeef-4b24-9b5cccf94e60" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" ref="true" />
      </containers>
      <file name="4acd7309-9e6d-de32-926e-43c5feb156a0" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" ref="true" />
      </containers>
      <file name="806d015f-9b8f-3452-cceb-6c0bdee93b04" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="filters">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" ref="true" />
      </containers>
      <file name="920d9570-12ff-19de-4c3d-c4c012eb9ac2" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" ref="true" />
      </containers>
      <file name="782fa9e8-7ae1-e4f1-81a1-9a863460be12" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="filters">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" ref="true" />
      </containers>
      <file name="876f4e03-3ebd-3475-6614-0ac9ee4d5c47" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageFilterException.Filters">
      <topicdata group="api" />
      <apidata name="Filters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Filters" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterException" ref="true" />
      </containers>
      <file name="cd956b95-c537-122b-615b-0d4c90105c34" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.MessageFilterTable`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name="MessageFilterTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TFilterData" />
      </templates>
      <implements>
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
          <specialization>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="033dc73f-7181-ffe7-8df8-701fcdbe1cfa" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterTable`1">
      <topicdata name="MessageFilterTable" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name="MessageFilterTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
      <templates>
        <template name="TFilterData" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Count" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Values" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      </containers>
      <file name="1cd5618a-0a81-9a05-8fda-3fc9162640c8" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.MessageFilterTable`1">
      <topicdata name="MessageFilterTable" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name="MessageFilterTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
      <templates>
        <template name="TFilterData" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove">
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      </containers>
      <file name="b972c469-f4f0-2139-96f4-967be5f81a71" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.MessageFilterTable`1">
      <topicdata name="MessageFilterTable" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name="MessageFilterTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
      <templates>
        <template name="TFilterData" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Count" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys" />
        <element api="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Values" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      </containers>
      <file name="5bc42bfc-0a0e-7862-18ca-cc2c43188e9d" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="a1ff3cc5-0a3a-f27e-f86b-23ffff80d488" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="d2acf126-0ae2-bf60-41fa-4ebaf8182482" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter">
      <topicdata name="GetMatchingFilter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="b61b9496-a1d3-09a0-aa0e-4682989d4606" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters">
      <topicdata name="GetMatchingFilters" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="ddca8d88-fc7e-4815-ee45-9b7ef202450e" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue">
      <topicdata name="GetMatchingValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="26d334a5-3af4-3206-051e-d37ad600eada" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues">
      <topicdata name="GetMatchingValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="6ccf7e43-0411-fef0-59e3-39c784f43b5a" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="2045007c-5332-894f-2bfb-9cd51c2e29ed" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="75d37b9d-89e1-3210-2c94-9264647dd838" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.#ctor" />
      <parameters>
        <parameter name="defaultPriority">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="a6a4f0fa-0bbb-9a46-804b-fa00d6fd8aec" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="3bc37133-9f5b-6d9c-435a-d82b6c226836" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
        <parameter name="data">
          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="92f529b3-814e-54b1-8444-9e9fdcd06042" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0,System.Int32)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
        <parameter name="data">
          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
        </parameter>
        <parameter name="priority">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="367e11a2-b0bf-4584-c7bb-280291c812bc" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="aa7b70ce-ed59-2b1a-bc51-4109125e2e91" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="7354ffab-b5ec-75b9-24d4-ca8762da5720" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)">
      <topicdata group="api" />
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="630ea024-a9fb-ac4f-621e-09ca5a58c59f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="e6d16ae0-422f-bb0c-c036-54ded5b00d7a" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="ccc07182-e92c-d456-cc94-e35cbcd04074" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.CreateFilterTable(System.ServiceModel.Dispatcher.MessageFilter)">
      <topicdata group="api" />
      <apidata name="CreateFilterTable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
          <specialization>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="3337902c-29a3-b88b-c01e-26a6c73a7e51" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.DefaultPriority">
      <topicdata group="api" />
      <apidata name="DefaultPriority" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultPriority" />
      <setter name="set_DefaultPriority" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="ea7c540d-63fb-25b3-ef86-9bf6bd31e933" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="caa71b94-a2c9-cead-6f17-79bd904ba03f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
      <topicdata group="api" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="filter" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="37b24a21-6b61-da58-a8b8-8ccd6d206937" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
      <topicdata group="api" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilter" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="filter" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="68bacd14-5a07-7e0e-7a0f-1c54c207fdcb" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="c66cd84d-ed7c-02df-c5f1-817e77740d8d" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingFilters" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="36168537-f731-2b78-8717-2fee9e12f160" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
      <topicdata group="api" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="data" out="true">
          <referenceTo>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="9efe3352-8387-373c-a97e-b7ea15246a3d" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
      <topicdata group="api" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValue" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="data" out="true">
          <referenceTo>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="23a380f5-b8ed-7b6f-d14b-259aa32cea8e" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
      <topicdata group="api" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="92f96054-6f03-69c8-6b07-58f7cd86a8d7" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
      <topicdata group="api" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetMatchingValues" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="6dae8090-3d21-4917-c58a-ebf7538aa9b8" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.GetPriority(System.ServiceModel.Dispatcher.MessageFilter)">
      <topicdata group="api" />
      <apidata name="GetPriority" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="a19b0024-aca7-7cda-7438-502705817d59" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="f9762dee-5f39-ade9-53d7-4df0090514a8" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="145bbaa5-ca8c-d756-2328-78df480b6e3b" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Keys">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="36e806e6-0686-99a7-e716-c9ecd8de7ae7" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="17fb0f36-dac3-ca22-f12d-22e87f52f18a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageFilterTable`1.Remove" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="88de91b8-0d56-817b-f5b3-8d5e7e6dea3f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="4f12e010-ad2f-0498-3017-a5b6d5840a00" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)">
      <topicdata group="api" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
        <parameter name="data" out="true">
          <referenceTo>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="fbb80447-b4b1-4cf5-a083-f23e89f738ca" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageFilterTable`1.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageFilterTable`1" ref="true" />
      </containers>
      <file name="e1ad1fd2-421f-0e28-fd96-7b43fe9ea391" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.MessageQuery">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageQuery" />
      <apidata name="MessageQuery" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.XPathMessageQuery" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="d1fa572d-7d79-e103-0228-7cf396e660f7" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.MessageQuery">
      <topicdata name="MessageQuery" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.MessageQuery" />
      <apidata name="MessageQuery" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQuery.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageQuery.Evaluate">
          <element api="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" />
      </containers>
      <file name="f22b9a09-07c0-a41a-7fe4-f3de8c661ace" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.MessageQuery">
      <topicdata name="MessageQuery" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.MessageQuery" />
      <apidata name="MessageQuery" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageQuery.Evaluate">
          <element api="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" />
      </containers>
      <file name="f33b6dd0-9055-445b-3ed6-ac6a50a82afb" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageQuery.Evaluate">
      <topicdata name="Evaluate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageQuery" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
      </containers>
      <file name="85b8c5fc-9dbd-437a-d141-db1bede40c6e" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQuery.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
      </containers>
      <file name="a41fea54-92c8-eb1f-c087-eb15b3608517" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQuery.CreateMessageQueryCollection">
      <topicdata group="api" />
      <apidata name="CreateMessageQueryCollection" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
      </containers>
      <file name="754f8a22-cbda-c5aa-c46a-2a936639a1cc" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageQuery.Evaluate" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.Message)" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
      </containers>
      <file name="d19ccf0c-8ac7-352e-2b9e-830f00d4cdf4" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageQuery.Evaluate" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TResult" index="0" api="M:System.ServiceModel.Dispatcher.MessageQuery.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
      </containers>
      <file name="cf799309-8641-3e78-9996-d0f8ce4533d1" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.MessageQueryCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
      <apidata name="MessageQueryCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="f642ebd8-9f4b-04cc-bb8e-8f001f5598d8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.MessageQueryCollection">
      <topicdata name="MessageQueryCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
      <apidata name="MessageQueryCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.#ctor" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate">
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
      </containers>
      <file name="47574048-cc52-ded9-fcbf-1324ee0b0e29" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.MessageQueryCollection">
      <topicdata name="MessageQueryCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
      <apidata name="MessageQueryCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate">
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
      </containers>
      <file name="3f899caa-80dc-c3cd-0e15-a1d23a52224f" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.MessageQueryCollection">
      <topicdata name="MessageQueryCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
      <apidata name="MessageQueryCollection" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
      </containers>
      <file name="078ba57a-7bc2-47c1-ef24-3bf1a6726a1c" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate">
      <topicdata name="Evaluate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageQueryCollection" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" ref="true" />
      </containers>
      <file name="065f2f82-48c7-9514-6466-6b91316881f9" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" ref="true" />
      </containers>
      <file name="94a66d98-9219-da7f-925a-52b4a1ff497f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TResult" index="0" api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" ref="true" />
      </containers>
      <file name="cb19cce8-65c6-483a-6d02-77ad6a5b23bb" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate" />
      <proceduredata abstract="true" virtual="true" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TResult" index="0" api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" ref="true" />
      </containers>
      <file name="256f93a0-36a7-1790-4ee3-758428405415" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.MessageQueryTable`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      <apidata name="MessageQueryTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TItem" />
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
            <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="4af71a4c-2d72-3b31-c00e-f723444015a7" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.MessageQueryTable`1">
      <topicdata name="MessageQueryTable" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      <apidata name="MessageQueryTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.#ctor" />
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                        <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                        <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                          <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                          <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.#ctor" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add">
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.ServiceModel.Dispatcher.MessageQuery,`0)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Clear" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageQuery)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0}[],System.Int32)" />
        <element api="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Count" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate">
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.GetEnumerator" />
        <element api="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.IsReadOnly" />
        <element api="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Item(System.ServiceModel.Dispatcher.MessageQuery)" />
        <element api="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Keys" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove">
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.ServiceModel.Dispatcher.MessageQuery)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageQuery,`0@)" />
        <element api="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Values" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      </containers>
      <file name="b767e34c-c3ee-437f-7896-255dfea2b788" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.MessageQueryTable`1">
      <topicdata name="MessageQueryTable" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      <apidata name="MessageQueryTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.#ctor" />
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                        <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                        <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                          <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                          <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                      <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                    <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add">
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.ServiceModel.Dispatcher.MessageQuery,`0)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Clear" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageQuery)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0}[],System.Int32)" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate">
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.GetEnumerator" />
        <element api="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove">
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.ServiceModel.Dispatcher.MessageQuery)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageQuery,`0@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      </containers>
      <file name="93ea3fb7-2812-e042-5d02-ca56d7c28177" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.MessageQueryTable`1">
      <topicdata name="MessageQueryTable" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      <apidata name="MessageQueryTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.#ctor" />
      <templates>
        <template name="TItem" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Count" />
        <element api="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.IsReadOnly" />
        <element api="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Item(System.ServiceModel.Dispatcher.MessageQuery)" />
        <element api="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Keys" />
        <element api="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Values" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      </containers>
      <file name="f58a1d32-0d5c-1560-4326-837b4036805c" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.ServiceModel.Dispatcher.MessageQuery,`0)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="8068ed0d-b8e1-70d1-739b-edf361f0670d" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate">
      <topicdata name="Evaluate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="09bd6288-a79c-d395-d7c9-d7f92832944e" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.ServiceModel.Dispatcher.MessageQuery)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="1a9d0c86-7b30-42a1-5ec5-c5f8a136ca20" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="b7d144fd-1542-e6bf-f694-ed8ef7bda8a4" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
              <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="a15c6853-f5e0-7a71-2e46-613a86ce01b3" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add(System.ServiceModel.Dispatcher.MessageQuery,`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Add" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
        </parameter>
        <parameter name="value">
          <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
              <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="e71a8c2b-6e4e-b160-afb7-6714e561a6f6" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="fab13d69-4964-9c2f-247e-771098d2b9fa" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
              <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="a9b45485-446b-8605-6121-335692de6c2a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageQuery)">
      <topicdata group="api" />
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
              <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="899d2516-1b0b-eeb9-517a-d6412f0dcdac" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0}[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="882c4aed-7929-1168-d81c-07eac3351448" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="f4e16021-54fe-c768-6d00-9b23ca02b577" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TResult" index="0" api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.Message)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="8fc31a27-91a4-357e-00fa-441003a1af20" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate" />
      <proceduredata virtual="false" />
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TResult" index="0" api="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="c977a871-9c40-4d98-4682-091c00a8425b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="fb9117ba-e6c9-c3e4-0464-4a5e8ba439e9" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="cc285116-0733-6303-d00b-4c8ec67ffd2c" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Item(System.ServiceModel.Dispatcher.MessageQuery)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="key">
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
              <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="0a0d087f-e556-373c-d7e6-ee2e947a1001" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Keys">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
              <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="4968e0b7-e35f-0b11-03b5-592b9e94b156" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageQuery,`0})">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
              <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                  <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="c40828b3-2aec-9180-46c7-0eb7007fd95b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove(System.ServiceModel.Dispatcher.MessageQuery)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.MessageQueryTable`1.Remove" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
              <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="c6ad4836-7d39-db83-0c27-439c0f72aa1b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="7595f8e0-b9c2-d2df-8f6e-d1ac7e968476" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MessageQueryTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageQuery,`0@)">
      <topicdata group="api" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="key">
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
              <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="d4d12c42-0cad-e1b2-6a81-7d7e593746c9" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MessageQueryTable`1.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
              <template name="TItem" index="0" api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MessageQueryTable`1" ref="true" />
      </containers>
      <file name="89dde6b0-4189-f909-a7ea-ff7bb15cd2cf" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
      <apidata name="MultipleFilterMatchesException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="c0076323-dcfa-d25b-1e9e-6f6b5115a77d" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
      <topicdata name="MultipleFilterMatchesException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
      <apidata name="MultipleFilterMatchesException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
          <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Exception)" />
          <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.Filters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
      </containers>
      <file name="ef0e0d2e-7007-1ddd-8478-2957f3333e62" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
      <topicdata name="MultipleFilterMatchesException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
      <apidata name="MultipleFilterMatchesException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
      </containers>
      <file name="0c6b8baf-0659-b0b2-c756-b8dbf2cdf7d6" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
      <topicdata name="MultipleFilterMatchesException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
      <apidata name="MultipleFilterMatchesException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.Filters" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
      </containers>
      <file name="d3987ca3-b266-b117-624c-0f8f46de50b9" />
    </api>
    <api id="Events.T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException">
      <topicdata name="MultipleFilterMatchesException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
      <apidata name="MultipleFilterMatchesException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
      </containers>
      <file name="5b45df91-37d7-2242-21a2-c89958f2cd01" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
        <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Exception)" />
        <element api="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" ref="true" />
      </containers>
      <file name="3d3b6991-3ec6-30fc-189d-a2f7cfb27a28" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" ref="true" />
      </containers>
      <file name="645cb0c2-c783-560f-3dc9-7ebd56448106" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" ref="true" />
      </containers>
      <file name="c48754f6-f589-91d2-0407-421ffd200b14" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" ref="true" />
      </containers>
      <file name="0a33f3d4-180a-756f-2bb7-f10744d9930b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="filters">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" ref="true" />
      </containers>
      <file name="73f176b6-7fa5-e120-efad-90d067d38e59" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" ref="true" />
      </containers>
      <file name="55ed9653-756e-6607-ff30-a06b1fd4090c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor(System.String,System.Exception,System.Collections.ObjectModel.Collection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="filters">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" ref="true" />
      </containers>
      <file name="c44c6586-b2d7-d8fa-63f4-170154cab670" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.MultipleFilterMatchesException.Filters">
      <topicdata group="api" />
      <apidata name="Filters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Filters" />
      <returns>
        <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.MultipleFilterMatchesException" ref="true" />
      </containers>
      <file name="355f1690-bb95-e241-ba1e-d616640199cb" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
      <apidata name="NavigatorInvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.InvalidBodyAccessException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="26dfb638-f70d-c55f-f820-583f2b276dbe" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException">
      <topicdata name="NavigatorInvalidBodyAccessException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
      <apidata name="NavigatorInvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
          <element api="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.String,System.Exception)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
      </containers>
      <file name="ae399914-8d08-3def-0765-40c8618dd74b" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException">
      <topicdata name="NavigatorInvalidBodyAccessException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
      <apidata name="NavigatorInvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
      </containers>
      <file name="4ead08d8-91c8-bf51-b9fd-6ae2d3c35f30" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException">
      <topicdata name="NavigatorInvalidBodyAccessException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
      <apidata name="NavigatorInvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Message" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
      </containers>
      <file name="75b5d2a8-567a-1d6d-e5b5-4e87c6f85de8" />
    </api>
    <api id="Events.T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException">
      <topicdata name="NavigatorInvalidBodyAccessException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
      <apidata name="NavigatorInvalidBodyAccessException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
      </containers>
      <file name="980ac780-5089-e168-b393-678842697d81" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="b7d5081b-2a5d-862f-2d3a-a6211488d443" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="c256e803-cef4-9e85-4801-c9909556dcad" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="766b585a-5f56-bffc-cb4e-f5bb8d605d17" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="502f2b7f-1124-2942-7364-4a6511fbc9d2" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.NavigatorInvalidBodyAccessException" ref="true" />
      </containers>
      <file name="088e5fe3-3168-974a-2de6-3eafbe2850b6" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
      <apidata name="PrefixEndpointAddressMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="40fc0643-e48e-db9a-c29f-5aa4a80f69a7" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
      <topicdata name="PrefixEndpointAddressMessageFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
      <apidata name="PrefixEndpointAddressMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
          <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address" />
        <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1" />
        <element api="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" />
        <element api="Overload:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
      </containers>
      <file name="16a7b556-b362-1c6f-772a-00a0cf65d096" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
      <topicdata name="PrefixEndpointAddressMessageFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
      <apidata name="PrefixEndpointAddressMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1" />
        <element api="Overload:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
      </containers>
      <file name="66f436cb-c345-597f-bec7-d0bb4181662f" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter">
      <topicdata name="PrefixEndpointAddressMessageFilter" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
      <apidata name="PrefixEndpointAddressMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address" />
        <element api="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
      </containers>
      <file name="8c201ad5-7ab0-29d5-f39b-1b7ff251a2c5" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
        <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="5c9cf65c-fcdb-2b31-77c7-b67e72b39834" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match">
      <topicdata name="Match" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" />
      <apidata name="Match" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="13af5e17-5ffb-c371-1e71-8bd55089bc7b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="94b2d420-9d01-8871-4869-bf3a722dbe13" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.#ctor" />
      <parameters>
        <parameter name="address">
          <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
        </parameter>
        <parameter name="includeHostNameInComparison">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="75745f25-11fa-7a7b-d84c-5d98cc9e61d9" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Address">
      <topicdata group="api" />
      <apidata name="Address" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Address" />
      <returns>
        <type api="T:System.ServiceModel.EndpointAddress" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="88240613-acee-2526-d97b-b87e89e3c381" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1">
      <topicdata group="api" />
      <apidata name="CreateFilterTable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="FilterData" />
      </templates>
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
          <specialization>
            <template name="FilterData" index="0" api="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.CreateFilterTable``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="db0bc0f2-686f-94b2-c77a-f7ae2a01c2ec" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.IncludeHostNameInComparison">
      <topicdata group="api" />
      <apidata name="IncludeHostNameInComparison" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IncludeHostNameInComparison" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="077ff534-ed0a-96c6-da8b-f4344d6dc8ad" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="9eb220ef-14ca-e5dd-90c2-aad78fd41c98" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.PrefixEndpointAddressMessageFilter" ref="true" />
      </containers>
      <file name="33c766d1-8736-bee3-f5a4-5e510e331d3a" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.QueryStringConverter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.QueryStringConverter" />
      <apidata name="QueryStringConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:System.ServiceModel.Dispatcher.JsonQueryStringConverter" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="cf77dff4-d0aa-4a63-d668-8cefad840c51" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.QueryStringConverter">
      <topicdata name="QueryStringConverter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.QueryStringConverter" />
      <apidata name="QueryStringConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)" />
        <element api="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
        <element api="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.QueryStringConverter" />
      </containers>
      <file name="dd9a1a79-d9f9-7517-9ef2-c697ad8c031c" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.QueryStringConverter">
      <topicdata name="QueryStringConverter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.QueryStringConverter" />
      <apidata name="QueryStringConverter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)" />
        <element api="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)" />
        <element api="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.QueryStringConverter" />
      </containers>
      <file name="810d83b9-121b-5c4d-d849-125d89564a77" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.QueryStringConverter" ref="true" />
      </containers>
      <file name="2b9e5913-ba2d-e6a1-95a1-0a3f1a820791" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)">
      <topicdata group="api" />
      <apidata name="CanConvert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.QueryStringConverter" ref="true" />
      </containers>
      <file name="f36e54f5-402c-4af3-a83d-2424f4bf8ffa" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertStringToValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.QueryStringConverter" ref="true" />
      </containers>
      <file name="30a7b157-b5ad-5b8e-fe27-f9cede614f61" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="ConvertValueToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.QueryStringConverter" ref="true" />
      </containers>
      <file name="ca5ae5de-78f7-1304-8571-571877b2288a" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      <apidata name="SeekableXPathNavigator" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
          <type api="T:System.Xml.XPath.XPathItem" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="0c8400a2-760d-e692-cff8-aa618c6e5cf8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.SeekableXPathNavigator">
      <topicdata name="SeekableXPathNavigator" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      <apidata name="SeekableXPathNavigator" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.#ctor" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition">
          <element api="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition(System.Int64,System.Int64)" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.SeekableXPathNavigator.CurrentPosition" />
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetLocalName(System.Int64)" />
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetName(System.Int64)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace">
          <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace(System.Int64)" />
          <element api="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNodeType(System.Int64)" />
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetValue(System.Int64)" />
        <element api="P:System.Xml.XPath.XPathItem.Value" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ValueAs">
          <element api="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)" />
          <element api="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.AppendChild">
          <element api="M:System.Xml.XPath.XPathNavigator.AppendChild" />
          <element api="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)" />
          <element api="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)" />
        <element api="P:System.Xml.XPath.XPathNavigator.BaseURI" />
        <element api="P:System.Xml.XPath.XPathNavigator.CanEdit" />
        <element api="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" />
        <element api="M:System.Xml.XPath.XPathNavigator.Clone" />
        <element api="M:System.Xml.XPath.XPathNavigator.Compile(System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.CreateAttributes" />
        <element api="M:System.Xml.XPath.XPathNavigator.CreateNavigator" />
        <element api="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.XPath.XPathNavigator.DeleteSelf" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.Evaluate">
          <element api="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
        <element api="P:System.Xml.XPath.XPathNavigator.HasAttributes" />
        <element api="P:System.Xml.XPath.XPathNavigator.HasChildren" />
        <element api="P:System.Xml.XPath.XPathNavigator.InnerXml" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.InsertAfter">
          <element api="M:System.Xml.XPath.XPathNavigator.InsertAfter" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.InsertBefore">
          <element api="M:System.Xml.XPath.XPathNavigator.InsertBefore" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)" />
        <element api="P:System.Xml.XPath.XPathNavigator.IsEmptyElement" />
        <element api="P:System.Xml.XPath.XPathNavigator.IsNode" />
        <element api="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)" />
        <element api="P:System.Xml.XPath.XPathNavigator.LocalName" />
        <element api="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.Matches">
          <element api="M:System.Xml.XPath.XPathNavigator.Matches(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.MoveToChild">
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToFirst" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.MoveToFirstNamespace">
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.MoveToFollowing">
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.MoveToNext">
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.MoveToNextNamespace">
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToParent" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToRoot" />
        <element api="P:System.Xml.XPath.XPathNavigator.Name" />
        <element api="P:System.Xml.XPath.XPathNavigator.NamespaceURI" />
        <element api="P:System.Xml.XPath.XPathNavigator.NameTable" />
        <element api="P:System.Xml.XPath.XPathNavigator.NodeType" />
        <element api="P:System.Xml.XPath.XPathNavigator.OuterXml" />
        <element api="P:System.Xml.XPath.XPathNavigator.Prefix" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.PrependChild">
          <element api="M:System.Xml.XPath.XPathNavigator.PrependChild" />
          <element api="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)" />
          <element api="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.ReadSubtree" />
        <element api="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ReplaceSelf">
          <element api="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)" />
          <element api="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="P:System.Xml.XPath.XPathNavigator.SchemaInfo" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.Select">
          <element api="M:System.Xml.XPath.XPathNavigator.Select(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.SelectAncestors">
          <element api="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
          <element api="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.SelectChildren">
          <element api="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
          <element api="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.SelectDescendants">
          <element api="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
          <element api="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.SelectSingleNode">
          <element api="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)" />
          <element api="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)" />
        <element api="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone" />
        <element api="M:System.Xml.XPath.XPathNavigator.ToString" />
        <element api="P:System.Xml.XPath.XPathNavigator.TypedValue" />
        <element api="P:System.Xml.XPath.XPathNavigator.UnderlyingObject" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueAsDouble" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueAsInt" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueAsLong" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueType" />
        <element api="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)" />
        <element api="P:System.Xml.XPath.XPathNavigator.XmlLang" />
        <element api="P:System.Xml.XPath.XPathNavigator.XmlType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      </containers>
      <file name="bc1de48b-41cc-2d4b-fcbc-b761fdb64160" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.SeekableXPathNavigator">
      <topicdata name="SeekableXPathNavigator" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      <apidata name="SeekableXPathNavigator" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition">
          <element api="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition(System.Int64,System.Int64)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetLocalName(System.Int64)" />
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetName(System.Int64)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace">
          <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace(System.Int64)" />
          <element api="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNodeType(System.Int64)" />
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetValue(System.Int64)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ValueAs">
          <element api="M:System.Xml.XPath.XPathItem.ValueAs(System.Type)" />
          <element api="M:System.Xml.XPath.XPathNavigator.ValueAs(System.Type,System.Xml.IXmlNamespaceResolver)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.AppendChild">
          <element api="M:System.Xml.XPath.XPathNavigator.AppendChild" />
          <element api="M:System.Xml.XPath.XPathNavigator.AppendChild(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XmlReader)" />
          <element api="M:System.Xml.XPath.XPathNavigator.AppendChild(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.AppendChildElement(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.CheckValidity(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.ValidationEventHandler)" />
        <element api="M:System.Xml.XPath.XPathNavigator.Clone" />
        <element api="M:System.Xml.XPath.XPathNavigator.Compile(System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.CreateAttribute(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.CreateAttributes" />
        <element api="M:System.Xml.XPath.XPathNavigator.CreateNavigator" />
        <element api="M:System.Xml.XPath.XPathNavigator.DeleteRange(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.XPath.XPathNavigator.DeleteSelf" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.Evaluate">
          <element api="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Evaluate(System.String,System.Xml.IXmlNamespaceResolver)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Evaluate(System.Xml.XPath.XPathExpression,System.Xml.XPath.XPathNodeIterator)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.GetAttribute(System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.InsertAfter">
          <element api="M:System.Xml.XPath.XPathNavigator.InsertAfter" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XmlReader)" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertAfter(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.InsertBefore">
          <element api="M:System.Xml.XPath.XPathNavigator.InsertBefore" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XmlReader)" />
          <element api="M:System.Xml.XPath.XPathNavigator.InsertBefore(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.InsertElementAfter(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.InsertElementBefore(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.IsDescendant(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.XPath.XPathNavigator.IsSamePosition(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.XPath.XPathNavigator.LookupNamespace(System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.LookupPrefix(System.String)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.Matches">
          <element api="M:System.Xml.XPath.XPathNavigator.Matches(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Matches(System.Xml.XPath.XPathExpression)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.MoveTo(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToAttribute(System.String,System.String)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.MoveToChild">
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.Xml.XPath.XPathNodeType)" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToChild(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToFirst" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToFirstAttribute" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToFirstChild" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.MoveToFirstNamespace">
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFirstNamespace(System.Xml.XPath.XPathNamespaceScope)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.MoveToFollowing">
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType)" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.Xml.XPath.XPathNodeType,System.Xml.XPath.XPathNavigator)" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToFollowing(System.String,System.String,System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToId(System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToNamespace(System.String)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.MoveToNext">
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToNext" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.Xml.XPath.XPathNodeType)" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToNext(System.String,System.String)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToNextAttribute" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.MoveToNextNamespace">
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace" />
          <element api="M:System.Xml.XPath.XPathNavigator.MoveToNextNamespace(System.Xml.XPath.XPathNamespaceScope)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToParent" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToPrevious" />
        <element api="M:System.Xml.XPath.XPathNavigator.MoveToRoot" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.PrependChild">
          <element api="M:System.Xml.XPath.XPathNavigator.PrependChild" />
          <element api="M:System.Xml.XPath.XPathNavigator.PrependChild(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XmlReader)" />
          <element api="M:System.Xml.XPath.XPathNavigator.PrependChild(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.PrependChildElement(System.String,System.String,System.String,System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.ReadSubtree" />
        <element api="M:System.Xml.XPath.XPathNavigator.ReplaceRange(System.Xml.XPath.XPathNavigator)" />
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ReplaceSelf">
          <element api="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XmlReader)" />
          <element api="M:System.Xml.XPath.XPathNavigator.ReplaceSelf(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.Select">
          <element api="M:System.Xml.XPath.XPathNavigator.Select(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Select(System.Xml.XPath.XPathExpression)" />
          <element api="M:System.Xml.XPath.XPathNavigator.Select(System.String,System.Xml.IXmlNamespaceResolver)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.SelectAncestors">
          <element api="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.Xml.XPath.XPathNodeType,System.Boolean)" />
          <element api="M:System.Xml.XPath.XPathNavigator.SelectAncestors(System.String,System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.SelectChildren">
          <element api="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.Xml.XPath.XPathNodeType)" />
          <element api="M:System.Xml.XPath.XPathNavigator.SelectChildren(System.String,System.String)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.SelectDescendants">
          <element api="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.Xml.XPath.XPathNodeType,System.Boolean)" />
          <element api="M:System.Xml.XPath.XPathNavigator.SelectDescendants(System.String,System.String,System.Boolean)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.SelectSingleNode">
          <element api="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String)" />
          <element api="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.Xml.XPath.XPathExpression)" />
          <element api="M:System.Xml.XPath.XPathNavigator.SelectSingleNode(System.String,System.Xml.IXmlNamespaceResolver)" />
        </element>
        <element api="M:System.Xml.XPath.XPathNavigator.SetTypedValue(System.Object)" />
        <element api="M:System.Xml.XPath.XPathNavigator.SetValue(System.String)" />
        <element api="M:System.Xml.XPath.XPathNavigator.System#ICloneable#Clone" />
        <element api="M:System.Xml.XPath.XPathNavigator.ToString" />
        <element api="M:System.Xml.XPath.XPathNavigator.WriteSubtree(System.Xml.XmlWriter)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      </containers>
      <file name="025c1b27-59a0-601c-cf0a-a51e6d935c1e" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.SeekableXPathNavigator">
      <topicdata name="SeekableXPathNavigator" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      <apidata name="SeekableXPathNavigator" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.SeekableXPathNavigator.CurrentPosition" />
        <element api="P:System.Xml.XPath.XPathItem.Value" />
        <element api="P:System.Xml.XPath.XPathNavigator.BaseURI" />
        <element api="P:System.Xml.XPath.XPathNavigator.CanEdit" />
        <element api="P:System.Xml.XPath.XPathNavigator.HasAttributes" />
        <element api="P:System.Xml.XPath.XPathNavigator.HasChildren" />
        <element api="P:System.Xml.XPath.XPathNavigator.InnerXml" />
        <element api="P:System.Xml.XPath.XPathNavigator.IsEmptyElement" />
        <element api="P:System.Xml.XPath.XPathNavigator.IsNode" />
        <element api="P:System.Xml.XPath.XPathNavigator.LocalName" />
        <element api="P:System.Xml.XPath.XPathNavigator.Name" />
        <element api="P:System.Xml.XPath.XPathNavigator.NamespaceURI" />
        <element api="P:System.Xml.XPath.XPathNavigator.NameTable" />
        <element api="P:System.Xml.XPath.XPathNavigator.NodeType" />
        <element api="P:System.Xml.XPath.XPathNavigator.OuterXml" />
        <element api="P:System.Xml.XPath.XPathNavigator.Prefix" />
        <element api="P:System.Xml.XPath.XPathNavigator.SchemaInfo" />
        <element api="P:System.Xml.XPath.XPathNavigator.TypedValue" />
        <element api="P:System.Xml.XPath.XPathNavigator.UnderlyingObject" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueAsBoolean" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueAsDateTime" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueAsDouble" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueAsInt" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueAsLong" />
        <element api="P:System.Xml.XPath.XPathNavigator.ValueType" />
        <element api="P:System.Xml.XPath.XPathNavigator.XmlLang" />
        <element api="P:System.Xml.XPath.XPathNavigator.XmlType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      </containers>
      <file name="4e9655be-53e6-c2f6-3da5-f118a4fd4860" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition">
      <topicdata name="ComparePosition" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      <apidata name="ComparePosition" group="member" subgroup="method" />
      <elements>
        <element api="M:System.Xml.XPath.XPathNavigator.ComparePosition(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition(System.Int64,System.Int64)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
      </containers>
      <file name="c9018cf1-fefa-e8ff-e528-e0973dbca77e" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace">
      <topicdata name="GetNamespace" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" />
      <apidata name="GetNamespace" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace(System.Int64)" />
        <element api="M:System.Xml.XPath.XPathNavigator.GetNamespace(System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
      </containers>
      <file name="4cc9b199-9e4c-ac11-50f5-20a92baee169" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
      </containers>
      <file name="9b740337-a66c-58af-bf2c-9bbda4cf5172" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition(System.Int64,System.Int64)">
      <topicdata group="api" />
      <apidata name="ComparePosition" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.ComparePosition" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="firstPosition">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="secondPosition">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlNodeOrder" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
      </containers>
      <file name="6e668c17-fff1-8353-6e17-a3086c274f67" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.SeekableXPathNavigator.CurrentPosition">
      <topicdata group="api" />
      <apidata name="CurrentPosition" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CurrentPosition" />
      <setter name="set_CurrentPosition" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
      </containers>
      <file name="c50b3592-4678-caab-069c-fa31dacc6b31" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetLocalName(System.Int64)">
      <topicdata group="api" />
      <apidata name="GetLocalName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="nodePosition">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
      </containers>
      <file name="7dcee6a6-e64f-228d-7729-3b58424c0995" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetName(System.Int64)">
      <topicdata group="api" />
      <apidata name="GetName" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="nodePosition">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
      </containers>
      <file name="af9001f7-d991-d580-62c3-ad9456aa88a5" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace(System.Int64)">
      <topicdata group="api" />
      <apidata name="GetNamespace" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNamespace" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="nodePosition">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
      </containers>
      <file name="0f03b593-0e2a-39a3-f71e-563ead948f23" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetNodeType(System.Int64)">
      <topicdata group="api" />
      <apidata name="GetNodeType" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="nodePosition">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XPath.XPathNodeType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
      </containers>
      <file name="6f7c5614-ae45-e0c2-d809-4b688cbaced1" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.SeekableXPathNavigator.GetValue(System.Int64)">
      <topicdata group="api" />
      <apidata name="GetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="nodePosition">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
      </containers>
      <file name="66613a78-d9d6-f54e-306a-fb4a95b049a6" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.ServiceThrottle">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.ServiceThrottle" />
      <apidata name="ServiceThrottle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="43f9f8ad-7825-c6b3-dbca-f6359e12cb73" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.ServiceThrottle">
      <topicdata name="ServiceThrottle" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.ServiceThrottle" />
      <apidata name="ServiceThrottle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls" />
        <element api="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />
        <element api="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ServiceThrottle" />
      </containers>
      <file name="423a57ab-4e1f-dfff-5ad6-b9336b729078" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.ServiceThrottle">
      <topicdata name="ServiceThrottle" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.ServiceThrottle" />
      <apidata name="ServiceThrottle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ServiceThrottle" />
      </containers>
      <file name="3d7c1314-a8ba-1c78-affa-678f7e9509ea" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.ServiceThrottle">
      <topicdata name="ServiceThrottle" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.ServiceThrottle" />
      <apidata name="ServiceThrottle" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls" />
        <element api="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances" />
        <element api="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ServiceThrottle" />
      </containers>
      <file name="388a6f59-6f10-3d8a-d300-d8bca7c5d8ed" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls">
      <topicdata group="api" />
      <apidata name="MaxConcurrentCalls" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxConcurrentCalls" />
      <setter name="set_MaxConcurrentCalls" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ServiceThrottle" ref="true" />
      </containers>
      <file name="fe2f78f6-e2d6-0e57-e81c-131f030b1f63" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances">
      <topicdata group="api" />
      <apidata name="MaxConcurrentInstances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxConcurrentInstances" />
      <setter name="set_MaxConcurrentInstances" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ServiceThrottle" ref="true" />
      </containers>
      <file name="ded5af52-f6ce-c297-2e81-552f7795b63c" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions">
      <topicdata group="api" />
      <apidata name="MaxConcurrentSessions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxConcurrentSessions" />
      <setter name="set_MaxConcurrentSessions" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.ServiceThrottle" ref="true" />
      </containers>
      <file name="b8970995-223b-7763-a112-06d9051b739b" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />
      <apidata name="StrictAndMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="407db008-bec5-b18a-37d2-2bbbf67863e8" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.StrictAndMessageFilter">
      <topicdata name="StrictAndMessageFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />
      <apidata name="StrictAndMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.#ctor(System.ServiceModel.Dispatcher.MessageFilter,System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.CreateFilterTable``1" />
        <element api="Overload:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />
      </containers>
      <file name="a47f5f6f-f87d-db16-9cd6-3c16e80cdc7c" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.StrictAndMessageFilter">
      <topicdata name="StrictAndMessageFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />
      <apidata name="StrictAndMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.CreateFilterTable``1" />
        <element api="Overload:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />
      </containers>
      <file name="24358302-fa67-ec0c-dd3c-63c9575ab5d9" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match">
      <topicdata name="Match" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" />
      <apidata name="Match" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" ref="true" />
      </containers>
      <file name="50fbc541-36cc-9d1e-8e7a-70c2c1d2b89a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.#ctor(System.ServiceModel.Dispatcher.MessageFilter,System.ServiceModel.Dispatcher.MessageFilter)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="filter1">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
        <parameter name="filter2">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" ref="true" />
      </containers>
      <file name="e246dd0e-86f2-7ab5-3045-23bf980a4ec7" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.CreateFilterTable``1">
      <topicdata group="api" />
      <apidata name="CreateFilterTable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TFilterData" />
      </templates>
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
          <specialization>
            <template name="TFilterData" index="0" api="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.CreateFilterTable``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" ref="true" />
      </containers>
      <file name="5ced8f6f-5af8-8915-00ba-44df8d79dcba" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" ref="true" />
      </containers>
      <file name="8ff2ae16-6bcd-1602-8f0c-e9e6f2c185d3" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.StrictAndMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Routing" module="System.ServiceModel.Routing" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
          <noAptca />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.StrictAndMessageFilter" ref="true" />
      </containers>
      <file name="f3db2fa8-fc84-68b1-f361-41a5601e0260" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />
      <apidata name="WebHttpDispatchOperationSelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="c16a5318-7232-711d-8a92-670ee3bb64b7" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector">
      <topicdata name="WebHttpDispatchOperationSelector" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />
      <apidata name="WebHttpDispatchOperationSelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor" />
          <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.GetUriTemplate(System.String)" />
        <element api="F:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.HttpOperationNamePropertyName" />
        <element api="F:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.HttpOperationSelectorUriMatchedPropertyName" />
        <element api="Overload:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation">
          <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)" />
          <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@,System.Boolean@)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />
      </containers>
      <file name="bd91d067-3c5d-33cc-449c-55db20a31464" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector">
      <topicdata name="WebHttpDispatchOperationSelector" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />
      <apidata name="WebHttpDispatchOperationSelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.GetUriTemplate(System.String)" />
        <element api="Overload:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation">
          <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)" />
          <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@,System.Boolean@)" />
        </element>
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />
      </containers>
      <file name="b81b37e9-ba5a-177b-85ae-4b26c4a4f4ec" />
    </api>
    <api id="Fields.T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector">
      <topicdata name="WebHttpDispatchOperationSelector" group="list" subgroup="Fields" typeTopicId="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />
      <apidata name="WebHttpDispatchOperationSelector" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <elements>
        <element api="F:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.HttpOperationNamePropertyName" />
        <element api="F:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.HttpOperationSelectorUriMatchedPropertyName" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />
      </containers>
      <file name="f2dc0312-da3b-f875-df61-1801749adc93" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor(System.ServiceModel.Description.ServiceEndpoint)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" ref="true" />
      </containers>
      <file name="18c9b095-443e-1670-4fbe-65d8bcf17252" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation">
      <topicdata name="SelectOperation" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" />
      <apidata name="SelectOperation" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)" />
        <element api="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@,System.Boolean@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" ref="true" />
      </containers>
      <file name="a8da8ba0-4ef3-bd92-3dc3-99aaa208b368" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor" />
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" ref="true" />
      </containers>
      <file name="72af7966-1abf-17e3-01ca-9a505456e757" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor(System.ServiceModel.Description.ServiceEndpoint)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.#ctor" />
      <parameters>
        <parameter name="endpoint">
          <type api="T:System.ServiceModel.Description.ServiceEndpoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" ref="true" />
      </containers>
      <file name="654525a9-54aa-b2a6-ed2f-ad0590650232" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.GetUriTemplate(System.String)">
      <topicdata group="api" />
      <apidata name="GetUriTemplate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="operationName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UriTemplate" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" ref="true" />
      </containers>
      <file name="3d092c11-a503-1fca-3230-c104eb114c42" />
    </api>
    <api id="F:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.HttpOperationNamePropertyName">
      <topicdata group="api" />
      <apidata name="HttpOperationNamePropertyName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>HttpOperationName</value>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" ref="true" />
      </containers>
      <file name="7462d659-b4d9-a6e2-d6d2-8e7621ee1b64" />
    </api>
    <api id="F:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.HttpOperationSelectorUriMatchedPropertyName">
      <topicdata group="api" />
      <apidata name="HttpOperationSelectorUriMatchedPropertyName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>UriMatched</value>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" ref="true" />
      </containers>
      <file name="5b3113f6-0a64-61ef-953d-4cf7da28a0ff" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)">
      <topicdata group="api" />
      <apidata name="SelectOperation" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <referenceTo>
            <type api="T:System.ServiceModel.Channels.Message" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@)">
          <type api="T:System.ServiceModel.Dispatcher.IDispatchOperationSelector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" ref="true" />
      </containers>
      <file name="1e4436e2-bda4-036b-7277-6d36254b0cff" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation(System.ServiceModel.Channels.Message@,System.Boolean@)">
      <topicdata group="api" />
      <apidata name="SelectOperation" group="member" subgroup="method" />
      <memberdata visibility="family" overload="Overload:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector.SelectOperation" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <referenceTo>
            <type api="T:System.ServiceModel.Channels.Message" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="uriMatched" out="true">
          <referenceTo>
            <type api="T:System.Boolean" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel.Web" module="System.ServiceModel.Web" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.WebHttpDispatchOperationSelector" ref="true" />
      </containers>
      <file name="f79a1e59-af93-9031-6320-5f76907e9b22" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.XPathMessageContext">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageContext" />
      <apidata name="XPathMessageContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Xml.Xsl.XsltContext" ref="true" />
          <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.ServiceModel.XamlIntegration.XPathMessageContextTypeConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="ca7039e1-4af4-9c63-8ab8-6bad1952ba61" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageContext">
      <topicdata name="XPathMessageContext" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
      <apidata name="XPathMessageContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor(System.Xml.NameTable)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.CompareDocument(System.String,System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveVariable(System.String,System.String)" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageContext.Whitespace" />
        <element api="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
        <element api="P:System.Xml.XmlNamespaceManager.DefaultNamespace" />
        <element api="M:System.Xml.XmlNamespaceManager.GetEnumerator" />
        <element api="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
        <element api="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
        <element api="P:System.Xml.XmlNamespaceManager.NameTable" />
        <element api="M:System.Xml.XmlNamespaceManager.PopScope" />
        <element api="M:System.Xml.XmlNamespaceManager.PushScope" />
        <element api="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
      </containers>
      <file name="3fcda951-0896-5a61-9194-da9e8921a586" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.XPathMessageContext">
      <topicdata name="XPathMessageContext" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
      <apidata name="XPathMessageContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.CompareDocument(System.String,System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveVariable(System.String,System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.GetEnumerator" />
        <element api="M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)" />
        <element api="M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)" />
        <element api="M:System.Xml.XmlNamespaceManager.PopScope" />
        <element api="M:System.Xml.XmlNamespaceManager.PushScope" />
        <element api="M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
      </containers>
      <file name="a0606ce4-7410-5867-1e1b-092a5845f8b9" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.XPathMessageContext">
      <topicdata name="XPathMessageContext" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
      <apidata name="XPathMessageContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageContext.Whitespace" />
        <element api="P:System.Xml.XmlNamespaceManager.DefaultNamespace" />
        <element api="P:System.Xml.XmlNamespaceManager.NameTable" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" />
      </containers>
      <file name="683a7815-f653-6107-2908-60461e0ab6a5" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageContext" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor(System.Xml.NameTable)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" ref="true" />
      </containers>
      <file name="402a6932-5504-9a6a-1417-3a08e8884c9a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" ref="true" />
      </containers>
      <file name="a69ed867-657f-e909-92bf-5dabacc72366" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor(System.Xml.NameTable)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageContext.#ctor" />
      <parameters>
        <parameter name="table">
          <type api="T:System.Xml.NameTable" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" ref="true" />
      </containers>
      <file name="80157c66-3157-a802-5408-83263b37abe0" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageContext.CompareDocument(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="CompareDocument" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Xsl.XsltContext.CompareDocument(System.String,System.String)">
          <type api="T:System.Xml.Xsl.XsltContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="baseUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nextBaseUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" ref="true" />
      </containers>
      <file name="b2fdec89-2360-482b-acba-479c1d529590" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="PreserveWhitespace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Xsl.XsltContext.PreserveWhitespace(System.Xml.XPath.XPathNavigator)">
          <type api="T:System.Xml.Xsl.XsltContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="node">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" ref="true" />
      </containers>
      <file name="2b65f933-510a-2c38-dc97-a7ced7d83ac0" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
      <topicdata group="api" />
      <apidata name="ResolveFunction" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Xsl.XsltContext.ResolveFunction(System.String,System.String,System.Xml.XPath.XPathResultType[])">
          <type api="T:System.Xml.Xsl.XsltContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="argTypes">
          <arrayOf rank="1">
            <type api="T:System.Xml.XPath.XPathResultType" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.IXsltContextFunction" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" ref="true" />
      </containers>
      <file name="4b521074-0bcc-ea80-0489-298329f09bfb" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageContext.ResolveVariable(System.String,System.String)">
      <topicdata group="api" />
      <apidata name="ResolveVariable" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xml.Xsl.XsltContext.ResolveVariable(System.String,System.String)">
          <type api="T:System.Xml.Xsl.XsltContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Xsl.IXsltContextVariable" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" ref="true" />
      </containers>
      <file name="8c5af0f1-917b-46d8-2c8a-31283eac5fc9" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathMessageContext.Whitespace">
      <topicdata group="api" />
      <apidata name="Whitespace" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Xml.Xsl.XsltContext.Whitespace">
          <type api="T:System.Xml.Xsl.XsltContext" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Whitespace" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageContext" ref="true" />
      </containers>
      <file name="5157c787-0cd9-077c-6630-f16c6c1be0b7" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.XPathMessageFilter">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
      <apidata name="XPathMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlSchemaProviderAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>StaticGetSchema</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
          <assignment name="ElementName">
            <type api="T:System.String" ref="true" />
            <value>XPathMessageFilter</value>
          </assignment>
          <assignment name="Namespace">
            <type api="T:System.String" ref="true" />
            <value>http://schemas.microsoft.com/serviceModel/2004/05/xpathfilter</value>
          </assignment>
        </attribute>
      </attributes>
      <file name="2eee4e46-67f0-273c-9d48-185f53c45310" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilter">
      <topicdata name="XPathMessageFilter" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
      <apidata name="XPathMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.XmlNamespaceManager)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.Xsl.XsltContext)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.Xsl.XsltContext)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.CreateFilterTable``1" />
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Dispatcher.SeekableXPathNavigator)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilter.NodeQuota" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnGetSchema" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnReadXml(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnWriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.ReadXPath(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.StaticGetSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.TrimToSize" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPath(System.Xml.XmlWriter,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo(System.Xml.XmlWriter,System.String,System.String,System.String,System.Boolean)" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilter.XPath" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
      </containers>
      <file name="0641c2a2-b5b7-7589-2eb7-66e05169775e" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.XPathMessageFilter">
      <topicdata name="XPathMessageFilter" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
      <apidata name="XPathMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.CreateFilterTable``1" />
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.Match">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Dispatcher.SeekableXPathNavigator)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.Xml.XPath.XPathNavigator)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnGetSchema" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnReadXml(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnWriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.ReadXPath(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.StaticGetSchema(System.Xml.Schema.XmlSchemaSet)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#GetSchema" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.TrimToSize" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPath(System.Xml.XmlWriter,System.Xml.IXmlNamespaceResolver)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo(System.Xml.XmlWriter,System.String,System.String,System.String,System.Boolean)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
      </containers>
      <file name="27fc1c83-73a3-b42f-3edb-7eb1fb3a19ec" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.XPathMessageFilter">
      <topicdata name="XPathMessageFilter" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
      <apidata name="XPathMessageFilter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilter.NodeQuota" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilter.XPath" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
      </containers>
      <file name="e3eb5753-22ee-672b-f3ab-522b6acfb90a" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.XmlNamespaceManager)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.Xsl.XsltContext)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.Xsl.XsltContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="15e72f3e-bd3f-5c2f-4077-34a193efa6d8" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.Match">
      <topicdata name="Match" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilter" />
      <apidata name="Match" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Dispatcher.SeekableXPathNavigator)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.Xml.XPath.XPathNavigator)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="20dad19e-6189-ece2-a607-35a76f0c1d21" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="191768bb-634d-2e0f-07c5-871a068b5474" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <parameters>
        <parameter name="xpath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="50154a2a-159d-6b17-ecd5-0aeeb61e92cb" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.XmlNamespaceManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <parameters>
        <parameter name="xpath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="b158ffdd-0010-d811-83de-fd39cbf8b079" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.String,System.Xml.Xsl.XsltContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <parameters>
        <parameter name="xpath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Xsl.XsltContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="74eed093-3cd5-fcce-1f6c-2de5398002b3" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="f8575557-56d6-e16c-4551-2cab101d2a58" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="621b73fb-9aa9-ab6d-0987-81118c5d480c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor(System.Xml.XmlReader,System.Xml.Xsl.XsltContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.#ctor" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xml.Xsl.XsltContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="dd304ddc-a1cf-a119-a030-2db8a0615cda" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.CreateFilterTable``1">
      <topicdata group="api" />
      <apidata name="CreateFilterTable" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.CreateFilterTable``1">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="FilterData" />
      </templates>
      <returns>
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
          <specialization>
            <template name="FilterData" index="0" api="M:System.ServiceModel.Dispatcher.XPathMessageFilter.CreateFilterTable``1" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="24119edb-ff4d-1a70-f04b-e2c1d48db558" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="66446655-9d3e-9a3c-b08b-6fa5007de0ea" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.Match" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="e0346097-ccb6-2116-2859-43d173d69180" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.ServiceModel.Dispatcher.SeekableXPathNavigator)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.Match" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="e4de71b1-a063-7b94-1228-e2ff906c12d0" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.Match(System.Xml.XPath.XPathNavigator)">
      <topicdata group="api" />
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilter.Match" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="c0c2da83-0a71-2121-beec-137345b10931" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathMessageFilter.Namespaces">
      <topicdata group="api" />
      <apidata name="Namespaces" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Namespaces" />
      <returns>
        <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="b9890542-26c5-2068-5779-1534b9877f59" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathMessageFilter.NodeQuota">
      <topicdata group="api" />
      <apidata name="NodeQuota" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NodeQuota" />
      <setter name="set_NodeQuota" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="d84b85c1-aefe-2496-80de-8e2f40be965b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnGetSchema">
      <topicdata group="api" />
      <apidata name="OnGetSchema" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="5ff31721-b2cc-29f3-f061-f3c3ec1ca55f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnReadXml(System.Xml.XmlReader)">
      <topicdata group="api" />
      <apidata name="OnReadXml" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="1fd9c0bb-723a-ed67-80fb-7584b4cf038b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.OnWriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" />
      <apidata name="OnWriteXml" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="380231e7-4e1a-88e9-8269-e73d4bedb46d" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.ReadXPath(System.Xml.XmlReader,System.Xml.XmlNamespaceManager)">
      <topicdata group="api" />
      <apidata name="ReadXPath" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
        <parameter name="namespaces">
          <type api="T:System.Xml.XmlNamespaceManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="9f738546-4749-78d1-169a-b295e55c4074" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.StaticGetSchema(System.Xml.Schema.XmlSchemaSet)">
      <topicdata group="api" />
      <apidata name="StaticGetSchema" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="schemas">
          <type api="T:System.Xml.Schema.XmlSchemaSet" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.Schema.XmlSchemaType" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="3641ca1b-8cd8-abc8-c500-4474587bd9cf" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <topicdata group="api" eiiName="IXmlSerializable.GetSchema" />
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="3d1bfbea-0c7e-f13d-034b-172adc22f156" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <topicdata group="api" eiiName="IXmlSerializable.ReadXml" />
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="e2aab858-bd11-6f79-9aef-c17baec1d356" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <topicdata group="api" eiiName="IXmlSerializable.WriteXml" />
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="732aeffa-d7c5-f0f5-2cc9-9bf2b1b75eeb" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.TrimToSize">
      <topicdata group="api" />
      <apidata name="TrimToSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="366847b8-8419-e01d-a68c-7c595a815363" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPath(System.Xml.XmlWriter,System.Xml.IXmlNamespaceResolver)">
      <topicdata group="api" />
      <apidata name="WriteXPath" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="resolver">
          <type api="T:System.Xml.IXmlNamespaceResolver" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="f0265874-28d3-da09-f5fa-1c99e4c14ebf" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilter.WriteXPathTo(System.Xml.XmlWriter,System.String,System.String,System.String,System.Boolean)">
      <topicdata group="api" />
      <apidata name="WriteXPathTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="prefix">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="localName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ns">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="writeNamespaces">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="628e9554-2b63-4647-af79-f48279dcb959" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathMessageFilter.XPath">
      <topicdata group="api" />
      <apidata name="XPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_XPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
      </containers>
      <file name="d33cf0ba-08c5-b181-34f5-01a5fb6ef1f7" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name="XPathMessageFilterTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TFilterData" />
      </templates>
      <implements>
        <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
          <specialization>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataContractAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="57372f7c-5519-6a48-dbbc-6ece03b35707" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1">
      <topicdata name="XPathMessageFilterTable" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name="XPathMessageFilterTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
      <templates>
        <template name="TFilterData" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator" />
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})" />
        </element>
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota" />
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      </containers>
      <file name="65f18b50-8ad3-51e1-6c1d-67956828dada" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1">
      <topicdata name="XPathMessageFilterTable" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name="XPathMessageFilterTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
      <templates>
        <template name="TFilterData" />
      </templates>
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Linq.Queryable.AsQueryable``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.IQueryable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsQueryable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.IQueryable" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Queryable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="Where" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" source="extension" overload="true">
          <apidata name="Select" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="1" api="M:System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" source="extension" overload="true">
          <apidata name="SelectMany" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="collectionSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TCollection" index="1" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Take" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="TakeWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="Skip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})" source="extension" overload="true">
          <apidata name="SkipWhile" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="Join" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" source="extension" overload="true">
          <apidata name="GroupJoin" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
          </templates>
          <parameters>
            <parameter name="inner">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="outerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="innerKeySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TInner" index="1" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="2" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" source="extension" overload="true">
          <apidata name="OrderByDescending" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.IOrderedEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                    <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                      <specialization>
                        <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Linq.IGrouping`2" ref="true">
                  <specialization>
                    <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                    <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                        <specialization>
                          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                        </specialization>
                      </type>
                    </specialization>
                  </type>
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="GroupBy" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                  <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                    <specialization>
                      <template name="TElement" index="2" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                    </specialization>
                  </type>
                  <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="3" api="M:System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Concat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" source="extension">
          <apidata name="Zip" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TSecond" index="1" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="2" api="M:System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Distinct" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Union" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Intersect" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Except" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="Reverse" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="SequenceEqual" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="second">
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="AsEnumerable" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToArray" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </arrayOf>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" source="extension">
          <apidata name="ToList" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.List`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToDictionary" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})" />
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" source="extension" overload="true">
          <apidata name="ToLookup" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
            <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
          </templates>
          <parameters>
            <parameter name="keySelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="elementSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Linq.ILookup`2" ref="true">
              <specialization>
                <template name="TKey" index="1" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
                <template name="TElement" index="2" api="M:System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="DefaultIfEmpty" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="defaultValue">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="First" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="FirstOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Last" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LastOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Single" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="SingleOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAt" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)" source="extension">
          <apidata name="ElementAtOrDefault" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Any" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension">
          <apidata name="All" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="Count" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})" source="extension" overload="true">
          <apidata name="LongCount" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="predicate">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Boolean" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})" source="extension" overload="true">
          <apidata name="Contains" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="value">
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </parameter>
            <parameter name="comparer">
              <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" source="extension" overload="true">
          <apidata name="Aggregate" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </templates>
          <parameters>
            <parameter name="seed">
              <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
            </parameter>
            <parameter name="func">
              <type api="T:System.Func`3" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
            <parameter name="resultSelector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <template name="TAccumulate" index="1" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                  <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="2" api="M:System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Sum" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Min" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" source="extension" overload="true">
          <apidata name="Max" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <template name="TResult" index="1" api="M:System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Decimal" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Decimal" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Double" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int32" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int32" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Int64" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Int64" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Double" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Single" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Single" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Nullable`1" ref="false">
                    <specialization>
                      <type api="T:System.Single" ref="false" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Nullable`1" ref="false">
              <specialization>
                <type api="T:System.Single" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Double" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Double" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})" source="extension" overload="true">
          <apidata name="Average" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <parameters>
            <parameter name="selector">
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                    <specialization>
                      <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                      <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                    </specialization>
                  </type>
                  <type api="T:System.Decimal" ref="false" />
                </specialization>
              </type>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Decimal" ref="false" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel``1(System.Collections.Generic.IEnumerable{``0})" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </templates>
          <returns>
            <type api="T:System.Linq.ParallelQuery`1" ref="true">
              <specialization>
                <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                  <specialization>
                    <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                    <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)" source="extension" overload="true">
          <apidata name="AsParallel" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Linq.ParallelQuery" ref="true" />
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.ParallelEnumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="OfType" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" source="extension">
          <apidata name="Cast" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <templates>
            <template name="TResult" />
          </templates>
          <returns>
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="TResult" index="0" api="M:System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="System.Core" module="System.Core" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Linq" />
            <type api="T:System.Linq.Enumerable" ref="true" />
          </containers>
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator" />
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})" />
        </element>
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      </containers>
      <file name="d995ed54-3324-c319-9f29-ce61081fa02c" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1">
      <topicdata name="XPathMessageFilterTable" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name="XPathMessageFilterTable" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
      <templates>
        <template name="TFilterData" />
      </templates>
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota" />
        <element api="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      </containers>
      <file name="09b6d34a-cebf-0cc8-2afb-82373183ddec" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="d4a96a07-41d2-10d9-6c9d-db55c6853b19" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add">
      <topicdata name="Add" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name="Add" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="d2747090-1579-86f6-bbe6-d407d6241e8a" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter">
      <topicdata name="GetMatchingFilter" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="6c1b88fa-e542-534d-0e66-59bdf8bd1935" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters">
      <topicdata name="GetMatchingFilters" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="d354aea7-3ac4-ea15-3d0d-acb975517981" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue">
      <topicdata name="GetMatchingValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="7665c9a8-33f7-f2d8-e718-622a65d7b862" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues">
      <topicdata name="GetMatchingValues" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="521cdfa3-9959-598c-d771-a13d4d9fff7c" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove">
      <topicdata name="Remove" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      <apidata name="Remove" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="6964398f-9221-cb6c-5ff9-ac34fb32adb2" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="6091fa12-8a0a-eb7b-8789-22879d1ce32a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor(System.Int32)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.#ctor" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="e18af034-1fe1-d9f6-0fd5-c528be63994f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="71f3b0f8-b863-1b96-d6b9-ac9697cccbee" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.MessageFilter,`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
        <parameter name="data">
          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Add(`0,`1)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="5bffdd66-738e-e501-af49-e141545720ef" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add(System.ServiceModel.Dispatcher.XPathMessageFilter,`0)">
      <topicdata group="api" />
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Add" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
        </parameter>
        <parameter name="data">
          <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="195592c4-55cb-e00b-24eb-db59730f14ba" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Clear">
      <topicdata group="api" />
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="54164575-f98e-95bd-6014-4e56f7602fd1" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Contains(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <topicdata group="api" />
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="75356de6-738c-7320-466a-8aab01f6e6ba" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.ContainsKey(System.ServiceModel.Dispatcher.MessageFilter)">
      <topicdata group="api" />
      <apidata name="ContainsKey" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="515d0bf3-0f4d-6811-5a5b-e2d08f736595" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.CopyTo(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0}[],System.Int32)">
      <topicdata group="api" />
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="2bb52197-df1b-3332-10d9-487c5616a1ba" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Count">
      <topicdata group="api" />
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.Count">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="0617510b-824a-737a-bdd5-15455a90dc1d" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetEnumerator">
      <topicdata group="api" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="632ad97f-318b-5635-8a47-e3fb28e516de" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
      <topicdata group="api" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="filter" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.Message,System.ServiceModel.Dispatcher.MessageFilter@)">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="10587c73-d0b8-3d9f-597f-626952a61146" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
      <topicdata group="api" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="filter" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Channels.MessageBuffer,System.ServiceModel.Dispatcher.MessageFilter@)">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="e207077f-d5d1-243d-7fa0-7104227d90ba" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)">
      <topicdata group="api" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="448a9ed1-ec30-4e3e-8bfc-590855264d07" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter(System.Xml.XPath.XPathNavigator,System.ServiceModel.Dispatcher.MessageFilter@)">
      <topicdata group="api" />
      <apidata name="GetMatchingFilter" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilter" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="filter" out="true">
          <referenceTo>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="3bd81563-a4de-60c5-7eeb-b8efd0b0453a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="f7e30aec-282f-c3b4-7119-f178e3b2d3ee" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="2a778dbc-5ab6-0b1b-b594-7ae1e023b0d8" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="5de8dd9b-4003-9e6f-2d53-447c2bdb5e09" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{System.ServiceModel.Dispatcher.MessageFilter})">
      <topicdata group="api" />
      <apidata name="GetMatchingFilters" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingFilters" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="e8c208d7-f1c5-03f9-be84-6d69129b8d1c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
      <topicdata group="api" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="data" out="true">
          <referenceTo>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.Message,`0@)">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="d1e8eb2d-7b79-ba6b-3362-c95919deb3d2" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
      <topicdata group="api" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="data" out="true">
          <referenceTo>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Channels.MessageBuffer,`0@)">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="cbaa9d18-c075-4572-3824-e6596924edd8" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.ServiceModel.Dispatcher.SeekableXPathNavigator,`0@)">
      <topicdata group="api" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
        </parameter>
        <parameter name="data" out="true">
          <referenceTo>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="141fdc9f-60d5-a9c3-9bf5-87f53bb8ace4" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue(System.Xml.XPath.XPathNavigator,`0@)">
      <topicdata group="api" />
      <apidata name="GetMatchingValue" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="data" out="true">
          <referenceTo>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="c4c9a3ef-c9e7-9981-e642-33425b07c9c4" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
      <topicdata group="api" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.Message,System.Collections.Generic.ICollection{`0})">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="e1da98a3-908b-64b0-7ee7-8f82fa2a7e88" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
      <topicdata group="api" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="messageBuffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.ServiceModel.Dispatcher.IMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Channels.MessageBuffer,System.Collections.Generic.ICollection{`0})">
          <type api="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="13a9bd60-4937-461d-1c3a-c6aa0065cfaf" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.ServiceModel.Dispatcher.SeekableXPathNavigator,System.Collections.Generic.ICollection{`0})">
      <topicdata group="api" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.ServiceModel.Dispatcher.SeekableXPathNavigator" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="5d97bc19-9a05-bda6-bd10-3e727f60932c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues(System.Xml.XPath.XPathNavigator,System.Collections.Generic.ICollection{`0})">
      <topicdata group="api" />
      <apidata name="GetMatchingValues" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.GetMatchingValues" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="navigator">
          <type api="T:System.Xml.XPath.XPathNavigator" ref="true" />
        </parameter>
        <parameter name="results">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="de2b6254-c8b0-0a6a-72e8-2c1581abb07d" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.IsReadOnly">
      <topicdata group="api" />
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="ec474932-4419-a5a5-ef09-5c7b56010185" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Item(System.ServiceModel.Dispatcher.MessageFilter)">
      <topicdata group="api" />
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Item(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="9a2dff64-d357-d84b-2ff9-270d47847b54" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Keys">
      <topicdata group="api" />
      <apidata name="Keys" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Keys" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Keys">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="e31dfae2-7cc8-87eb-7230-c3a82277d4f5" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.NodeQuota">
      <topicdata group="api" />
      <apidata name="NodeQuota" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NodeQuota" />
      <setter name="set_NodeQuota" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.DataMemberAttribute" ref="true" />
        </attribute>
      </attributes>
      <file name="75f8bb44-36af-15e7-463b-7a3d935c39e5" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.Collections.Generic.KeyValuePair{System.ServiceModel.Dispatcher.MessageFilter,`0})">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
                <specialization>
                  <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
                  <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
                </specialization>
              </type>
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="88c5f9cb-7ee6-f32b-f581-34947ae60d7f" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.MessageFilter)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.Remove(`0)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="8ff9ef5d-fd26-cfc6-0500-8addbc2f2e26" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove(System.ServiceModel.Dispatcher.XPathMessageFilter)">
      <topicdata group="api" />
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Remove" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="6b3c0581-0609-dd63-2b8c-ac288549767c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.System#Collections#IEnumerable#GetEnumerator">
      <topicdata group="api" eiiName="IEnumerable.GetEnumerator" />
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="4fd26ae1-1377-008a-7003-c3d87f777d37" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TrimToSize">
      <topicdata group="api" />
      <apidata name="TrimToSize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="8fa48e88-51ba-f60b-f122-53abe2d01d7a" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.TryGetValue(System.ServiceModel.Dispatcher.MessageFilter,`0@)">
      <topicdata group="api" />
      <apidata name="TryGetValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="filter">
          <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
        </parameter>
        <parameter name="data" out="true">
          <referenceTo>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IDictionary`2.TryGetValue(`0,`1@)">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="cc38a12b-1586-e093-b21d-c1410391300a" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1.Values">
      <topicdata group="api" />
      <apidata name="Values" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Values" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.IDictionary`2.Values">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageFilter" ref="true" />
              <template name="TFilterData" index="0" api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageFilterTable`1" ref="true" />
      </containers>
      <file name="d27ce4bd-c2ae-b339-028d-dae28f0b4f5e" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" />
      <apidata name="XPathMessageQueryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" ref="true" />
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="1f371e55-5b20-c42f-3b6d-d8a189837849" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection">
      <topicdata name="XPathMessageQueryCollection" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" />
      <apidata name="XPathMessageQueryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.#ctor" />
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.InsertItem(System.Int32,System.ServiceModel.Dispatcher.MessageQuery)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.RemoveItem(System.Int32)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.SetItem(System.Int32,System.ServiceModel.Dispatcher.MessageQuery)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" />
      </containers>
      <file name="41577c84-fb93-25d6-017d-7c568d96a120" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection">
      <topicdata name="XPathMessageQueryCollection" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" />
      <apidata name="XPathMessageQueryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.#ctor" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Add(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Clear" />
        <element api="M:System.Collections.ObjectModel.Collection`1.ClearItems" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Contains(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.CopyTo(`0[],System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.IndexOf(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Insert(System.Int32,`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.Remove(`0)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.RemoveAt(System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Add(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Contains(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IndexOf(System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <element api="M:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Remove(System.Object)" />
        <element api="Overload:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate">
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
        </element>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.InsertItem(System.Int32,System.ServiceModel.Dispatcher.MessageQuery)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.RemoveItem(System.Int32)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.SetItem(System.Int32,System.ServiceModel.Dispatcher.MessageQuery)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" />
      </containers>
      <file name="dd5b0bd1-cfe1-e1c9-ae30-c47a27db0581" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection">
      <topicdata name="XPathMessageQueryCollection" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" />
      <apidata name="XPathMessageQueryCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.#ctor" />
      <elements>
        <element api="P:System.Collections.ObjectModel.Collection`1.Count" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Item(System.Int32)" />
        <element api="P:System.Collections.ObjectModel.Collection`1.Items" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#Generic#ICollection{T}#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#IsSynchronized" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#ICollection#SyncRoot" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsFixedSize" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#IsReadOnly" />
        <element api="P:System.Collections.ObjectModel.Collection`1.System#Collections#IList#Item(System.Int32)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" />
      </containers>
      <file name="affa8728-1ca9-26b8-af39-7583154da9fa" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate">
      <topicdata name="Evaluate" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" ref="true" />
      </containers>
      <file name="10c7af72-cbcf-a6c4-7547-65ec06e31a84" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" ref="true" />
      </containers>
      <file name="5727d77b-b304-bca2-0bca-4f20d0bef918" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)">
          <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="message">
          <type api="T:System.ServiceModel.Channels.Message" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TResult" index="0" api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.Message)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" ref="true" />
      </containers>
      <file name="3fc6b87e-feac-2562-e258-23370f04ffd2" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
      <topicdata group="api" />
      <apidata name="Evaluate" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ServiceModel.Dispatcher.MessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)">
          <type api="T:System.ServiceModel.Dispatcher.MessageQueryCollection" ref="true" />
        </member>
      </overrides>
      <templates>
        <template name="TResult" />
      </templates>
      <parameters>
        <parameter name="buffer">
          <type api="T:System.ServiceModel.Channels.MessageBuffer" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
                <template name="TResult" index="0" api="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.Evaluate``1(System.ServiceModel.Channels.MessageBuffer)" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" ref="true" />
      </containers>
      <file name="7c3457da-6b73-0f56-7423-f5a251b666e7" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.InsertItem(System.Int32,System.ServiceModel.Dispatcher.MessageQuery)">
      <topicdata group="api" />
      <apidata name="InsertItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.InsertItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" ref="true" />
      </containers>
      <file name="0b91abeb-6883-c1d2-23b5-ff5fe37d1fd1" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.RemoveItem(System.Int32)">
      <topicdata group="api" />
      <apidata name="RemoveItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.RemoveItem(System.Int32)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" ref="true" />
      </containers>
      <file name="6e641195-c606-fe0a-6d37-86a2adb6578e" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathMessageQueryCollection.SetItem(System.Int32,System.ServiceModel.Dispatcher.MessageQuery)">
      <topicdata group="api" />
      <apidata name="SetItem" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Collections.ObjectModel.Collection`1.SetItem(System.Int32,`0)">
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="item">
          <type api="T:System.ServiceModel.Dispatcher.MessageQuery" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathMessageQueryCollection" ref="true" />
      </containers>
      <file name="b4f3f88a-9a36-9d44-4df3-2c918c4a685a" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.XPathNavigatorException">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
      <apidata name="XPathNavigatorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
      <family>
        <ancestors>
          <type api="T:System.Xml.XPath.XPathException" ref="true" />
          <type api="T:System.SystemException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.Serialization.KnownTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <arrayOf rank="1">
                <type api="T:System.String" ref="true" />
              </arrayOf>
            </typeValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f64d7471-d667-eab7-fe67-01a065883aec" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.XPathNavigatorException">
      <topicdata name="XPathNavigatorException" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
      <apidata name="XPathNavigatorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="E:System.Exception.SerializeObjectState" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="Overload:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor">
          <element api="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
          <element api="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.String)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
          <element api="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.String,System.Exception)" />
        </element>
        <element api="M:System.Xml.XPath.XPathException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:System.Xml.XPath.XPathException.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
      </containers>
      <file name="913e483a-7e22-463d-bb5b-6a32f5170f90" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.XPathNavigatorException">
      <topicdata name="XPathNavigatorException" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
      <apidata name="XPathNavigatorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
      <elements>
        <element api="M:System.Exception.GetBaseException" />
        <element api="M:System.Exception.GetType" />
        <element api="M:System.Exception.ToString" />
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.MemberwiseClone" />
        <element api="M:System.Xml.XPath.XPathException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
      </containers>
      <file name="ad1b3417-f89f-ca42-da3b-0d2dc6c53bc6" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.XPathNavigatorException">
      <topicdata name="XPathNavigatorException" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
      <apidata name="XPathNavigatorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
      <elements>
        <element api="P:System.Exception.Data" />
        <element api="P:System.Exception.HelpLink" />
        <element api="P:System.Exception.HResult" />
        <element api="P:System.Exception.InnerException" />
        <element api="P:System.Exception.Source" />
        <element api="P:System.Exception.StackTrace" />
        <element api="P:System.Exception.TargetSite" />
        <element api="P:System.Xml.XPath.XPathException.Message" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
      </containers>
      <file name="f78e7b9c-8b03-1c8a-19a9-2765e82a2156" />
    </api>
    <api id="Events.T:System.ServiceModel.Dispatcher.XPathNavigatorException">
      <topicdata name="XPathNavigatorException" group="list" subgroup="Events" typeTopicId="T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
      <apidata name="XPathNavigatorException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" defaultConstructor="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
      <elements>
        <element api="E:System.Exception.SerializeObjectState" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
      </containers>
      <file name="cdb9281d-3e23-0dbb-db37-856250ae999d" />
    </api>
    <api id="Overload:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor">
      <topicdata name=".ctor" group="list" subgroup="overload" memberSubgroup="constructor" pseudo="true" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathNavigatorException" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <elements>
        <element api="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
        <element api="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.String)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathNavigatorException" ref="true" />
      </containers>
      <file name="2c661f96-e200-75de-d44f-3d2b5b5cd6dc" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathNavigatorException" ref="true" />
      </containers>
      <file name="cb9cd451-b93f-1039-f083-3958721c5ab2" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathNavigatorException" ref="true" />
      </containers>
      <file name="754e8358-ca38-02f6-ebd7-d35df0adeffd" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.String)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathNavigatorException" ref="true" />
      </containers>
      <file name="81e96491-87b5-ffc8-f348-56918fdf3f3b" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor(System.String,System.Exception)">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" overload="Overload:System.ServiceModel.Dispatcher.XPathNavigatorException.#ctor" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathNavigatorException" ref="true" />
      </containers>
      <file name="e7073a31-066a-1af3-56bb-28da0b918e11" />
    </api>
    <api id="T:System.ServiceModel.Dispatcher.XPathResult">
      <topicdata group="api" allMembersTopicId="AllMembers.T:System.ServiceModel.Dispatcher.XPathResult" />
      <apidata name="XPathResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
      </containers>
      <file name="2fd87f2d-2ecd-0d9c-0546-041a953cb118" />
    </api>
    <api id="AllMembers.T:System.ServiceModel.Dispatcher.XPathResult">
      <topicdata name="XPathResult" group="list" subgroup="members" typeTopicId="T:System.ServiceModel.Dispatcher.XPathResult" />
      <apidata name="XPathResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.XPathResult.Dispose" />
        <element api="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsBoolean" />
        <element api="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsNodeset" />
        <element api="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsNumber" />
        <element api="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsString" />
        <element api="P:System.ServiceModel.Dispatcher.XPathResult.ResultType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathResult" />
      </containers>
      <file name="210c3b8b-d2b6-ffee-47c9-678b650f6efc" />
    </api>
    <api id="Methods.T:System.ServiceModel.Dispatcher.XPathResult">
      <topicdata name="XPathResult" group="list" subgroup="Methods" typeTopicId="T:System.ServiceModel.Dispatcher.XPathResult" />
      <apidata name="XPathResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="M:System.Object.Equals(System.Object)" />
        <element api="M:System.Object.GetHashCode" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.ToString" />
        <element api="M:System.ServiceModel.Dispatcher.XPathResult.Dispose" />
        <element api="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsBoolean" />
        <element api="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsNodeset" />
        <element api="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsNumber" />
        <element api="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsString" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathResult" />
      </containers>
      <file name="c9db4615-dfbb-3dde-6a53-8901d4925dd9" />
    </api>
    <api id="Properties.T:System.ServiceModel.Dispatcher.XPathResult">
      <topicdata name="XPathResult" group="list" subgroup="Properties" typeTopicId="T:System.ServiceModel.Dispatcher.XPathResult" />
      <apidata name="XPathResult" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="P:System.ServiceModel.Dispatcher.XPathResult.ResultType" />
      </elements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathResult" />
      </containers>
      <file name="510d7f1b-173f-59ea-3048-9231ceabb5f8" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathResult.Dispose">
      <topicdata group="api" />
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathResult" ref="true" />
      </containers>
      <file name="c5e1586b-f80a-478c-1a35-9ad9e6178b5c" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsBoolean">
      <topicdata group="api" />
      <apidata name="GetResultAsBoolean" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathResult" ref="true" />
      </containers>
      <file name="e6adfe2a-e70f-c57c-bb3b-44a97acda990" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsNodeset">
      <topicdata group="api" />
      <apidata name="GetResultAsNodeset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XPath.XPathNodeIterator" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathResult" ref="true" />
      </containers>
      <file name="50cdebd2-9f94-7505-b8f0-f166a8e779c7" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsNumber">
      <topicdata group="api" />
      <apidata name="GetResultAsNumber" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathResult" ref="true" />
      </containers>
      <file name="e6fa9cb0-8570-f6a3-a3e2-cedb104f4370" />
    </api>
    <api id="M:System.ServiceModel.Dispatcher.XPathResult.GetResultAsString">
      <topicdata group="api" />
      <apidata name="GetResultAsString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathResult" ref="true" />
      </containers>
      <file name="0b6fe56c-4a23-116a-3e24-c74d1dec0089" />
    </api>
    <api id="P:System.ServiceModel.Dispatcher.XPathResult.ResultType">
      <topicdata group="api" />
      <apidata name="ResultType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResultType" />
      <returns>
        <type api="T:System.Xml.XPath.XPathResultType" ref="false" />
      </returns>
      <containers>
        <library assembly="System.ServiceModel" module="System.ServiceModel" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.6.81.0" />
        </library>
        <namespace api="N:System.ServiceModel.Dispatcher" />
        <type api="T:System.ServiceModel.Dispatcher.XPathResult" ref="true" />
      </containers>
      <file name="89dc7ec5-90f5-fc9f-cbaf-d03feb06fa6c" />
    </api>
  </apis>
</reflection>