<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="FSharp.Core">
      <assemblydata version="4.4.0.0" culture="" key="002400000480000094000000060200000024000052534131000400000100010007D1FA57C4AED9F0A32E84AA0FAEFD0DE9E8FD6AEC8F87FB03766C834C99921EB23BE79AD9D5DCC1DD9AD236132102900B723CF980957FC4E177108FC607774F29E8320E92EA05ECE4E821C0A5EFE8F1645C4C0C93C1AB99285D622CAA652C1DFAD63D745D6F2DE5F17E5EAF0FC4963D261C8A12436518206DC093344D5AD293" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.FSharpInterfaceDataVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>2</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Core.LanguagePrimitives.IntrinsicOperators</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Core</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Collections</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Control</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Linq.QueryRunExtensions.LowPriority</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.AutoOpenAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft.FSharp.Linq.QueryRunExtensions.HighPriority</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDefaultAliasAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharp.Core.dll</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft Corporation</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Microsoft® Visual Studio® [Version] [Release]</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>© Microsoft Corporation. All rights reserved.</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.40.23020.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyInformationalVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.SatelliteContractVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>4.4.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en-US</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDelaySignAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>True</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyKeyFileAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>f:\dd\tools\devdiv\FinalPublicKey.snk</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Microsoft.FSharp.Quotations">
      <topicdata group="api" />
      <apidata name="Microsoft.FSharp.Quotations" group="namespace" />
      <elements>
        <element api="T:Microsoft.FSharp.Quotations.FSharpVar" />
        <element api="T:Microsoft.FSharp.Quotations.FSharpExpr" />
        <element api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" />
        <element api="T:Microsoft.FSharp.Quotations.ExprShapeModule" />
        <element api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" />
        <element api="T:Microsoft.FSharp.Quotations.PatternsModule" />
      </elements>
      <file name="62eede21-6ffc-2cc9-886b-e7d7b0c8fd1e" />
    </api>
    <api id="T:Microsoft.FSharp.Quotations.DerivedPatternsModule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.DerivedPatternsModule" />
      <apidata name="DerivedPatternsModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
            <enumValue>
              <field name="ModuleSuffix" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="1af90087-6787-5576-4a3d-54682ce55fdf" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Quotations.DerivedPatternsModule">
      <topicdata name="DerivedPatternsModule" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" />
      <apidata name="DerivedPatternsModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.AndAlsoPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.ApplicationsPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.BoolPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.BytePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.CharPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.DecimalPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.DoublePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int16Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int32Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int64Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.LambdasPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.MethodWithReflectedDefinitionPattern(System.Reflection.MethodBase)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.OrElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.PropertyGetterWithReflectedDefinitionPattern(System.Reflection.PropertyInfo)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.PropertySetterWithReflectedDefinitionPattern(System.Reflection.PropertyInfo)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SBytePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SinglePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SpecificCallPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.StringPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt16Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt32Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt64Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UnitPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" />
      </containers>
      <file name="3d2f5490-252a-c3d7-696e-7c7198a1b296" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Quotations.DerivedPatternsModule">
      <topicdata name="DerivedPatternsModule" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" />
      <apidata name="DerivedPatternsModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.AndAlsoPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.ApplicationsPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.BoolPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.BytePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.CharPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.DecimalPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.DoublePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int16Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int32Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int64Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.LambdasPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.MethodWithReflectedDefinitionPattern(System.Reflection.MethodBase)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.OrElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.PropertyGetterWithReflectedDefinitionPattern(System.Reflection.PropertyInfo)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.PropertySetterWithReflectedDefinitionPattern(System.Reflection.PropertyInfo)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SBytePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SinglePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SpecificCallPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.StringPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt16Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt32Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt64Pattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UnitPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" />
      </containers>
      <file name="becee832-e856-e9d1-b3b4-8ac06e899e7d" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.AndAlsoPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="AndAlsoPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|AndAlso|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="74796796-5bf8-2f50-b685-4caee168778d" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.ApplicationsPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="ApplicationsPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                      <specialization>
                        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Applications|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="dc908484-4d1d-fdeb-a6d7-5896e286574d" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.BoolPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="BoolPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Boolean" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Bool|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="d204f1d1-9aaa-f5e5-22d8-3912b03b4365" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.BytePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="BytePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Byte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Byte|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3f5f43e2-9e4f-8c79-3fb4-4117701f6bea" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.CharPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="CharPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Char" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Char|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a2900baf-be0d-18d7-c61b-77f978d6eaad" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.DecimalPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="DecimalPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Decimal" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Decimal|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b2948461-02df-1903-7310-e7eb8845f9c7" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.DoublePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="DoublePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Double" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Double|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="abf5608d-a090-e44c-63ac-591f7db0d735" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int16Pattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="Int16Pattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Int16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Int16|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="1a429729-4bd8-c9b1-72c1-934bbe965fa0" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int32Pattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="Int32Pattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Int32|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="16f850f0-bd22-dda1-182b-ead3c412162a" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.Int64Pattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="Int64Pattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Int64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Int64|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="53331a14-dc74-16f2-60bd-7dc8469c3793" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.LambdasPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="LambdasPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                      <specialization>
                        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Lambdas|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9c44f0ea-76a5-1afc-ef14-1363442b1efc" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.MethodWithReflectedDefinitionPattern(System.Reflection.MethodBase)">
      <topicdata group="api" />
      <apidata name="MethodWithReflectedDefinitionPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodBase">
          <type api="T:System.Reflection.MethodBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|MethodWithReflectedDefinition|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bfc475e3-45f9-f7ad-43a6-614ba8769d64" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.OrElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="OrElsePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|OrElse|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="42212dcc-bfba-738c-d1c1-af32e916480e" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.PropertyGetterWithReflectedDefinitionPattern(System.Reflection.PropertyInfo)">
      <topicdata group="api" />
      <apidata name="PropertyGetterWithReflectedDefinitionPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyInfo">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|PropertyGetterWithReflectedDefinition|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fdc8c895-ae4a-870e-d4c7-1b0885553217" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.PropertySetterWithReflectedDefinitionPattern(System.Reflection.PropertyInfo)">
      <topicdata group="api" />
      <apidata name="PropertySetterWithReflectedDefinitionPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="propertyInfo">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|PropertySetterWithReflectedDefinition|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="551ab3e5-7a81-e498-9738-9dbb3c651f16" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SBytePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="SBytePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.SByte" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|SByte|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="b4ba511e-4841-5aa1-8a91-9418e56530c4" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SinglePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="SinglePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Single" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Single|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="61f7b7fa-5aec-2500-4cf7-142610e6ffcd" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.SpecificCallPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="SpecificCallPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="templateParameter">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
            <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
              <specialization>
                <type api="T:System.Tuple`3" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                      <specialization>
                        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                      </specialization>
                    </type>
                    <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                      <specialization>
                        <type api="T:System.Type" ref="true" />
                      </specialization>
                    </type>
                    <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                      <specialization>
                        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|SpecificCall|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2194a992-51f2-a416-e64c-bfe4f7b8ee0f" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.StringPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="StringPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|String|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e45c4fdb-1172-e17c-1643-c707980aa607" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt16Pattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="UInt16Pattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.UInt16" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|UInt16|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="4932d747-9a86-d01e-1952-bdc4708d4c88" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt32Pattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="UInt32Pattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|UInt32|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="768c5551-5a60-1ffc-f22d-cff1bd7bdb2d" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UInt64Pattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="UInt64Pattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.UInt64" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|UInt64|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3c4408b0-4631-e15e-5fc4-25feca00c337" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.DerivedPatternsModule.UnitPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="UnitPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Core.Unit" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.DerivedPatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Unit|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="e4b45b57-f6fb-8cb5-a9d5-25c95146f434" />
    </api>
    <api id="T:Microsoft.FSharp.Quotations.ExprShapeModule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.ExprShapeModule" />
      <apidata name="ExprShapeModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
            <enumValue>
              <field name="ModuleSuffix" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="f3096caf-76f8-ad11-8f8a-7674909c5c92" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Quotations.ExprShapeModule">
      <topicdata name="ExprShapeModule" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Quotations.ExprShapeModule" />
      <apidata name="ExprShapeModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.ExprShapeModule.RebuildShapeCombination(System.Object,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.ExprShapeModule.ShapePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.ExprShapeModule" />
      </containers>
      <file name="1378ce43-00d8-a3b8-d6cd-a7267cde93ca" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Quotations.ExprShapeModule">
      <topicdata name="ExprShapeModule" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Quotations.ExprShapeModule" />
      <apidata name="ExprShapeModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.ExprShapeModule.RebuildShapeCombination(System.Object,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.ExprShapeModule.ShapePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.ExprShapeModule" />
      </containers>
      <file name="d77b503f-22aa-375b-0215-183917892c22" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.ExprShapeModule.RebuildShapeCombination(System.Object,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})">
      <topicdata group="api" />
      <apidata name="RebuildShapeCombination" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="shape">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.ExprShapeModule" ref="true" />
      </containers>
      <file name="c6919b5a-28e2-421c-0f1c-0b2edeedfe8d" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.ExprShapeModule.ShapePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="ShapePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpChoice`3" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.ExprShapeModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|ShapeVar|ShapeLambda|ShapeCombination|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="526593e4-2c8d-af74-3e2b-e4777f80d8b4" />
    </api>
    <api id="T:Microsoft.FSharp.Quotations.FSharpExpr">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="FSharpExpr" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" ref="true" />
        </descendents>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpExpr</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.ClassAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="614edf54-5c35-ae3f-ca7f-738f622732c9" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr">
      <topicdata name="FSharpExpr" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="FSharpExpr" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.Call">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(System.Type)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)" />
        </element>
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        </element>
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Quote(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.ToString">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(System.Reflection.MethodBase)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpExpr.Type" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.Value">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)" />
        </element>
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Var(Microsoft.FSharp.Quotations.FSharpVar)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.WithValue">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" />
      </containers>
      <file name="22e47d1d-ea85-1eb0-45d3-49ff1d28082c" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Quotations.FSharpExpr">
      <topicdata name="FSharpExpr" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="FSharpExpr" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.Call">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(System.Type)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)" />
        </element>
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        </element>
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Quote(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.ToString">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(System.Reflection.MethodBase)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.Value">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)" />
        </element>
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)" />
        </element>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Var(Microsoft.FSharp.Quotations.FSharpVar)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr.WithValue">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" />
      </containers>
      <file name="4632c9ed-b8cd-d5c6-02d2-24c0d8f7d551" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Quotations.FSharpExpr">
      <topicdata name="FSharpExpr" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="FSharpExpr" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpExpr.Type" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" />
      </containers>
      <file name="68b4adc5-ef12-6a19-8cae-4e5c636f08b6" />
    </api>
    <api id="Overload:Microsoft.FSharp.Quotations.FSharpExpr.Call">
      <topicdata name="Call" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="Call" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="e7cee0d3-9c01-de70-1533-cbc213567eec" />
    </api>
    <api id="Overload:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet">
      <topicdata name="FieldGet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="FieldGet" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="2880098c-34a6-1bc9-25f2-c45c45868ec5" />
    </api>
    <api id="Overload:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet">
      <topicdata name="FieldSet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="FieldSet" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="edab8183-dc68-6481-cc5b-b4fcfc574c8d" />
    </api>
    <api id="Overload:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet">
      <topicdata name="PropertyGet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="PropertyGet" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="7dab6461-dca4-6159-4e72-89ef85f4e27f" />
    </api>
    <api id="Overload:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet">
      <topicdata name="PropertySet" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="PropertySet" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="96459433-9e30-10c8-95c1-4dc72e7337fe" />
    </api>
    <api id="Overload:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions">
      <topicdata name="RegisterReflectedDefinitions" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="RegisterReflectedDefinitions" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="10e7df64-216f-93a1-efb7-37eb2f385f65" />
    </api>
    <api id="Overload:Microsoft.FSharp.Quotations.FSharpExpr.ToString">
      <topicdata name="ToString" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="ToString" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="2bd8fe9b-d796-4de8-1546-66e4d1dc1d2f" />
    </api>
    <api id="Overload:Microsoft.FSharp.Quotations.FSharpExpr.Value">
      <topicdata name="Value" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="Value" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="e458fe16-e549-a200-d36e-a53a45b89cb7" />
    </api>
    <api id="Overload:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName">
      <topicdata name="ValueWithName" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="ValueWithName" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="dd73d990-5653-0890-6414-b0a8cd289b34" />
    </api>
    <api id="Overload:Microsoft.FSharp.Quotations.FSharpExpr.WithValue">
      <topicdata name="WithValue" group="list" subgroup="overload" memberSubgroup="method" pseudo="true" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr" />
      <apidata name="WithValue" group="member" subgroup="method" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="bd88c941-a294-46f5-1f8a-ca67785eccf4" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.AddressOf(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="AddressOf" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="c0775331-55b0-3a51-bb28-cbf2349e8c47" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.AddressSet(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="AddressSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="fbb246cf-f9ff-36cb-7465-256a3e3a7d77" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Application(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="Application" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="functionExpr">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="argument">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="2009c9ea-0059-ef77-b64c-962865456bfc" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Applications(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})">
      <topicdata group="api" />
      <apidata name="Applications" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="functionExpr">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="ff99d323-78f8-1f6e-b051-f912d49b535c" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Call(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="methodInfo">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="905c1419-b3b2-5f08-dce0-60f98276313e" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Call(System.Reflection.MethodInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})">
      <topicdata group="api" />
      <apidata name="Call" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.Call" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodInfo">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="ea5d638b-7095-4fff-6232-c1f0e143ba0e" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="Cast" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Quotations.FSharpExpr.Cast``1(Microsoft.FSharp.Quotations.FSharpExpr)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="bae968d1-330d-5750-617d-26029d5dbd02" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Coerce(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)">
      <topicdata group="api" />
      <apidata name="Coerce" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="f75dcbd3-25bb-d4c1-bb72-fecf97df395b" />
    </api>
    <api id="P:Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes">
      <topicdata group="api" />
      <apidata name="CustomAttributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CustomAttributes" />
      <returns>
        <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="f24a224f-7716-af2d-0e91-40375220ff57" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.DefaultValue(System.Type)">
      <topicdata group="api" />
      <apidata name="DefaultValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expressionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="1bc01ea1-8043-aef7-aa5a-db730d25f0ff" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Deserialize(System.Type,Microsoft.FSharp.Collections.FSharpList{System.Type},Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr},System.Byte[])">
      <topicdata group="api" />
      <apidata name="Deserialize" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="qualifyingType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="spliceTypes">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="spliceExprs">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="daf2d1fd-6069-2193-17e8-0b64bcae3fb8" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Deserialize40(System.Type,System.Type[],System.Type[],Microsoft.FSharp.Quotations.FSharpExpr[],System.Byte[])">
      <topicdata group="api" />
      <apidata name="Deserialize40" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="qualifyingType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="referencedTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="spliceTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="spliceExprs">
          <arrayOf rank="1">
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="c8a0ca46-f9ef-53b7-327d-617e7801e675" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="67c70c79-79d9-2d7f-b5ab-b0e7adacee00" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo)">
      <topicdata group="api" />
      <apidata name="FieldGet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="fieldInfo">
          <type api="T:System.Reflection.FieldInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="1c787c01-78c5-b56d-d19b-677c4b3e18fe" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet(System.Reflection.FieldInfo)">
      <topicdata group="api" />
      <apidata name="FieldGet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.FieldGet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fieldInfo">
          <type api="T:System.Reflection.FieldInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="5d833db2-be16-3c67-b945-eb887843889a" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="FieldSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="fieldInfo">
          <type api="T:System.Reflection.FieldInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="c64bd3fa-6c41-460d-5d99-c1ecaccc4d2e" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet(System.Reflection.FieldInfo,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="FieldSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.FieldSet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fieldInfo">
          <type api="T:System.Reflection.FieldInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="54f08c98-a684-c14b-98c3-3ef6c474e552" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.ForIntegerRangeLoop(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="ForIntegerRangeLoop" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="loopVariable">
          <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
        </parameter>
        <parameter name="start">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="endExpr">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="6682877b-3b0f-dfb7-ee92-8be7281e8ab7" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars">
      <topicdata group="api" />
      <apidata name="GetFreeVars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="6a7ca919-5ec6-99cd-84e7-aae490f1a0e3" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="c02caeae-478b-eabf-87d4-0ea08200cc3f" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)">
      <topicdata group="api" />
      <apidata name="GlobalVar" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Quotations.FSharpExpr.GlobalVar``1(System.String)" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="7adc1c7a-605f-628e-7351-53f1b80b4cc9" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.IfThenElse(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="IfThenElse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guard">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="thenExpr">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="elseExpr">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="604effb8-cc22-4bcc-f145-312ec3e0e191" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Lambda(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="Lambda" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="parameter">
          <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="7f7a536b-ebaf-bbed-77d5-e0c3e78d9f25" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Let(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="Let" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="letVariable">
          <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
        </parameter>
        <parameter name="letExpr">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="cca4cd4f-106a-3019-41a2-ac2f394dc2fe" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.LetRecursive(Microsoft.FSharp.Collections.FSharpList{System.Tuple{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr}},Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="LetRecursive" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bindings">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:System.Tuple`2" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                  <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="925adc5e-f92a-526b-5588-fd8ba7169f44" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewArray(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})">
      <topicdata group="api" />
      <apidata name="NewArray" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elementType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="elements">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="5bf74da0-3d4e-882d-7872-35b32d4ea6fb" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewDelegate(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpVar},Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="NewDelegate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="delegateType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="6f1205aa-3f14-581d-0155-90dd343681e6" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewObject(System.Reflection.ConstructorInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})">
      <topicdata group="api" />
      <apidata name="NewObject" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="constructorInfo">
          <type api="T:System.Reflection.ConstructorInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="d814b304-a9c5-366c-0cb3-efdbaec5f8c4" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewRecord(System.Type,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})">
      <topicdata group="api" />
      <apidata name="NewRecord" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="recordType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="elements">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="a2a4b740-9232-11c4-ce25-d3ea4e90048d" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewTuple(Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})">
      <topicdata group="api" />
      <apidata name="NewTuple" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="elements">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="4e7b5ecd-c18b-b930-5801-158e68aee397" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.NewUnionCase(Microsoft.FSharp.Reflection.UnionCaseInfo,Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr})">
      <topicdata group="api" />
      <apidata name="NewUnionCase" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="unionCase">
          <type api="T:Microsoft.FSharp.Reflection.UnionCaseInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="4b4a6d96-9d63-154c-4801-60df8cdecad2" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})">
      <topicdata group="api" />
      <apidata name="PropertyGet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="property">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
        <parameter name="indexerArgs">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="904ea576-c432-f4aa-7813-405d9fecf5d9" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet(System.Reflection.PropertyInfo,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})">
      <topicdata group="api" />
      <apidata name="PropertyGet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.PropertyGet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
        <parameter name="indexerArgs">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="c5084cdb-dd42-a663-6bfe-43bb7eb0bd5f" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(Microsoft.FSharp.Quotations.FSharpExpr,System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})">
      <topicdata group="api" />
      <apidata name="PropertySet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="obj">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="property">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="indexerArgs">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="ffffe0b8-e5c8-998d-4073-4d61120ffc9d" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet(System.Reflection.PropertyInfo,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Collections.FSharpList{Microsoft.FSharp.Quotations.FSharpExpr}})">
      <topicdata group="api" />
      <apidata name="PropertySet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.PropertySet" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="property">
          <type api="T:System.Reflection.PropertyInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="indexerArgs">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="5accb3d7-d8d6-c90b-7c23-2151fdbbf016" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Quote(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="Quote" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inner">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Please use Expr.QuoteTyped or Expr.QuoteRaw to distinguish between typed and raw quotation literals</value>
          </argument>
        </attribute>
      </attributes>
      <file name="20d67d94-b5bd-010b-9408-1fdd111d6c18" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.QuoteRaw(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="QuoteRaw" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inner">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="24c68014-d999-8af9-c799-4a878ba072da" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.QuoteTyped(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="QuoteTyped" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inner">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="cfa041b2-2944-2213-d871-e9afda6f9c84" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[])">
      <topicdata group="api" />
      <apidata name="RegisterReflectedDefinitions" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
        <parameter name="resource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="serializedValue">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="1a00d7d6-c34a-5616-38a0-03abc6b07750" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions(System.Reflection.Assembly,System.String,System.Byte[],System.Type[])">
      <topicdata group="api" />
      <apidata name="RegisterReflectedDefinitions" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.RegisterReflectedDefinitions" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="assembly">
          <type api="T:System.Reflection.Assembly" ref="true" />
        </parameter>
        <parameter name="resource">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="serializedValue">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="referencedTypes">
          <arrayOf rank="1">
            <type api="T:System.Type" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="88614bc0-e269-6828-006b-d9447e54173a" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Sequential(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="Sequential" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="first">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="second">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="42a42f24-9134-75ed-577e-8b539a7f5dbf" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})">
      <topicdata group="api" />
      <apidata name="Substitute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="substitution">
          <type api="T:Microsoft.FSharp.Core.FSharpFunc`2" ref="true">
            <specialization>
              <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
              <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                <specialization>
                  <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="3bebcdb7-d9d6-bcb5-76a8-02d174b25949" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.ToString" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="7c76d527-249a-c6c0-f834-cbcd08a7d03a" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.ToString" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="full">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="6a3afabf-d2cb-858f-07e5-8cb0cc5bd515" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.TryFinally(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="TryFinally" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="compensation">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="96f594f1-a79b-b067-9b06-dc7bd23cd03a" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.TryGetReflectedDefinition(System.Reflection.MethodBase)">
      <topicdata group="api" />
      <apidata name="TryGetReflectedDefinition" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodBase">
          <type api="T:System.Reflection.MethodBase" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="49385f54-1ff0-f6ec-a14a-873bb901e947" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.TryWith(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="TryWith" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="filterVar">
          <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
        </parameter>
        <parameter name="filterBody">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="catchVar">
          <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
        </parameter>
        <parameter name="catchBody">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="e1108c02-4b4d-2885-d5fa-cfe38deafb72" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.TupleGet(Microsoft.FSharp.Quotations.FSharpExpr,System.Int32)">
      <topicdata group="api" />
      <apidata name="TupleGet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="tuple">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="b319477b-d310-ce49-b399-508ff7e8a10c" />
    </api>
    <api id="P:Microsoft.FSharp.Quotations.FSharpExpr.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="e52da383-89cf-0756-9264-505e34f17a91" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.TypeTest(Microsoft.FSharp.Quotations.FSharpExpr,System.Type)">
      <topicdata group="api" />
      <apidata name="TypeTest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="844194b2-efec-10e0-4365-dc29d28f7403" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.UnionCaseTest(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Reflection.UnionCaseInfo)">
      <topicdata group="api" />
      <apidata name="UnionCaseTest" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="unionCase">
          <type api="T:Microsoft.FSharp.Reflection.UnionCaseInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="1f2f8f29-ec13-bedd-00ad-cd6aff8752c9" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Value(System.Object,System.Type)">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.Value" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="expressionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="059bf69f-93ec-ca17-30dd-f661d4b1015c" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)">
      <topicdata group="api" />
      <apidata name="Value" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.Value" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Quotations.FSharpExpr.Value``1(``0)" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="6155f316-b56f-d151-2576-f0aad17abd92" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName(System.Object,System.Type,System.String)">
      <topicdata group="api" />
      <apidata name="ValueWithName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="expressionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="d209e498-ff7e-5996-f05e-e1db81d5cea0" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)">
      <topicdata group="api" />
      <apidata name="ValueWithName" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Quotations.FSharpExpr.ValueWithName``1(``0,System.String)" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="6aac48fa-6e30-08a5-785e-fe3c752bcfac" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.Var(Microsoft.FSharp.Quotations.FSharpVar)">
      <topicdata group="api" />
      <apidata name="Var" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="282c3a3f-8f49-71c8-70e8-7f6fa34d44a2" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.VarSet(Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="VarSet" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="variable">
          <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="9f9ad7a9-d8cc-406d-e193-afcdecb47515" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.WhileLoop(Microsoft.FSharp.Quotations.FSharpExpr,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="WhileLoop" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="guard">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
        <parameter name="body">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="f9c72a4c-f8da-963b-e82c-d66b15cecfd4" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue(System.Object,System.Type,Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="WithValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.WithValue" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="expressionType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="definition">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="9c09f78d-eed3-c972-0959-0b2b8891c2a2" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})">
      <topicdata group="api" />
      <apidata name="WithValue" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" overload="Overload:Microsoft.FSharp.Quotations.FSharpExpr.WithValue" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T" />
      </templates>
      <parameters>
        <parameter name="value">
          <template name="T" index="0" api="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
        </parameter>
        <parameter name="definition">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" ref="true">
            <specialization>
              <template name="T" index="0" api="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" ref="true">
          <specialization>
            <template name="T" index="0" api="M:Microsoft.FSharp.Quotations.FSharpExpr.WithValue``1(``0,Microsoft.FSharp.Quotations.FSharpExpr{``0})" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </containers>
      <file name="ad53db83-3589-c502-8886-415da652219e" />
    </api>
    <api id="T:Microsoft.FSharp.Quotations.FSharpExpr`1">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr`1" />
      <apidata name="FSharpExpr" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpExpr`1</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.ClassAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="7ef6fd8d-221e-083a-56c6-4885ddf4714c" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Quotations.FSharpExpr`1">
      <topicdata name="FSharpExpr" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Quotations.FSharpExpr`1" />
      <apidata name="FSharpExpr" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr`1.ToString">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)" />
        </element>
        <element api="P:Microsoft.FSharp.Quotations.FSharpExpr.Type" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpExpr`1.Raw" />
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" />
      </containers>
      <file name="c9070c1b-cc93-b051-da4b-84ad8660c7f4" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Quotations.FSharpExpr`1">
      <topicdata name="FSharpExpr" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Quotations.FSharpExpr`1" />
      <apidata name="FSharpExpr" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Equals(System.Object)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.GetFreeVars" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.GetHashCode" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.Substitute(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Quotations.FSharpVar,Microsoft.FSharp.Core.FSharpOption{Microsoft.FSharp.Quotations.FSharpExpr}})" />
        <element api="Overload:Microsoft.FSharp.Quotations.FSharpExpr`1.ToString">
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString" />
          <element api="M:Microsoft.FSharp.Quotations.FSharpExpr.ToString(System.Boolean)" />
        </element>
        <element api="M:System.Object.Finalize" />
        <element api="M:System.Object.GetType" />
        <element api="M:System.Object.MemberwiseClone" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" />
      </containers>
      <file name="4cdac749-74ec-6cdb-4fe6-bdf5fef44a3f" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Quotations.FSharpExpr`1">
      <topicdata name="FSharpExpr" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Quotations.FSharpExpr`1" />
      <apidata name="FSharpExpr" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" />
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="P:Microsoft.FSharp.Quotations.FSharpExpr.CustomAttributes" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpExpr.Type" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpExpr`1.Raw" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" />
      </containers>
      <file name="66c18e70-75d5-eb6c-268f-1cd6cd038ca3" />
    </api>
    <api id="P:Microsoft.FSharp.Quotations.FSharpExpr`1.Raw">
      <topicdata group="api" />
      <apidata name="Raw" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Raw" />
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr`1" ref="true" />
      </containers>
      <file name="fcd54302-a7fb-b012-4c65-c468f94e4eb6" />
    </api>
    <api id="T:Microsoft.FSharp.Quotations.FSharpVar">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.FSharpVar" />
      <apidata name="FSharpVar" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IComparable" ref="true" />
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.SealedAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompiledNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>FSharpVar</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="ObjectType" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="91d6982e-c51e-1910-39ab-dfd76c26c10e" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Quotations.FSharpVar">
      <topicdata name="FSharpVar" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Quotations.FSharpVar" />
      <apidata name="FSharpVar" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.#ctor(System.String,System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.Equals(System.Object)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.GetHashCode" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.Global(System.String,System.Type)" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpVar.IsMutable" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpVar.Name" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.System#IComparable#CompareTo(System.Object)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.ToString" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpVar.Type" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" />
      </containers>
      <file name="81a72876-8db5-a48a-d8f7-2eace0b78827" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Quotations.FSharpVar">
      <topicdata name="FSharpVar" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Quotations.FSharpVar" />
      <apidata name="FSharpVar" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.Equals(System.Object)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.GetHashCode" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.Global(System.String,System.Type)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.System#IComparable#CompareTo(System.Object)" />
        <element api="M:Microsoft.FSharp.Quotations.FSharpVar.ToString" />
        <element api="M:System.Object.GetType" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" />
      </containers>
      <file name="888e6276-b813-b04b-6bcf-e7d6d963ee2d" />
    </api>
    <api id="Properties.T:Microsoft.FSharp.Quotations.FSharpVar">
      <topicdata name="FSharpVar" group="list" subgroup="Properties" typeTopicId="T:Microsoft.FSharp.Quotations.FSharpVar" />
      <apidata name="FSharpVar" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="true" />
      <elements>
        <element api="P:Microsoft.FSharp.Quotations.FSharpVar.IsMutable" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpVar.Name" />
        <element api="P:Microsoft.FSharp.Quotations.FSharpVar.Type" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" />
      </containers>
      <file name="50a4b23d-33df-b26a-f3e7-b5fc32d339a5" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpVar.#ctor(System.String,System.Type,Microsoft.FSharp.Core.FSharpOption{System.Boolean})">
      <topicdata group="api" />
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typ">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="isMutable">
          <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
            <specialization>
              <type api="T:System.Boolean" ref="false" />
            </specialization>
          </type>
          <attributes>
            <attribute>
              <type api="T:Microsoft.FSharp.Core.OptionalArgumentAttribute" ref="true" />
            </attribute>
          </attributes>
        </parameter>
      </parameters>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
      </containers>
      <file name="6ecf4c45-9dcc-e6ca-a9e8-3e0cb322ddc2" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpVar.Equals(System.Object)">
      <topicdata group="api" />
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Equals(System.Object)">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
      </containers>
      <file name="a5d61ceb-7a36-5338-112d-1768e2526e02" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpVar.GetHashCode">
      <topicdata group="api" />
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.GetHashCode">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
      </containers>
      <file name="e16bda96-9943-b483-bbda-0700660ad870" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpVar.Global(System.String,System.Type)">
      <topicdata group="api" />
      <apidata name="Global" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="typ">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
      </containers>
      <file name="2dae1433-2798-c09e-0278-fbf1eee3c9b3" />
    </api>
    <api id="P:Microsoft.FSharp.Quotations.FSharpVar.IsMutable">
      <topicdata group="api" />
      <apidata name="IsMutable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsMutable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
      </containers>
      <file name="77008ecf-e49e-0cae-66fe-65e2de8ee2f2" />
    </api>
    <api id="P:Microsoft.FSharp.Quotations.FSharpVar.Name">
      <topicdata group="api" />
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
      </containers>
      <file name="84b60ebc-6d6b-1f7c-05d3-94239ca15bc1" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpVar.System#IComparable#CompareTo(System.Object)">
      <topicdata group="api" eiiName="IComparable.System-IComparable-CompareTo" />
      <apidata name="System-IComparable-CompareTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <proceduredata virtual="true" eii="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
      </containers>
      <file name="09a4489b-c3b5-e96b-dd62-a34a050b0696" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.FSharpVar.ToString">
      <topicdata group="api" />
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
      </containers>
      <file name="4708e759-1a60-96a0-70af-7733e707b835" />
    </api>
    <api id="P:Microsoft.FSharp.Quotations.FSharpVar.Type">
      <topicdata group="api" />
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
      </containers>
      <file name="f7a061f8-be24-4c76-5c3d-d46625bfe9ca" />
    </api>
    <api id="T:Microsoft.FSharp.Quotations.PatternsModule">
      <topicdata group="api" allMembersTopicId="AllMembers.T:Microsoft.FSharp.Quotations.PatternsModule" />
      <apidata name="PatternsModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationRepresentationAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.CompilationRepresentationFlags" ref="false" />
            <enumValue>
              <field name="ModuleSuffix" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationMappingAttribute" ref="true" />
          <argument>
            <type api="T:Microsoft.FSharp.Core.SourceConstructFlags" ref="false" />
            <enumValue>
              <field name="Module" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
      <file name="d529a8fc-ae7b-bab4-05d3-1eb9a60e4147" />
    </api>
    <api id="AllMembers.T:Microsoft.FSharp.Quotations.PatternsModule">
      <topicdata name="PatternsModule" group="list" subgroup="members" typeTopicId="T:Microsoft.FSharp.Quotations.PatternsModule" />
      <apidata name="PatternsModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.CallPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.CoercePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.LetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.QuotePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.ValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.VarPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" />
      </containers>
      <file name="d5c44579-ce42-19d5-711d-b7cbc915e137" />
    </api>
    <api id="Methods.T:Microsoft.FSharp.Quotations.PatternsModule">
      <topicdata name="PatternsModule" group="list" subgroup="Methods" typeTopicId="T:Microsoft.FSharp.Quotations.PatternsModule" />
      <apidata name="PatternsModule" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <elements>
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.CallPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.CoercePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.LetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.QuotePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.ValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.VarPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
        <element api="M:Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)" />
      </elements>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" />
      </containers>
      <file name="be11cd89-4e36-6e9a-0e35-428851475a41" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.AddressOfPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="AddressOfPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|AddressOf|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6e5c834c-513b-e6a2-780f-5fb33187c4a0" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.AddressSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="AddressSetPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|AddressSet|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="667ee12e-0eb0-6308-88b1-3cbae520f66a" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.ApplicationPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="ApplicationPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Application|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="fcd45bff-fb37-9dbc-dd34-4adb51b49660" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.CallPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="CallPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`3" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
                <type api="T:System.Reflection.MethodInfo" ref="true" />
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Call|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="91a1406f-8d25-112a-f8c7-c3f99078a453" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.CoercePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="CoercePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Coerce|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="00d7b62c-60cd-7cef-1820-06d922e993ef" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.DefaultValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="DefaultValuePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|DefaultValue|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5e9883ca-479b-d507-777d-7fa05113a327" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.FieldGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="FieldGetPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
                <type api="T:System.Reflection.FieldInfo" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|FieldGet|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="873fcccc-f402-0bad-24c8-c45fd90a5db3" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.FieldSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="FieldSetPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`3" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
                <type api="T:System.Reflection.FieldInfo" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|FieldSet|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="19362c2c-7e2b-e84d-658c-326dcaa9d7a7" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.ForIntegerRangeLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="ForIntegerRangeLoopPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`4" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|ForIntegerRangeLoop|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="462f370a-4791-6831-b87d-56675b8a5da4" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.IfThenElsePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="IfThenElsePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`3" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|IfThenElse|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a21688dd-f039-a296-db3c-2cf70e97bab8" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.LambdaPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="LambdaPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Lambda|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a35b01aa-4993-54d8-bd9b-0249f234b25c" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.LetPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="LetPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`3" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Let|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7a59f1f7-b25c-bc14-cb83-5336d4623d49" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.LetRecursivePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="LetRecursivePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:System.Tuple`2" ref="true">
                      <specialization>
                        <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                        <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                      </specialization>
                    </type>
                  </specialization>
                </type>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|LetRecursive|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="96d240e1-80cc-d528-5578-2b48418fa7f2" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.NewArrayPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="NewArrayPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|NewArray|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2683e903-8018-bd32-ddad-80d3c12ac2fe" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.NewDelegatePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="NewDelegatePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`3" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                  </specialization>
                </type>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|NewDelegate|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="edb67620-7cac-f8a2-8975-68ea59f82cfb" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.NewObjectPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="NewObjectPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.Reflection.ConstructorInfo" ref="true" />
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|NewObject|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="2b94f342-4ecd-11fb-9dff-8992ece65376" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.NewRecordPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="NewRecordPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.Type" ref="true" />
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|NewRecord|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="12404934-2add-ca9c-ba14-a12de2a1ed6d" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.NewTuplePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="NewTuplePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|NewTuple|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="6e2b84d2-93c1-7b19-27d2-0a3229a1f0e0" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.NewUnionCasePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="NewUnionCasePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Reflection.UnionCaseInfo" ref="true" />
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|NewUnionCase|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="597217e5-af8b-ad4b-2118-ac32fe6a62bd" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.PropertyGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="PropertyGetPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`3" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
                <type api="T:System.Reflection.PropertyInfo" ref="true" />
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|PropertyGet|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="08b8527b-0129-dcf7-0249-fed7e0ec7314" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.PropertySetPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="PropertySetPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`4" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
                <type api="T:System.Reflection.PropertyInfo" ref="true" />
                <type api="T:Microsoft.FSharp.Collections.FSharpList`1" ref="true">
                  <specialization>
                    <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                  </specialization>
                </type>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|PropertySet|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="bac32c56-0e6d-f177-933c-f72e1af3d643" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.QuotePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="QuotePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Please use QuoteTyped or QuoteRaw to distinguish between typed and raw quotation literals</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Quote|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="012c4f92-8165-137f-c4c0-b1d2c98624ef" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.QuoteRawPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="QuoteRawPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|QuoteRaw|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3c4dbab8-065f-1cfb-d044-c684b5db3ecb" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.QuoteTypedPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="QuoteTypedPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|QuoteTyped|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="7f716f1e-34e0-976a-5e5b-d713b13e96a4" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.SequentialPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="SequentialPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Sequential|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="632fe2b6-e730-5031-c7df-823f75a36626" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.TryFinallyPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="TryFinallyPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|TryFinally|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a32818af-b2da-2752-965e-87f9b182ea10" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.TryWithPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="TryWithPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`5" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|TryWith|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="9de1810b-715e-aefb-d134-b531dd368d84" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.TupleGetPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="TupleGetPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|TupleGet|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="215490ee-40f3-0f9f-887e-39a67a3a500b" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.TypeTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="TypeTestPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|TypeTest|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a5fe96df-3025-bb98-0695-85dda4b2a278" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.UnionCaseTestPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="UnionCaseTestPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Reflection.UnionCaseInfo" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|UnionCaseTest|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="a52829bb-9dc7-17be-6202-3e669b79d3d9" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.ValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="ValuePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Type" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Value|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="f1d5bbb7-6905-8a05-3cc3-89a50d48c427" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.ValueWithNamePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="ValueWithNamePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`3" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Type" ref="true" />
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|ValueWithName|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3b78eb1c-53ed-8361-92b3-b24838703b07" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.VarPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="VarPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|Var|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="669fc72d-0c18-cbc2-7677-574e31cac381" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.VarSetPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="VarSetPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpVar" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|VarSet|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="5e1cb2b0-b55c-c2e8-bce9-cb14a69f2c91" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.WhileLoopPattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="WhileLoopPattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`2" ref="true">
              <specialization>
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|WhileLoop|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="3c27f051-025d-e79e-bd4f-4018dad09826" />
    </api>
    <api id="M:Microsoft.FSharp.Quotations.PatternsModule.WithValuePattern(Microsoft.FSharp.Quotations.FSharpExpr)">
      <topicdata group="api" />
      <apidata name="WithValuePattern" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Microsoft.FSharp.Core.FSharpOption`1" ref="true">
          <specialization>
            <type api="T:System.Tuple`3" ref="true">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Type" ref="true" />
                <type api="T:Microsoft.FSharp.Quotations.FSharpExpr" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="FSharp.Core" module="FSharp.Core" kind="DynamicallyLinkedLibrary">
          <assemblydata version="4.4.0.0" />
          <noAptca />
        </library>
        <namespace api="N:Microsoft.FSharp.Quotations" />
        <type api="T:Microsoft.FSharp.Quotations.PatternsModule" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Microsoft.FSharp.Core.CompilationSourceNameAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>|WithValue|_|</value>
          </argument>
        </attribute>
      </attributes>
      <file name="dedd3edf-5220-671c-61c2-a36b315d6399" />
    </api>
  </apis>
</reflection>